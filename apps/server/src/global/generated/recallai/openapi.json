{
  "openapi": "3.0.3",
  "info": {
    "title": "Recall.ai API",
    "version": "0.0.0",
    "description": "Recall.ai API Documentation"
  },
  "paths": {
    "/api/v1/analysis/job/": {
      "get": {
        "operationId": "analysis_job_list",
        "description": "Get a list of all jobs.",
        "summary": "List Jobs",
        "parameters": [
          {
            "in": "query",
            "name": "created_at_after",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "in": "query",
            "name": "created_at_before",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "cursor",
            "required": false,
            "in": "query",
            "description": "The pagination cursor value.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "completed",
                  "errored",
                  "in_progress"
                ]
              }
            },
            "explode": true,
            "style": "form"
          }
        ],
        "tags": [
          "analysis"
        ],
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next": {
                      "type": "string",
                      "nullable": true
                    },
                    "previous": {
                      "type": "string",
                      "nullable": true
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "readOnly": true
                          },
                          "name": {
                            "type": "string",
                            "readOnly": true,
                            "nullable": true
                          },
                          "status": {
                            "enum": [
                              "in_progress",
                              "completed",
                              "errored"
                            ],
                            "type": "string"
                          },
                          "errors": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "additionalProperties": {}
                            },
                            "readOnly": true
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          }
                        },
                        "required": [
                          "created_at",
                          "errors",
                          "id",
                          "name",
                          "status"
                        ]
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v1/analysis/job/{id}/": {
      "get": {
        "operationId": "analysis_job_retrieve",
        "description": "Get a job.",
        "summary": "Retrieve Job",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "A UUID string identifying this job.",
            "required": true
          }
        ],
        "tags": [
          "analysis"
        ],
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "readOnly": true
                    },
                    "name": {
                      "type": "string",
                      "readOnly": true,
                      "nullable": true
                    },
                    "status": {
                      "enum": [
                        "in_progress",
                        "completed",
                        "errored"
                      ],
                      "type": "string"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "additionalProperties": {}
                      },
                      "readOnly": true
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true
                    }
                  },
                  "required": [
                    "created_at",
                    "errors",
                    "id",
                    "name",
                    "status"
                  ]
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v1/billing/usage/": {
      "get": {
        "operationId": "billing_usage_retrieve",
        "description": "Get bot usage statistics",
        "summary": "Get Usage",
        "parameters": [
          {
            "in": "query",
            "name": "end",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "in": "query",
            "name": "start",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "tags": [
          "billing"
        ],
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "bot_total": {
                      "type": "number",
                      "format": "double",
                      "description": "The total amount of time, in seconds, of bots used."
                    }
                  },
                  "required": [
                    "bot_total"
                  ]
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v1/bot/": {
      "get": {
        "operationId": "bot_list",
        "description": "Get a list of all bots",
        "summary": "List Bots",
        "parameters": [
          {
            "in": "query",
            "name": "join_at_after",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "in": "query",
            "name": "join_at_before",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "bot"
        ],
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "example": 123
                    },
                    "next": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "readOnly": true
                          },
                          "video_url": {
                            "type": "string",
                            "format": "uri",
                            "readOnly": true,
                            "description": "A URL where the video recorded by the bot can be downloaded. This is null while the recording is in progress, and will be populated when the recording is completed. The returned URL is valid for 6 hours from the API call. A fresh URL can be obtained at any point by calling the API again."
                          },
                          "recording": {
                            "type": "string",
                            "format": "uuid",
                            "nullable": true
                          },
                          "media_retention_end": {
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "description": "After this date the video and transcript will be deleted. This date is 7 days from when the recording ended."
                          },
                          "status_changes": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "code": {
                                  "type": "string",
                                  "readOnly": true
                                },
                                "message": {
                                  "type": "string",
                                  "readOnly": true
                                },
                                "created_at": {
                                  "type": "string",
                                  "format": "date-time",
                                  "readOnly": true
                                },
                                "sub_code": {
                                  "type": "string",
                                  "readOnly": true
                                }
                              },
                              "required": [
                                "code",
                                "created_at",
                                "message",
                                "sub_code"
                              ]
                            },
                            "readOnly": true
                          },
                          "meeting_metadata": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "title": {
                                    "type": "string",
                                    "readOnly": true,
                                    "description": "The title of the meeting the bot has joined."
                                  }
                                },
                                "required": [
                                  "title"
                                ]
                              }
                            ],
                            "readOnly": true,
                            "nullable": true
                          },
                          "meeting_participants": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "readOnly": true
                                },
                                "name": {
                                  "type": "string",
                                  "readOnly": true
                                },
                                "events": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "code": {
                                        "type": "string",
                                        "readOnly": true
                                      },
                                      "created_at": {
                                        "type": "string",
                                        "format": "date-time",
                                        "readOnly": true
                                      }
                                    },
                                    "required": [
                                      "code",
                                      "created_at"
                                    ]
                                  },
                                  "readOnly": true
                                }
                              },
                              "required": [
                                "events",
                                "id",
                                "name"
                              ]
                            },
                            "readOnly": true
                          },
                          "meeting_url": {
                            "type": "string",
                            "nullable": true,
                            "description": "The url of the meeting. For example, https://zoom.us/j/123?pwd=456. This field can only be read from scheduled bots that have not yet joined a call. Once a bot has joined a call, it's meeting_url will be cleared."
                          },
                          "bot_name": {
                            "type": "string",
                            "writeOnly": true,
                            "default": "Meeting Notetaker",
                            "description": "The name of the bot that will be displayed in the call.",
                            "maxLength": 100
                          },
                          "join_at": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true,
                            "description": "The time at which the bot will join the call, formatted in ISO 8601. This field can only be read from scheduled bots that have not yet joined a call. Once a bot has joined a call, it's join_at will be cleared."
                          },
                          "real_time_transcription": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "destination_url": {
                                    "type": "string",
                                    "format": "uri"
                                  },
                                  "partial_results": {
                                    "type": "boolean",
                                    "default": false
                                  }
                                },
                                "required": [
                                  "destination_url"
                                ]
                              }
                            ],
                            "writeOnly": true,
                            "description": "The settings for real-time transcription."
                          },
                          "real_time_media": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "rtmp_destination_url": {
                                    "type": "string"
                                  },
                                  "websocket_video_destination_url": {
                                    "type": "string"
                                  },
                                  "websocket_audio_destination_url": {
                                    "type": "string"
                                  },
                                  "websocket_speaker_timeline_destination_url": {
                                    "type": "string"
                                  },
                                  "websocket_speaker_timeline_exclude_null_speaker": {
                                    "type": "boolean",
                                    "default": true,
                                    "description": "Set to false to include null active speaker events in the speaker timeline websocket. Defaults to true."
                                  },
                                  "webhook_call_events_destination_url": {
                                    "type": "string",
                                    "description": "(BETA) Receive webhooks for in call events('bot.participant_join'/'bot.participant_leave'/'bot.active_speaker_notify')"
                                  }
                                }
                              }
                            ],
                            "writeOnly": true,
                            "description": "The settings for real-time media output."
                          },
                          "transcription_options": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "provider": {
                                    "enum": [
                                      "deepgram",
                                      "assembly_ai",
                                      "rev",
                                      "aws_transcribe",
                                      "symbl",
                                      "none"
                                    ],
                                    "type": "string"
                                  },
                                  "assembly_ai": {
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "word_boost": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      }
                                    ],
                                    "title": "AssemblyAi Real-time Transcription Settings",
                                    "description": "Docs: https://www.assemblyai.com/docs/walkthroughs#realtime-streaming-transcription"
                                  },
                                  "deepgram": {
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "tier": {
                                            "type": "string"
                                          },
                                          "model": {
                                            "type": "string"
                                          },
                                          "version": {
                                            "type": "string"
                                          },
                                          "language": {
                                            "type": "string"
                                          },
                                          "profanity_filter": {
                                            "type": "boolean"
                                          },
                                          "redact": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "diarize": {
                                            "type": "boolean"
                                          },
                                          "diarize_version": {
                                            "type": "string"
                                          },
                                          "ner": {
                                            "type": "boolean"
                                          },
                                          "alternatives": {
                                            "type": "integer"
                                          },
                                          "numerals": {
                                            "type": "boolean"
                                          },
                                          "search": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "replace": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "keywords": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "interim_results": {
                                            "type": "boolean"
                                          },
                                          "endpointing": {
                                            "type": "boolean"
                                          }
                                        }
                                      }
                                    ],
                                    "title": "Deepgram Real-time Transcription Settings",
                                    "description": "Docs: https://developers.deepgram.com/api-reference/transcription/#transcribe-live-streaming-audio"
                                  },
                                  "rev": {
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "language": {
                                            "type": "string"
                                          },
                                          "metadata": {
                                            "type": "string"
                                          },
                                          "custom_vocabulary_id": {
                                            "type": "string",
                                            "maxLength": 200
                                          },
                                          "filter_profanity": {
                                            "type": "boolean"
                                          },
                                          "remove_disfluencies": {
                                            "type": "boolean"
                                          },
                                          "delete_after_seconds": {
                                            "type": "integer"
                                          },
                                          "detailed_partials": {
                                            "type": "boolean"
                                          },
                                          "start_ts": {
                                            "type": "number",
                                            "format": "double"
                                          },
                                          "max_segment_duration_seconds": {
                                            "type": "integer"
                                          },
                                          "transcriber": {
                                            "type": "string"
                                          },
                                          "enable_speaker_switch": {
                                            "type": "boolean"
                                          },
                                          "skip_postprocessing": {
                                            "type": "boolean"
                                          },
                                          "priority": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    ],
                                    "title": "Rev Real-time Transcription Settings",
                                    "description": "Docs: https://docs.rev.ai/api/streaming/requests/"
                                  },
                                  "aws_transcribe": {
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "language_code": {
                                            "type": "string"
                                          },
                                          "content_redaction_type": {
                                            "type": "string"
                                          },
                                          "language_model_name": {
                                            "type": "string"
                                          },
                                          "language_options": {
                                            "type": "string"
                                          },
                                          "language_identification": {
                                            "type": "boolean"
                                          },
                                          "partial_results_stability": {
                                            "type": "string"
                                          },
                                          "pii_entity_types": {
                                            "type": "string"
                                          },
                                          "preferred_language": {
                                            "type": "string"
                                          },
                                          "show_speaker_label": {
                                            "type": "boolean"
                                          },
                                          "vocabulary_filter_method": {
                                            "type": "string"
                                          },
                                          "vocabulary_filter_names": {
                                            "type": "string"
                                          },
                                          "vocabulary_names": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    ],
                                    "title": "AWS Transcribe Real-time Transcription Settings",
                                    "description": "Docs: https://docs.aws.amazon.com/transcribe/latest/APIReference/API_streaming_StartStreamTranscription.html"
                                  }
                                },
                                "required": [
                                  "provider"
                                ]
                              }
                            ],
                            "writeOnly": true
                          },
                          "chat": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "on_bot_join": {
                                    "type": "object",
                                    "properties": {
                                      "send_to": {
                                        "enum": [
                                          "host",
                                          "everyone",
                                          "everyone_except_host"
                                        ],
                                        "type": "string"
                                      },
                                      "message": {
                                        "type": "string",
                                        "maxLength": 4096
                                      }
                                    },
                                    "required": [
                                      "message",
                                      "send_to"
                                    ]
                                  },
                                  "on_participant_join": {
                                    "type": "object",
                                    "properties": {
                                      "message": {
                                        "type": "string",
                                        "maxLength": 4096
                                      },
                                      "exclude_host": {
                                        "type": "boolean"
                                      }
                                    },
                                    "required": [
                                      "exclude_host",
                                      "message"
                                    ]
                                  }
                                }
                              }
                            ],
                            "writeOnly": true,
                            "description": "(BETA) Settings for the bot to send chat messages."
                          },
                          "zoom": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "join_token_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "A URL which Recall will make a GET request to, in order to retrieve the Zoom Join Token for Local Recording, which the V2 Zoom bot uses to automatically record. This token can be generated through the Zoom API. Docs: https://marketplace.zoom.us/docs/api-reference/zoom-api/methods/#operation/meetingLocalRecordingJoinToken"
                                  },
                                  "zak_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "A URL which Recall will make  GET request to, in order to retrieve the ZAK. The V1 Zoom bot uses this to join meetings that require authentication to join.This token can be generated through the Zoom API. Docs: https://marketplace.zoom.us/docs/api-reference/zoom-api/methods/#operation/userZak"
                                  }
                                }
                              }
                            ],
                            "writeOnly": true,
                            "description": "Zoom specific parameters"
                          },
                          "google_meet": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "login_required": {
                                    "type": "boolean",
                                    "nullable": true,
                                    "description": "Specify if the bot should always login to Google before joining the meeting. This value will override the default value set on bot's Google Meet login credentials on the account. When set to 'false', the bot will only login if required by the meeting."
                                  }
                                }
                              }
                            ],
                            "writeOnly": true,
                            "description": "Google Meet specific parameters"
                          },
                          "automatic_leave": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "waiting_room_timeout": {
                                    "type": "integer",
                                    "minimum": 30,
                                    "default": 1200,
                                    "description": "The number of seconds after which the bot will automatically leave the call, if it has not been let in from the waiting room."
                                  },
                                  "noone_joined_timeout": {
                                    "type": "integer",
                                    "minimum": 30,
                                    "default": 1200,
                                    "description": "(BETA) The number of seconds after which the bot will automatically leave the call, if it has joined the meeting but no other participant has joined."
                                  },
                                  "everyone_left_timeout": {
                                    "type": "integer",
                                    "minimum": 1,
                                    "default": 2,
                                    "description": "(BETA) The number of seconds after which the bot will automatically leave the call, if there were other participants in the call who have all left."
                                  }
                                }
                              }
                            ],
                            "writeOnly": true
                          },
                          "automatic_video_output": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "in_call_recording": {
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "kind": {
                                            "allOf": [
                                              {
                                                "enum": [
                                                  "jpeg"
                                                ],
                                                "type": "string"
                                              }
                                            ],
                                            "description": "The kind of data encoded in b64_data"
                                          },
                                          "b64_data": {
                                            "type": "string",
                                            "description": "Data encoded in Base64 format, using the standard alphabet (specified here: https://datatracker.ietf.org/doc/html/rfc4648#section-4)",
                                            "maxLength": 1835008
                                          }
                                        },
                                        "required": [
                                          "b64_data",
                                          "kind"
                                        ]
                                      }
                                    ],
                                    "description": "The video that will be automatically output when the bot is in the in_call_recording state"
                                  }
                                },
                                "required": [
                                  "in_call_recording"
                                ]
                              }
                            ],
                            "writeOnly": true,
                            "description": "(BETA) Settings for the bot to output video."
                          },
                          "automatic_audio_output": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "in_call_recording": {
                                    "type": "object",
                                    "properties": {
                                      "data": {
                                        "type": "object",
                                        "properties": {
                                          "kind": {
                                            "allOf": [
                                              {
                                                "enum": [
                                                  "mp3"
                                                ],
                                                "type": "string"
                                              }
                                            ],
                                            "description": "The kind of data encoded in b64_data"
                                          },
                                          "b64_data": {
                                            "type": "string",
                                            "description": "Data encoded in Base64 format, using the standard alphabet (specified here: https://datatracker.ietf.org/doc/html/rfc4648#section-4)",
                                            "maxLength": 1835008
                                          }
                                        },
                                        "required": [
                                          "b64_data",
                                          "kind"
                                        ]
                                      },
                                      "replay_on_participant_join": {
                                        "allOf": [
                                          {
                                            "type": "object",
                                            "properties": {
                                              "debounce_interval": {
                                                "type": "integer",
                                                "description": "The amount of time to wait for additional participants to join before replaying the audio."
                                              }
                                            },
                                            "required": [
                                              "debounce_interval"
                                            ]
                                          }
                                        ],
                                        "description": "Specify this parameter if you want the audio to be replayed when additional participants join the call."
                                      }
                                    },
                                    "required": [
                                      "data"
                                    ]
                                  }
                                },
                                "required": [
                                  "in_call_recording"
                                ]
                              }
                            ],
                            "writeOnly": true,
                            "description": "(BETA) Settings for the bot to output audio."
                          },
                          "calendar_meetings": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "uuid",
                                  "readOnly": true
                                },
                                "start_time": {
                                  "type": "string",
                                  "format": "date-time",
                                  "readOnly": true
                                },
                                "end_time": {
                                  "type": "string",
                                  "format": "date-time",
                                  "readOnly": true
                                },
                                "calendar_user": {
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "format": "uuid",
                                          "readOnly": true
                                        },
                                        "external_id": {
                                          "type": "string",
                                          "readOnly": true
                                        }
                                      },
                                      "required": [
                                        "external_id",
                                        "id"
                                      ]
                                    }
                                  ],
                                  "readOnly": true
                                }
                              },
                              "required": [
                                "calendar_user",
                                "end_time",
                                "id",
                                "start_time"
                              ]
                            },
                            "readOnly": true
                          },
                          "recording_mode": {
                            "allOf": [
                              {
                                "enum": [
                                  "speaker_view",
                                  "gallery_view",
                                  "gallery_view_v2"
                                ],
                                "type": "string"
                              }
                            ],
                            "writeOnly": true,
                            "default": "speaker_view",
                            "description": "The layout of the output video."
                          },
                          "recording_mode_options": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "participant_video_when_screenshare": {
                                    "allOf": [
                                      {
                                        "enum": [
                                          "hide",
                                          "beside",
                                          "overlap"
                                        ],
                                        "type": "string"
                                      }
                                    ],
                                    "description": "The layout of participant video streams when a screen is being shared. More docs: https://recallai.readme.io/reference/bot-faqs#5-what-do-the-recording-modes-look-like-when-specified-in-create-bot"
                                  }
                                },
                                "required": [
                                  "participant_video_when_screenshare"
                                ]
                              }
                            ],
                            "writeOnly": true,
                            "description": "Additional options for the output video layout."
                          }
                        },
                        "required": [
                          "calendar_meetings",
                          "id",
                          "media_retention_end",
                          "meeting_metadata",
                          "meeting_participants",
                          "meeting_url",
                          "status_changes",
                          "video_url"
                        ]
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "bot_create",
        "description": "Create a new bot.",
        "summary": "Create Bot",
        "tags": [
          "bot"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                  },
                  "video_url": {
                    "type": "string",
                    "format": "uri",
                    "readOnly": true,
                    "description": "A URL where the video recorded by the bot can be downloaded. This is null while the recording is in progress, and will be populated when the recording is completed. The returned URL is valid for 6 hours from the API call. A fresh URL can be obtained at any point by calling the API again."
                  },
                  "recording": {
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "media_retention_end": {
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true,
                    "description": "After this date the video and transcript will be deleted. This date is 7 days from when the recording ended."
                  },
                  "status_changes": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "readOnly": true
                        },
                        "message": {
                          "type": "string",
                          "readOnly": true
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        },
                        "sub_code": {
                          "type": "string",
                          "readOnly": true
                        }
                      },
                      "required": [
                        "code",
                        "created_at",
                        "message",
                        "sub_code"
                      ]
                    },
                    "readOnly": true
                  },
                  "meeting_metadata": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The title of the meeting the bot has joined."
                          }
                        },
                        "required": [
                          "title"
                        ]
                      }
                    ],
                    "readOnly": true,
                    "nullable": true
                  },
                  "meeting_participants": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "readOnly": true
                        },
                        "name": {
                          "type": "string",
                          "readOnly": true
                        },
                        "events": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "code": {
                                "type": "string",
                                "readOnly": true
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              }
                            },
                            "required": [
                              "code",
                              "created_at"
                            ]
                          },
                          "readOnly": true
                        }
                      },
                      "required": [
                        "events",
                        "id",
                        "name"
                      ]
                    },
                    "readOnly": true
                  },
                  "meeting_url": {
                    "type": "string",
                    "nullable": true,
                    "description": "The url of the meeting. For example, https://zoom.us/j/123?pwd=456. This field can only be read from scheduled bots that have not yet joined a call. Once a bot has joined a call, it's meeting_url will be cleared."
                  },
                  "bot_name": {
                    "type": "string",
                    "writeOnly": true,
                    "default": "Meeting Notetaker",
                    "description": "The name of the bot that will be displayed in the call.",
                    "maxLength": 100
                  },
                  "join_at": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true,
                    "description": "The time at which the bot will join the call, formatted in ISO 8601. This field can only be read from scheduled bots that have not yet joined a call. Once a bot has joined a call, it's join_at will be cleared."
                  },
                  "real_time_transcription": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "destination_url": {
                            "type": "string",
                            "format": "uri"
                          },
                          "partial_results": {
                            "type": "boolean",
                            "default": false
                          }
                        },
                        "required": [
                          "destination_url"
                        ]
                      }
                    ],
                    "writeOnly": true,
                    "description": "The settings for real-time transcription."
                  },
                  "real_time_media": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "rtmp_destination_url": {
                            "type": "string"
                          },
                          "websocket_video_destination_url": {
                            "type": "string"
                          },
                          "websocket_audio_destination_url": {
                            "type": "string"
                          },
                          "websocket_speaker_timeline_destination_url": {
                            "type": "string"
                          },
                          "websocket_speaker_timeline_exclude_null_speaker": {
                            "type": "boolean",
                            "default": true,
                            "description": "Set to false to include null active speaker events in the speaker timeline websocket. Defaults to true."
                          },
                          "webhook_call_events_destination_url": {
                            "type": "string",
                            "description": "(BETA) Receive webhooks for in call events('bot.participant_join'/'bot.participant_leave'/'bot.active_speaker_notify')"
                          }
                        }
                      }
                    ],
                    "writeOnly": true,
                    "description": "The settings for real-time media output."
                  },
                  "transcription_options": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "provider": {
                            "enum": [
                              "deepgram",
                              "assembly_ai",
                              "rev",
                              "aws_transcribe",
                              "symbl",
                              "none"
                            ],
                            "type": "string"
                          },
                          "assembly_ai": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "word_boost": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            ],
                            "title": "AssemblyAi Real-time Transcription Settings",
                            "description": "Docs: https://www.assemblyai.com/docs/walkthroughs#realtime-streaming-transcription"
                          },
                          "deepgram": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "tier": {
                                    "type": "string"
                                  },
                                  "model": {
                                    "type": "string"
                                  },
                                  "version": {
                                    "type": "string"
                                  },
                                  "language": {
                                    "type": "string"
                                  },
                                  "profanity_filter": {
                                    "type": "boolean"
                                  },
                                  "redact": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "diarize": {
                                    "type": "boolean"
                                  },
                                  "diarize_version": {
                                    "type": "string"
                                  },
                                  "ner": {
                                    "type": "boolean"
                                  },
                                  "alternatives": {
                                    "type": "integer"
                                  },
                                  "numerals": {
                                    "type": "boolean"
                                  },
                                  "search": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "replace": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "keywords": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "interim_results": {
                                    "type": "boolean"
                                  },
                                  "endpointing": {
                                    "type": "boolean"
                                  }
                                }
                              }
                            ],
                            "title": "Deepgram Real-time Transcription Settings",
                            "description": "Docs: https://developers.deepgram.com/api-reference/transcription/#transcribe-live-streaming-audio"
                          },
                          "rev": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "language": {
                                    "type": "string"
                                  },
                                  "metadata": {
                                    "type": "string"
                                  },
                                  "custom_vocabulary_id": {
                                    "type": "string",
                                    "maxLength": 200
                                  },
                                  "filter_profanity": {
                                    "type": "boolean"
                                  },
                                  "remove_disfluencies": {
                                    "type": "boolean"
                                  },
                                  "delete_after_seconds": {
                                    "type": "integer"
                                  },
                                  "detailed_partials": {
                                    "type": "boolean"
                                  },
                                  "start_ts": {
                                    "type": "number",
                                    "format": "double"
                                  },
                                  "max_segment_duration_seconds": {
                                    "type": "integer"
                                  },
                                  "transcriber": {
                                    "type": "string"
                                  },
                                  "enable_speaker_switch": {
                                    "type": "boolean"
                                  },
                                  "skip_postprocessing": {
                                    "type": "boolean"
                                  },
                                  "priority": {
                                    "type": "string"
                                  }
                                }
                              }
                            ],
                            "title": "Rev Real-time Transcription Settings",
                            "description": "Docs: https://docs.rev.ai/api/streaming/requests/"
                          },
                          "aws_transcribe": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "language_code": {
                                    "type": "string"
                                  },
                                  "content_redaction_type": {
                                    "type": "string"
                                  },
                                  "language_model_name": {
                                    "type": "string"
                                  },
                                  "language_options": {
                                    "type": "string"
                                  },
                                  "language_identification": {
                                    "type": "boolean"
                                  },
                                  "partial_results_stability": {
                                    "type": "string"
                                  },
                                  "pii_entity_types": {
                                    "type": "string"
                                  },
                                  "preferred_language": {
                                    "type": "string"
                                  },
                                  "show_speaker_label": {
                                    "type": "boolean"
                                  },
                                  "vocabulary_filter_method": {
                                    "type": "string"
                                  },
                                  "vocabulary_filter_names": {
                                    "type": "string"
                                  },
                                  "vocabulary_names": {
                                    "type": "string"
                                  }
                                }
                              }
                            ],
                            "title": "AWS Transcribe Real-time Transcription Settings",
                            "description": "Docs: https://docs.aws.amazon.com/transcribe/latest/APIReference/API_streaming_StartStreamTranscription.html"
                          }
                        },
                        "required": [
                          "provider"
                        ]
                      }
                    ],
                    "writeOnly": true
                  },
                  "chat": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "on_bot_join": {
                            "type": "object",
                            "properties": {
                              "send_to": {
                                "enum": [
                                  "host",
                                  "everyone",
                                  "everyone_except_host"
                                ],
                                "type": "string"
                              },
                              "message": {
                                "type": "string",
                                "maxLength": 4096
                              }
                            },
                            "required": [
                              "message",
                              "send_to"
                            ]
                          },
                          "on_participant_join": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "maxLength": 4096
                              },
                              "exclude_host": {
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "exclude_host",
                              "message"
                            ]
                          }
                        }
                      }
                    ],
                    "writeOnly": true,
                    "description": "(BETA) Settings for the bot to send chat messages."
                  },
                  "zoom": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "join_token_url": {
                            "type": "string",
                            "format": "uri",
                            "description": "A URL which Recall will make a GET request to, in order to retrieve the Zoom Join Token for Local Recording, which the V2 Zoom bot uses to automatically record. This token can be generated through the Zoom API. Docs: https://marketplace.zoom.us/docs/api-reference/zoom-api/methods/#operation/meetingLocalRecordingJoinToken"
                          },
                          "zak_url": {
                            "type": "string",
                            "format": "uri",
                            "description": "A URL which Recall will make  GET request to, in order to retrieve the ZAK. The V1 Zoom bot uses this to join meetings that require authentication to join.This token can be generated through the Zoom API. Docs: https://marketplace.zoom.us/docs/api-reference/zoom-api/methods/#operation/userZak"
                          }
                        }
                      }
                    ],
                    "writeOnly": true,
                    "description": "Zoom specific parameters"
                  },
                  "google_meet": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "login_required": {
                            "type": "boolean",
                            "nullable": true,
                            "description": "Specify if the bot should always login to Google before joining the meeting. This value will override the default value set on bot's Google Meet login credentials on the account. When set to 'false', the bot will only login if required by the meeting."
                          }
                        }
                      }
                    ],
                    "writeOnly": true,
                    "description": "Google Meet specific parameters"
                  },
                  "automatic_leave": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "waiting_room_timeout": {
                            "type": "integer",
                            "minimum": 30,
                            "default": 1200,
                            "description": "The number of seconds after which the bot will automatically leave the call, if it has not been let in from the waiting room."
                          },
                          "noone_joined_timeout": {
                            "type": "integer",
                            "minimum": 30,
                            "default": 1200,
                            "description": "(BETA) The number of seconds after which the bot will automatically leave the call, if it has joined the meeting but no other participant has joined."
                          },
                          "everyone_left_timeout": {
                            "type": "integer",
                            "minimum": 1,
                            "default": 2,
                            "description": "(BETA) The number of seconds after which the bot will automatically leave the call, if there were other participants in the call who have all left."
                          }
                        }
                      }
                    ],
                    "writeOnly": true
                  },
                  "automatic_video_output": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "in_call_recording": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "kind": {
                                    "allOf": [
                                      {
                                        "enum": [
                                          "jpeg"
                                        ],
                                        "type": "string"
                                      }
                                    ],
                                    "description": "The kind of data encoded in b64_data"
                                  },
                                  "b64_data": {
                                    "type": "string",
                                    "description": "Data encoded in Base64 format, using the standard alphabet (specified here: https://datatracker.ietf.org/doc/html/rfc4648#section-4)",
                                    "maxLength": 1835008
                                  }
                                },
                                "required": [
                                  "b64_data",
                                  "kind"
                                ]
                              }
                            ],
                            "description": "The video that will be automatically output when the bot is in the in_call_recording state"
                          }
                        },
                        "required": [
                          "in_call_recording"
                        ]
                      }
                    ],
                    "writeOnly": true,
                    "description": "(BETA) Settings for the bot to output video."
                  },
                  "automatic_audio_output": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "in_call_recording": {
                            "type": "object",
                            "properties": {
                              "data": {
                                "type": "object",
                                "properties": {
                                  "kind": {
                                    "allOf": [
                                      {
                                        "enum": [
                                          "mp3"
                                        ],
                                        "type": "string"
                                      }
                                    ],
                                    "description": "The kind of data encoded in b64_data"
                                  },
                                  "b64_data": {
                                    "type": "string",
                                    "description": "Data encoded in Base64 format, using the standard alphabet (specified here: https://datatracker.ietf.org/doc/html/rfc4648#section-4)",
                                    "maxLength": 1835008
                                  }
                                },
                                "required": [
                                  "b64_data",
                                  "kind"
                                ]
                              },
                              "replay_on_participant_join": {
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "debounce_interval": {
                                        "type": "integer",
                                        "description": "The amount of time to wait for additional participants to join before replaying the audio."
                                      }
                                    },
                                    "required": [
                                      "debounce_interval"
                                    ]
                                  }
                                ],
                                "description": "Specify this parameter if you want the audio to be replayed when additional participants join the call."
                              }
                            },
                            "required": [
                              "data"
                            ]
                          }
                        },
                        "required": [
                          "in_call_recording"
                        ]
                      }
                    ],
                    "writeOnly": true,
                    "description": "(BETA) Settings for the bot to output audio."
                  },
                  "calendar_meetings": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "readOnly": true
                        },
                        "start_time": {
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        },
                        "end_time": {
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        },
                        "calendar_user": {
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "uuid",
                                  "readOnly": true
                                },
                                "external_id": {
                                  "type": "string",
                                  "readOnly": true
                                }
                              },
                              "required": [
                                "external_id",
                                "id"
                              ]
                            }
                          ],
                          "readOnly": true
                        }
                      },
                      "required": [
                        "calendar_user",
                        "end_time",
                        "id",
                        "start_time"
                      ]
                    },
                    "readOnly": true
                  },
                  "recording_mode": {
                    "allOf": [
                      {
                        "enum": [
                          "speaker_view",
                          "gallery_view",
                          "gallery_view_v2"
                        ],
                        "type": "string"
                      }
                    ],
                    "writeOnly": true,
                    "default": "speaker_view",
                    "description": "The layout of the output video."
                  },
                  "recording_mode_options": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "participant_video_when_screenshare": {
                            "allOf": [
                              {
                                "enum": [
                                  "hide",
                                  "beside",
                                  "overlap"
                                ],
                                "type": "string"
                              }
                            ],
                            "description": "The layout of participant video streams when a screen is being shared. More docs: https://recallai.readme.io/reference/bot-faqs#5-what-do-the-recording-modes-look-like-when-specified-in-create-bot"
                          }
                        },
                        "required": [
                          "participant_video_when_screenshare"
                        ]
                      }
                    ],
                    "writeOnly": true,
                    "description": "Additional options for the output video layout."
                  }
                },
                "required": [
                  "calendar_meetings",
                  "id",
                  "media_retention_end",
                  "meeting_metadata",
                  "meeting_participants",
                  "meeting_url",
                  "status_changes",
                  "video_url"
                ]
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                  },
                  "video_url": {
                    "type": "string",
                    "format": "uri",
                    "readOnly": true,
                    "description": "A URL where the video recorded by the bot can be downloaded. This is null while the recording is in progress, and will be populated when the recording is completed. The returned URL is valid for 6 hours from the API call. A fresh URL can be obtained at any point by calling the API again."
                  },
                  "recording": {
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "media_retention_end": {
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true,
                    "description": "After this date the video and transcript will be deleted. This date is 7 days from when the recording ended."
                  },
                  "status_changes": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "readOnly": true
                        },
                        "message": {
                          "type": "string",
                          "readOnly": true
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        },
                        "sub_code": {
                          "type": "string",
                          "readOnly": true
                        }
                      },
                      "required": [
                        "code",
                        "created_at",
                        "message",
                        "sub_code"
                      ]
                    },
                    "readOnly": true
                  },
                  "meeting_metadata": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The title of the meeting the bot has joined."
                          }
                        },
                        "required": [
                          "title"
                        ]
                      }
                    ],
                    "readOnly": true,
                    "nullable": true
                  },
                  "meeting_participants": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "readOnly": true
                        },
                        "name": {
                          "type": "string",
                          "readOnly": true
                        },
                        "events": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "code": {
                                "type": "string",
                                "readOnly": true
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              }
                            },
                            "required": [
                              "code",
                              "created_at"
                            ]
                          },
                          "readOnly": true
                        }
                      },
                      "required": [
                        "events",
                        "id",
                        "name"
                      ]
                    },
                    "readOnly": true
                  },
                  "meeting_url": {
                    "type": "string",
                    "nullable": true,
                    "description": "The url of the meeting. For example, https://zoom.us/j/123?pwd=456. This field can only be read from scheduled bots that have not yet joined a call. Once a bot has joined a call, it's meeting_url will be cleared."
                  },
                  "bot_name": {
                    "type": "string",
                    "writeOnly": true,
                    "default": "Meeting Notetaker",
                    "description": "The name of the bot that will be displayed in the call.",
                    "maxLength": 100
                  },
                  "join_at": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true,
                    "description": "The time at which the bot will join the call, formatted in ISO 8601. This field can only be read from scheduled bots that have not yet joined a call. Once a bot has joined a call, it's join_at will be cleared."
                  },
                  "real_time_transcription": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "destination_url": {
                            "type": "string",
                            "format": "uri"
                          },
                          "partial_results": {
                            "type": "boolean",
                            "default": false
                          }
                        },
                        "required": [
                          "destination_url"
                        ]
                      }
                    ],
                    "writeOnly": true,
                    "description": "The settings for real-time transcription."
                  },
                  "real_time_media": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "rtmp_destination_url": {
                            "type": "string"
                          },
                          "websocket_video_destination_url": {
                            "type": "string"
                          },
                          "websocket_audio_destination_url": {
                            "type": "string"
                          },
                          "websocket_speaker_timeline_destination_url": {
                            "type": "string"
                          },
                          "websocket_speaker_timeline_exclude_null_speaker": {
                            "type": "boolean",
                            "default": true,
                            "description": "Set to false to include null active speaker events in the speaker timeline websocket. Defaults to true."
                          },
                          "webhook_call_events_destination_url": {
                            "type": "string",
                            "description": "(BETA) Receive webhooks for in call events('bot.participant_join'/'bot.participant_leave'/'bot.active_speaker_notify')"
                          }
                        }
                      }
                    ],
                    "writeOnly": true,
                    "description": "The settings for real-time media output."
                  },
                  "transcription_options": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "provider": {
                            "enum": [
                              "deepgram",
                              "assembly_ai",
                              "rev",
                              "aws_transcribe",
                              "symbl",
                              "none"
                            ],
                            "type": "string"
                          },
                          "assembly_ai": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "word_boost": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            ],
                            "title": "AssemblyAi Real-time Transcription Settings",
                            "description": "Docs: https://www.assemblyai.com/docs/walkthroughs#realtime-streaming-transcription"
                          },
                          "deepgram": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "tier": {
                                    "type": "string"
                                  },
                                  "model": {
                                    "type": "string"
                                  },
                                  "version": {
                                    "type": "string"
                                  },
                                  "language": {
                                    "type": "string"
                                  },
                                  "profanity_filter": {
                                    "type": "boolean"
                                  },
                                  "redact": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "diarize": {
                                    "type": "boolean"
                                  },
                                  "diarize_version": {
                                    "type": "string"
                                  },
                                  "ner": {
                                    "type": "boolean"
                                  },
                                  "alternatives": {
                                    "type": "integer"
                                  },
                                  "numerals": {
                                    "type": "boolean"
                                  },
                                  "search": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "replace": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "keywords": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "interim_results": {
                                    "type": "boolean"
                                  },
                                  "endpointing": {
                                    "type": "boolean"
                                  }
                                }
                              }
                            ],
                            "title": "Deepgram Real-time Transcription Settings",
                            "description": "Docs: https://developers.deepgram.com/api-reference/transcription/#transcribe-live-streaming-audio"
                          },
                          "rev": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "language": {
                                    "type": "string"
                                  },
                                  "metadata": {
                                    "type": "string"
                                  },
                                  "custom_vocabulary_id": {
                                    "type": "string",
                                    "maxLength": 200
                                  },
                                  "filter_profanity": {
                                    "type": "boolean"
                                  },
                                  "remove_disfluencies": {
                                    "type": "boolean"
                                  },
                                  "delete_after_seconds": {
                                    "type": "integer"
                                  },
                                  "detailed_partials": {
                                    "type": "boolean"
                                  },
                                  "start_ts": {
                                    "type": "number",
                                    "format": "double"
                                  },
                                  "max_segment_duration_seconds": {
                                    "type": "integer"
                                  },
                                  "transcriber": {
                                    "type": "string"
                                  },
                                  "enable_speaker_switch": {
                                    "type": "boolean"
                                  },
                                  "skip_postprocessing": {
                                    "type": "boolean"
                                  },
                                  "priority": {
                                    "type": "string"
                                  }
                                }
                              }
                            ],
                            "title": "Rev Real-time Transcription Settings",
                            "description": "Docs: https://docs.rev.ai/api/streaming/requests/"
                          },
                          "aws_transcribe": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "language_code": {
                                    "type": "string"
                                  },
                                  "content_redaction_type": {
                                    "type": "string"
                                  },
                                  "language_model_name": {
                                    "type": "string"
                                  },
                                  "language_options": {
                                    "type": "string"
                                  },
                                  "language_identification": {
                                    "type": "boolean"
                                  },
                                  "partial_results_stability": {
                                    "type": "string"
                                  },
                                  "pii_entity_types": {
                                    "type": "string"
                                  },
                                  "preferred_language": {
                                    "type": "string"
                                  },
                                  "show_speaker_label": {
                                    "type": "boolean"
                                  },
                                  "vocabulary_filter_method": {
                                    "type": "string"
                                  },
                                  "vocabulary_filter_names": {
                                    "type": "string"
                                  },
                                  "vocabulary_names": {
                                    "type": "string"
                                  }
                                }
                              }
                            ],
                            "title": "AWS Transcribe Real-time Transcription Settings",
                            "description": "Docs: https://docs.aws.amazon.com/transcribe/latest/APIReference/API_streaming_StartStreamTranscription.html"
                          }
                        },
                        "required": [
                          "provider"
                        ]
                      }
                    ],
                    "writeOnly": true
                  },
                  "chat": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "on_bot_join": {
                            "type": "object",
                            "properties": {
                              "send_to": {
                                "enum": [
                                  "host",
                                  "everyone",
                                  "everyone_except_host"
                                ],
                                "type": "string"
                              },
                              "message": {
                                "type": "string",
                                "maxLength": 4096
                              }
                            },
                            "required": [
                              "message",
                              "send_to"
                            ]
                          },
                          "on_participant_join": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "maxLength": 4096
                              },
                              "exclude_host": {
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "exclude_host",
                              "message"
                            ]
                          }
                        }
                      }
                    ],
                    "writeOnly": true,
                    "description": "(BETA) Settings for the bot to send chat messages."
                  },
                  "zoom": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "join_token_url": {
                            "type": "string",
                            "format": "uri",
                            "description": "A URL which Recall will make a GET request to, in order to retrieve the Zoom Join Token for Local Recording, which the V2 Zoom bot uses to automatically record. This token can be generated through the Zoom API. Docs: https://marketplace.zoom.us/docs/api-reference/zoom-api/methods/#operation/meetingLocalRecordingJoinToken"
                          },
                          "zak_url": {
                            "type": "string",
                            "format": "uri",
                            "description": "A URL which Recall will make  GET request to, in order to retrieve the ZAK. The V1 Zoom bot uses this to join meetings that require authentication to join.This token can be generated through the Zoom API. Docs: https://marketplace.zoom.us/docs/api-reference/zoom-api/methods/#operation/userZak"
                          }
                        }
                      }
                    ],
                    "writeOnly": true,
                    "description": "Zoom specific parameters"
                  },
                  "google_meet": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "login_required": {
                            "type": "boolean",
                            "nullable": true,
                            "description": "Specify if the bot should always login to Google before joining the meeting. This value will override the default value set on bot's Google Meet login credentials on the account. When set to 'false', the bot will only login if required by the meeting."
                          }
                        }
                      }
                    ],
                    "writeOnly": true,
                    "description": "Google Meet specific parameters"
                  },
                  "automatic_leave": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "waiting_room_timeout": {
                            "type": "integer",
                            "minimum": 30,
                            "default": 1200,
                            "description": "The number of seconds after which the bot will automatically leave the call, if it has not been let in from the waiting room."
                          },
                          "noone_joined_timeout": {
                            "type": "integer",
                            "minimum": 30,
                            "default": 1200,
                            "description": "(BETA) The number of seconds after which the bot will automatically leave the call, if it has joined the meeting but no other participant has joined."
                          },
                          "everyone_left_timeout": {
                            "type": "integer",
                            "minimum": 1,
                            "default": 2,
                            "description": "(BETA) The number of seconds after which the bot will automatically leave the call, if there were other participants in the call who have all left."
                          }
                        }
                      }
                    ],
                    "writeOnly": true
                  },
                  "automatic_video_output": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "in_call_recording": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "kind": {
                                    "allOf": [
                                      {
                                        "enum": [
                                          "jpeg"
                                        ],
                                        "type": "string"
                                      }
                                    ],
                                    "description": "The kind of data encoded in b64_data"
                                  },
                                  "b64_data": {
                                    "type": "string",
                                    "description": "Data encoded in Base64 format, using the standard alphabet (specified here: https://datatracker.ietf.org/doc/html/rfc4648#section-4)",
                                    "maxLength": 1835008
                                  }
                                },
                                "required": [
                                  "b64_data",
                                  "kind"
                                ]
                              }
                            ],
                            "description": "The video that will be automatically output when the bot is in the in_call_recording state"
                          }
                        },
                        "required": [
                          "in_call_recording"
                        ]
                      }
                    ],
                    "writeOnly": true,
                    "description": "(BETA) Settings for the bot to output video."
                  },
                  "automatic_audio_output": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "in_call_recording": {
                            "type": "object",
                            "properties": {
                              "data": {
                                "type": "object",
                                "properties": {
                                  "kind": {
                                    "allOf": [
                                      {
                                        "enum": [
                                          "mp3"
                                        ],
                                        "type": "string"
                                      }
                                    ],
                                    "description": "The kind of data encoded in b64_data"
                                  },
                                  "b64_data": {
                                    "type": "string",
                                    "description": "Data encoded in Base64 format, using the standard alphabet (specified here: https://datatracker.ietf.org/doc/html/rfc4648#section-4)",
                                    "maxLength": 1835008
                                  }
                                },
                                "required": [
                                  "b64_data",
                                  "kind"
                                ]
                              },
                              "replay_on_participant_join": {
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "debounce_interval": {
                                        "type": "integer",
                                        "description": "The amount of time to wait for additional participants to join before replaying the audio."
                                      }
                                    },
                                    "required": [
                                      "debounce_interval"
                                    ]
                                  }
                                ],
                                "description": "Specify this parameter if you want the audio to be replayed when additional participants join the call."
                              }
                            },
                            "required": [
                              "data"
                            ]
                          }
                        },
                        "required": [
                          "in_call_recording"
                        ]
                      }
                    ],
                    "writeOnly": true,
                    "description": "(BETA) Settings for the bot to output audio."
                  },
                  "calendar_meetings": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "readOnly": true
                        },
                        "start_time": {
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        },
                        "end_time": {
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        },
                        "calendar_user": {
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "uuid",
                                  "readOnly": true
                                },
                                "external_id": {
                                  "type": "string",
                                  "readOnly": true
                                }
                              },
                              "required": [
                                "external_id",
                                "id"
                              ]
                            }
                          ],
                          "readOnly": true
                        }
                      },
                      "required": [
                        "calendar_user",
                        "end_time",
                        "id",
                        "start_time"
                      ]
                    },
                    "readOnly": true
                  },
                  "recording_mode": {
                    "allOf": [
                      {
                        "enum": [
                          "speaker_view",
                          "gallery_view",
                          "gallery_view_v2"
                        ],
                        "type": "string"
                      }
                    ],
                    "writeOnly": true,
                    "default": "speaker_view",
                    "description": "The layout of the output video."
                  },
                  "recording_mode_options": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "participant_video_when_screenshare": {
                            "allOf": [
                              {
                                "enum": [
                                  "hide",
                                  "beside",
                                  "overlap"
                                ],
                                "type": "string"
                              }
                            ],
                            "description": "The layout of participant video streams when a screen is being shared. More docs: https://recallai.readme.io/reference/bot-faqs#5-what-do-the-recording-modes-look-like-when-specified-in-create-bot"
                          }
                        },
                        "required": [
                          "participant_video_when_screenshare"
                        ]
                      }
                    ],
                    "writeOnly": true,
                    "description": "Additional options for the output video layout."
                  }
                },
                "required": [
                  "calendar_meetings",
                  "id",
                  "media_retention_end",
                  "meeting_metadata",
                  "meeting_participants",
                  "meeting_url",
                  "status_changes",
                  "video_url"
                ]
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                  },
                  "video_url": {
                    "type": "string",
                    "format": "uri",
                    "readOnly": true,
                    "description": "A URL where the video recorded by the bot can be downloaded. This is null while the recording is in progress, and will be populated when the recording is completed. The returned URL is valid for 6 hours from the API call. A fresh URL can be obtained at any point by calling the API again."
                  },
                  "recording": {
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "media_retention_end": {
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true,
                    "description": "After this date the video and transcript will be deleted. This date is 7 days from when the recording ended."
                  },
                  "status_changes": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "readOnly": true
                        },
                        "message": {
                          "type": "string",
                          "readOnly": true
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        },
                        "sub_code": {
                          "type": "string",
                          "readOnly": true
                        }
                      },
                      "required": [
                        "code",
                        "created_at",
                        "message",
                        "sub_code"
                      ]
                    },
                    "readOnly": true
                  },
                  "meeting_metadata": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The title of the meeting the bot has joined."
                          }
                        },
                        "required": [
                          "title"
                        ]
                      }
                    ],
                    "readOnly": true,
                    "nullable": true
                  },
                  "meeting_participants": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "readOnly": true
                        },
                        "name": {
                          "type": "string",
                          "readOnly": true
                        },
                        "events": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "code": {
                                "type": "string",
                                "readOnly": true
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              }
                            },
                            "required": [
                              "code",
                              "created_at"
                            ]
                          },
                          "readOnly": true
                        }
                      },
                      "required": [
                        "events",
                        "id",
                        "name"
                      ]
                    },
                    "readOnly": true
                  },
                  "meeting_url": {
                    "type": "string",
                    "nullable": true,
                    "description": "The url of the meeting. For example, https://zoom.us/j/123?pwd=456. This field can only be read from scheduled bots that have not yet joined a call. Once a bot has joined a call, it's meeting_url will be cleared."
                  },
                  "bot_name": {
                    "type": "string",
                    "writeOnly": true,
                    "default": "Meeting Notetaker",
                    "description": "The name of the bot that will be displayed in the call.",
                    "maxLength": 100
                  },
                  "join_at": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true,
                    "description": "The time at which the bot will join the call, formatted in ISO 8601. This field can only be read from scheduled bots that have not yet joined a call. Once a bot has joined a call, it's join_at will be cleared."
                  },
                  "real_time_transcription": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "destination_url": {
                            "type": "string",
                            "format": "uri"
                          },
                          "partial_results": {
                            "type": "boolean",
                            "default": false
                          }
                        },
                        "required": [
                          "destination_url"
                        ]
                      }
                    ],
                    "writeOnly": true,
                    "description": "The settings for real-time transcription."
                  },
                  "real_time_media": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "rtmp_destination_url": {
                            "type": "string"
                          },
                          "websocket_video_destination_url": {
                            "type": "string"
                          },
                          "websocket_audio_destination_url": {
                            "type": "string"
                          },
                          "websocket_speaker_timeline_destination_url": {
                            "type": "string"
                          },
                          "websocket_speaker_timeline_exclude_null_speaker": {
                            "type": "boolean",
                            "default": true,
                            "description": "Set to false to include null active speaker events in the speaker timeline websocket. Defaults to true."
                          },
                          "webhook_call_events_destination_url": {
                            "type": "string",
                            "description": "(BETA) Receive webhooks for in call events('bot.participant_join'/'bot.participant_leave'/'bot.active_speaker_notify')"
                          }
                        }
                      }
                    ],
                    "writeOnly": true,
                    "description": "The settings for real-time media output."
                  },
                  "transcription_options": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "provider": {
                            "enum": [
                              "deepgram",
                              "assembly_ai",
                              "rev",
                              "aws_transcribe",
                              "symbl",
                              "none"
                            ],
                            "type": "string"
                          },
                          "assembly_ai": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "word_boost": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            ],
                            "title": "AssemblyAi Real-time Transcription Settings",
                            "description": "Docs: https://www.assemblyai.com/docs/walkthroughs#realtime-streaming-transcription"
                          },
                          "deepgram": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "tier": {
                                    "type": "string"
                                  },
                                  "model": {
                                    "type": "string"
                                  },
                                  "version": {
                                    "type": "string"
                                  },
                                  "language": {
                                    "type": "string"
                                  },
                                  "profanity_filter": {
                                    "type": "boolean"
                                  },
                                  "redact": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "diarize": {
                                    "type": "boolean"
                                  },
                                  "diarize_version": {
                                    "type": "string"
                                  },
                                  "ner": {
                                    "type": "boolean"
                                  },
                                  "alternatives": {
                                    "type": "integer"
                                  },
                                  "numerals": {
                                    "type": "boolean"
                                  },
                                  "search": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "replace": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "keywords": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "interim_results": {
                                    "type": "boolean"
                                  },
                                  "endpointing": {
                                    "type": "boolean"
                                  }
                                }
                              }
                            ],
                            "title": "Deepgram Real-time Transcription Settings",
                            "description": "Docs: https://developers.deepgram.com/api-reference/transcription/#transcribe-live-streaming-audio"
                          },
                          "rev": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "language": {
                                    "type": "string"
                                  },
                                  "metadata": {
                                    "type": "string"
                                  },
                                  "custom_vocabulary_id": {
                                    "type": "string",
                                    "maxLength": 200
                                  },
                                  "filter_profanity": {
                                    "type": "boolean"
                                  },
                                  "remove_disfluencies": {
                                    "type": "boolean"
                                  },
                                  "delete_after_seconds": {
                                    "type": "integer"
                                  },
                                  "detailed_partials": {
                                    "type": "boolean"
                                  },
                                  "start_ts": {
                                    "type": "number",
                                    "format": "double"
                                  },
                                  "max_segment_duration_seconds": {
                                    "type": "integer"
                                  },
                                  "transcriber": {
                                    "type": "string"
                                  },
                                  "enable_speaker_switch": {
                                    "type": "boolean"
                                  },
                                  "skip_postprocessing": {
                                    "type": "boolean"
                                  },
                                  "priority": {
                                    "type": "string"
                                  }
                                }
                              }
                            ],
                            "title": "Rev Real-time Transcription Settings",
                            "description": "Docs: https://docs.rev.ai/api/streaming/requests/"
                          },
                          "aws_transcribe": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "language_code": {
                                    "type": "string"
                                  },
                                  "content_redaction_type": {
                                    "type": "string"
                                  },
                                  "language_model_name": {
                                    "type": "string"
                                  },
                                  "language_options": {
                                    "type": "string"
                                  },
                                  "language_identification": {
                                    "type": "boolean"
                                  },
                                  "partial_results_stability": {
                                    "type": "string"
                                  },
                                  "pii_entity_types": {
                                    "type": "string"
                                  },
                                  "preferred_language": {
                                    "type": "string"
                                  },
                                  "show_speaker_label": {
                                    "type": "boolean"
                                  },
                                  "vocabulary_filter_method": {
                                    "type": "string"
                                  },
                                  "vocabulary_filter_names": {
                                    "type": "string"
                                  },
                                  "vocabulary_names": {
                                    "type": "string"
                                  }
                                }
                              }
                            ],
                            "title": "AWS Transcribe Real-time Transcription Settings",
                            "description": "Docs: https://docs.aws.amazon.com/transcribe/latest/APIReference/API_streaming_StartStreamTranscription.html"
                          }
                        },
                        "required": [
                          "provider"
                        ]
                      }
                    ],
                    "writeOnly": true
                  },
                  "chat": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "on_bot_join": {
                            "type": "object",
                            "properties": {
                              "send_to": {
                                "enum": [
                                  "host",
                                  "everyone",
                                  "everyone_except_host"
                                ],
                                "type": "string"
                              },
                              "message": {
                                "type": "string",
                                "maxLength": 4096
                              }
                            },
                            "required": [
                              "message",
                              "send_to"
                            ]
                          },
                          "on_participant_join": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "maxLength": 4096
                              },
                              "exclude_host": {
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "exclude_host",
                              "message"
                            ]
                          }
                        }
                      }
                    ],
                    "writeOnly": true,
                    "description": "(BETA) Settings for the bot to send chat messages."
                  },
                  "zoom": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "join_token_url": {
                            "type": "string",
                            "format": "uri",
                            "description": "A URL which Recall will make a GET request to, in order to retrieve the Zoom Join Token for Local Recording, which the V2 Zoom bot uses to automatically record. This token can be generated through the Zoom API. Docs: https://marketplace.zoom.us/docs/api-reference/zoom-api/methods/#operation/meetingLocalRecordingJoinToken"
                          },
                          "zak_url": {
                            "type": "string",
                            "format": "uri",
                            "description": "A URL which Recall will make  GET request to, in order to retrieve the ZAK. The V1 Zoom bot uses this to join meetings that require authentication to join.This token can be generated through the Zoom API. Docs: https://marketplace.zoom.us/docs/api-reference/zoom-api/methods/#operation/userZak"
                          }
                        }
                      }
                    ],
                    "writeOnly": true,
                    "description": "Zoom specific parameters"
                  },
                  "google_meet": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "login_required": {
                            "type": "boolean",
                            "nullable": true,
                            "description": "Specify if the bot should always login to Google before joining the meeting. This value will override the default value set on bot's Google Meet login credentials on the account. When set to 'false', the bot will only login if required by the meeting."
                          }
                        }
                      }
                    ],
                    "writeOnly": true,
                    "description": "Google Meet specific parameters"
                  },
                  "automatic_leave": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "waiting_room_timeout": {
                            "type": "integer",
                            "minimum": 30,
                            "default": 1200,
                            "description": "The number of seconds after which the bot will automatically leave the call, if it has not been let in from the waiting room."
                          },
                          "noone_joined_timeout": {
                            "type": "integer",
                            "minimum": 30,
                            "default": 1200,
                            "description": "(BETA) The number of seconds after which the bot will automatically leave the call, if it has joined the meeting but no other participant has joined."
                          },
                          "everyone_left_timeout": {
                            "type": "integer",
                            "minimum": 1,
                            "default": 2,
                            "description": "(BETA) The number of seconds after which the bot will automatically leave the call, if there were other participants in the call who have all left."
                          }
                        }
                      }
                    ],
                    "writeOnly": true
                  },
                  "automatic_video_output": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "in_call_recording": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "kind": {
                                    "allOf": [
                                      {
                                        "enum": [
                                          "jpeg"
                                        ],
                                        "type": "string"
                                      }
                                    ],
                                    "description": "The kind of data encoded in b64_data"
                                  },
                                  "b64_data": {
                                    "type": "string",
                                    "description": "Data encoded in Base64 format, using the standard alphabet (specified here: https://datatracker.ietf.org/doc/html/rfc4648#section-4)",
                                    "maxLength": 1835008
                                  }
                                },
                                "required": [
                                  "b64_data",
                                  "kind"
                                ]
                              }
                            ],
                            "description": "The video that will be automatically output when the bot is in the in_call_recording state"
                          }
                        },
                        "required": [
                          "in_call_recording"
                        ]
                      }
                    ],
                    "writeOnly": true,
                    "description": "(BETA) Settings for the bot to output video."
                  },
                  "automatic_audio_output": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "in_call_recording": {
                            "type": "object",
                            "properties": {
                              "data": {
                                "type": "object",
                                "properties": {
                                  "kind": {
                                    "allOf": [
                                      {
                                        "enum": [
                                          "mp3"
                                        ],
                                        "type": "string"
                                      }
                                    ],
                                    "description": "The kind of data encoded in b64_data"
                                  },
                                  "b64_data": {
                                    "type": "string",
                                    "description": "Data encoded in Base64 format, using the standard alphabet (specified here: https://datatracker.ietf.org/doc/html/rfc4648#section-4)",
                                    "maxLength": 1835008
                                  }
                                },
                                "required": [
                                  "b64_data",
                                  "kind"
                                ]
                              },
                              "replay_on_participant_join": {
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "debounce_interval": {
                                        "type": "integer",
                                        "description": "The amount of time to wait for additional participants to join before replaying the audio."
                                      }
                                    },
                                    "required": [
                                      "debounce_interval"
                                    ]
                                  }
                                ],
                                "description": "Specify this parameter if you want the audio to be replayed when additional participants join the call."
                              }
                            },
                            "required": [
                              "data"
                            ]
                          }
                        },
                        "required": [
                          "in_call_recording"
                        ]
                      }
                    ],
                    "writeOnly": true,
                    "description": "(BETA) Settings for the bot to output audio."
                  },
                  "calendar_meetings": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "readOnly": true
                        },
                        "start_time": {
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        },
                        "end_time": {
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        },
                        "calendar_user": {
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "uuid",
                                  "readOnly": true
                                },
                                "external_id": {
                                  "type": "string",
                                  "readOnly": true
                                }
                              },
                              "required": [
                                "external_id",
                                "id"
                              ]
                            }
                          ],
                          "readOnly": true
                        }
                      },
                      "required": [
                        "calendar_user",
                        "end_time",
                        "id",
                        "start_time"
                      ]
                    },
                    "readOnly": true
                  },
                  "recording_mode": {
                    "allOf": [
                      {
                        "enum": [
                          "speaker_view",
                          "gallery_view",
                          "gallery_view_v2"
                        ],
                        "type": "string"
                      }
                    ],
                    "writeOnly": true,
                    "default": "speaker_view",
                    "description": "The layout of the output video."
                  },
                  "recording_mode_options": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "participant_video_when_screenshare": {
                            "allOf": [
                              {
                                "enum": [
                                  "hide",
                                  "beside",
                                  "overlap"
                                ],
                                "type": "string"
                              }
                            ],
                            "description": "The layout of participant video streams when a screen is being shared. More docs: https://recallai.readme.io/reference/bot-faqs#5-what-do-the-recording-modes-look-like-when-specified-in-create-bot"
                          }
                        },
                        "required": [
                          "participant_video_when_screenshare"
                        ]
                      }
                    ],
                    "writeOnly": true,
                    "description": "Additional options for the output video layout."
                  }
                },
                "required": [
                  "calendar_meetings",
                  "id",
                  "media_retention_end",
                  "meeting_metadata",
                  "meeting_participants",
                  "meeting_url",
                  "status_changes",
                  "video_url"
                ]
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "readOnly": true
                    },
                    "video_url": {
                      "type": "string",
                      "format": "uri",
                      "readOnly": true,
                      "description": "A URL where the video recorded by the bot can be downloaded. This is null while the recording is in progress, and will be populated when the recording is completed. The returned URL is valid for 6 hours from the API call. A fresh URL can be obtained at any point by calling the API again."
                    },
                    "recording": {
                      "type": "string",
                      "format": "uuid",
                      "nullable": true
                    },
                    "media_retention_end": {
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "description": "After this date the video and transcript will be deleted. This date is 7 days from when the recording ended."
                    },
                    "status_changes": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "string",
                            "readOnly": true
                          },
                          "message": {
                            "type": "string",
                            "readOnly": true
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          },
                          "sub_code": {
                            "type": "string",
                            "readOnly": true
                          }
                        },
                        "required": [
                          "code",
                          "created_at",
                          "message",
                          "sub_code"
                        ]
                      },
                      "readOnly": true
                    },
                    "meeting_metadata": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "title": {
                              "type": "string",
                              "readOnly": true,
                              "description": "The title of the meeting the bot has joined."
                            }
                          },
                          "required": [
                            "title"
                          ]
                        }
                      ],
                      "readOnly": true,
                      "nullable": true
                    },
                    "meeting_participants": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "readOnly": true
                          },
                          "name": {
                            "type": "string",
                            "readOnly": true
                          },
                          "events": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "code": {
                                  "type": "string",
                                  "readOnly": true
                                },
                                "created_at": {
                                  "type": "string",
                                  "format": "date-time",
                                  "readOnly": true
                                }
                              },
                              "required": [
                                "code",
                                "created_at"
                              ]
                            },
                            "readOnly": true
                          }
                        },
                        "required": [
                          "events",
                          "id",
                          "name"
                        ]
                      },
                      "readOnly": true
                    },
                    "meeting_url": {
                      "type": "string",
                      "nullable": true,
                      "description": "The url of the meeting. For example, https://zoom.us/j/123?pwd=456. This field can only be read from scheduled bots that have not yet joined a call. Once a bot has joined a call, it's meeting_url will be cleared."
                    },
                    "bot_name": {
                      "type": "string",
                      "writeOnly": true,
                      "default": "Meeting Notetaker",
                      "description": "The name of the bot that will be displayed in the call.",
                      "maxLength": 100
                    },
                    "join_at": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true,
                      "description": "The time at which the bot will join the call, formatted in ISO 8601. This field can only be read from scheduled bots that have not yet joined a call. Once a bot has joined a call, it's join_at will be cleared."
                    },
                    "real_time_transcription": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "destination_url": {
                              "type": "string",
                              "format": "uri"
                            },
                            "partial_results": {
                              "type": "boolean",
                              "default": false
                            }
                          },
                          "required": [
                            "destination_url"
                          ]
                        }
                      ],
                      "writeOnly": true,
                      "description": "The settings for real-time transcription."
                    },
                    "real_time_media": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "rtmp_destination_url": {
                              "type": "string"
                            },
                            "websocket_video_destination_url": {
                              "type": "string"
                            },
                            "websocket_audio_destination_url": {
                              "type": "string"
                            },
                            "websocket_speaker_timeline_destination_url": {
                              "type": "string"
                            },
                            "websocket_speaker_timeline_exclude_null_speaker": {
                              "type": "boolean",
                              "default": true,
                              "description": "Set to false to include null active speaker events in the speaker timeline websocket. Defaults to true."
                            },
                            "webhook_call_events_destination_url": {
                              "type": "string",
                              "description": "(BETA) Receive webhooks for in call events('bot.participant_join'/'bot.participant_leave'/'bot.active_speaker_notify')"
                            }
                          }
                        }
                      ],
                      "writeOnly": true,
                      "description": "The settings for real-time media output."
                    },
                    "transcription_options": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "provider": {
                              "enum": [
                                "deepgram",
                                "assembly_ai",
                                "rev",
                                "aws_transcribe",
                                "symbl",
                                "none"
                              ],
                              "type": "string"
                            },
                            "assembly_ai": {
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "word_boost": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              ],
                              "title": "AssemblyAi Real-time Transcription Settings",
                              "description": "Docs: https://www.assemblyai.com/docs/walkthroughs#realtime-streaming-transcription"
                            },
                            "deepgram": {
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "tier": {
                                      "type": "string"
                                    },
                                    "model": {
                                      "type": "string"
                                    },
                                    "version": {
                                      "type": "string"
                                    },
                                    "language": {
                                      "type": "string"
                                    },
                                    "profanity_filter": {
                                      "type": "boolean"
                                    },
                                    "redact": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "diarize": {
                                      "type": "boolean"
                                    },
                                    "diarize_version": {
                                      "type": "string"
                                    },
                                    "ner": {
                                      "type": "boolean"
                                    },
                                    "alternatives": {
                                      "type": "integer"
                                    },
                                    "numerals": {
                                      "type": "boolean"
                                    },
                                    "search": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "replace": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "keywords": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "interim_results": {
                                      "type": "boolean"
                                    },
                                    "endpointing": {
                                      "type": "boolean"
                                    }
                                  }
                                }
                              ],
                              "title": "Deepgram Real-time Transcription Settings",
                              "description": "Docs: https://developers.deepgram.com/api-reference/transcription/#transcribe-live-streaming-audio"
                            },
                            "rev": {
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "language": {
                                      "type": "string"
                                    },
                                    "metadata": {
                                      "type": "string"
                                    },
                                    "custom_vocabulary_id": {
                                      "type": "string",
                                      "maxLength": 200
                                    },
                                    "filter_profanity": {
                                      "type": "boolean"
                                    },
                                    "remove_disfluencies": {
                                      "type": "boolean"
                                    },
                                    "delete_after_seconds": {
                                      "type": "integer"
                                    },
                                    "detailed_partials": {
                                      "type": "boolean"
                                    },
                                    "start_ts": {
                                      "type": "number",
                                      "format": "double"
                                    },
                                    "max_segment_duration_seconds": {
                                      "type": "integer"
                                    },
                                    "transcriber": {
                                      "type": "string"
                                    },
                                    "enable_speaker_switch": {
                                      "type": "boolean"
                                    },
                                    "skip_postprocessing": {
                                      "type": "boolean"
                                    },
                                    "priority": {
                                      "type": "string"
                                    }
                                  }
                                }
                              ],
                              "title": "Rev Real-time Transcription Settings",
                              "description": "Docs: https://docs.rev.ai/api/streaming/requests/"
                            },
                            "aws_transcribe": {
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "language_code": {
                                      "type": "string"
                                    },
                                    "content_redaction_type": {
                                      "type": "string"
                                    },
                                    "language_model_name": {
                                      "type": "string"
                                    },
                                    "language_options": {
                                      "type": "string"
                                    },
                                    "language_identification": {
                                      "type": "boolean"
                                    },
                                    "partial_results_stability": {
                                      "type": "string"
                                    },
                                    "pii_entity_types": {
                                      "type": "string"
                                    },
                                    "preferred_language": {
                                      "type": "string"
                                    },
                                    "show_speaker_label": {
                                      "type": "boolean"
                                    },
                                    "vocabulary_filter_method": {
                                      "type": "string"
                                    },
                                    "vocabulary_filter_names": {
                                      "type": "string"
                                    },
                                    "vocabulary_names": {
                                      "type": "string"
                                    }
                                  }
                                }
                              ],
                              "title": "AWS Transcribe Real-time Transcription Settings",
                              "description": "Docs: https://docs.aws.amazon.com/transcribe/latest/APIReference/API_streaming_StartStreamTranscription.html"
                            }
                          },
                          "required": [
                            "provider"
                          ]
                        }
                      ],
                      "writeOnly": true
                    },
                    "chat": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "on_bot_join": {
                              "type": "object",
                              "properties": {
                                "send_to": {
                                  "enum": [
                                    "host",
                                    "everyone",
                                    "everyone_except_host"
                                  ],
                                  "type": "string"
                                },
                                "message": {
                                  "type": "string",
                                  "maxLength": 4096
                                }
                              },
                              "required": [
                                "message",
                                "send_to"
                              ]
                            },
                            "on_participant_join": {
                              "type": "object",
                              "properties": {
                                "message": {
                                  "type": "string",
                                  "maxLength": 4096
                                },
                                "exclude_host": {
                                  "type": "boolean"
                                }
                              },
                              "required": [
                                "exclude_host",
                                "message"
                              ]
                            }
                          }
                        }
                      ],
                      "writeOnly": true,
                      "description": "(BETA) Settings for the bot to send chat messages."
                    },
                    "zoom": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "join_token_url": {
                              "type": "string",
                              "format": "uri",
                              "description": "A URL which Recall will make a GET request to, in order to retrieve the Zoom Join Token for Local Recording, which the V2 Zoom bot uses to automatically record. This token can be generated through the Zoom API. Docs: https://marketplace.zoom.us/docs/api-reference/zoom-api/methods/#operation/meetingLocalRecordingJoinToken"
                            },
                            "zak_url": {
                              "type": "string",
                              "format": "uri",
                              "description": "A URL which Recall will make  GET request to, in order to retrieve the ZAK. The V1 Zoom bot uses this to join meetings that require authentication to join.This token can be generated through the Zoom API. Docs: https://marketplace.zoom.us/docs/api-reference/zoom-api/methods/#operation/userZak"
                            }
                          }
                        }
                      ],
                      "writeOnly": true,
                      "description": "Zoom specific parameters"
                    },
                    "google_meet": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "login_required": {
                              "type": "boolean",
                              "nullable": true,
                              "description": "Specify if the bot should always login to Google before joining the meeting. This value will override the default value set on bot's Google Meet login credentials on the account. When set to 'false', the bot will only login if required by the meeting."
                            }
                          }
                        }
                      ],
                      "writeOnly": true,
                      "description": "Google Meet specific parameters"
                    },
                    "automatic_leave": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "waiting_room_timeout": {
                              "type": "integer",
                              "minimum": 30,
                              "default": 1200,
                              "description": "The number of seconds after which the bot will automatically leave the call, if it has not been let in from the waiting room."
                            },
                            "noone_joined_timeout": {
                              "type": "integer",
                              "minimum": 30,
                              "default": 1200,
                              "description": "(BETA) The number of seconds after which the bot will automatically leave the call, if it has joined the meeting but no other participant has joined."
                            },
                            "everyone_left_timeout": {
                              "type": "integer",
                              "minimum": 1,
                              "default": 2,
                              "description": "(BETA) The number of seconds after which the bot will automatically leave the call, if there were other participants in the call who have all left."
                            }
                          }
                        }
                      ],
                      "writeOnly": true
                    },
                    "automatic_video_output": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "in_call_recording": {
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "kind": {
                                      "allOf": [
                                        {
                                          "enum": [
                                            "jpeg"
                                          ],
                                          "type": "string"
                                        }
                                      ],
                                      "description": "The kind of data encoded in b64_data"
                                    },
                                    "b64_data": {
                                      "type": "string",
                                      "description": "Data encoded in Base64 format, using the standard alphabet (specified here: https://datatracker.ietf.org/doc/html/rfc4648#section-4)",
                                      "maxLength": 1835008
                                    }
                                  },
                                  "required": [
                                    "b64_data",
                                    "kind"
                                  ]
                                }
                              ],
                              "description": "The video that will be automatically output when the bot is in the in_call_recording state"
                            }
                          },
                          "required": [
                            "in_call_recording"
                          ]
                        }
                      ],
                      "writeOnly": true,
                      "description": "(BETA) Settings for the bot to output video."
                    },
                    "automatic_audio_output": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "in_call_recording": {
                              "type": "object",
                              "properties": {
                                "data": {
                                  "type": "object",
                                  "properties": {
                                    "kind": {
                                      "allOf": [
                                        {
                                          "enum": [
                                            "mp3"
                                          ],
                                          "type": "string"
                                        }
                                      ],
                                      "description": "The kind of data encoded in b64_data"
                                    },
                                    "b64_data": {
                                      "type": "string",
                                      "description": "Data encoded in Base64 format, using the standard alphabet (specified here: https://datatracker.ietf.org/doc/html/rfc4648#section-4)",
                                      "maxLength": 1835008
                                    }
                                  },
                                  "required": [
                                    "b64_data",
                                    "kind"
                                  ]
                                },
                                "replay_on_participant_join": {
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "debounce_interval": {
                                          "type": "integer",
                                          "description": "The amount of time to wait for additional participants to join before replaying the audio."
                                        }
                                      },
                                      "required": [
                                        "debounce_interval"
                                      ]
                                    }
                                  ],
                                  "description": "Specify this parameter if you want the audio to be replayed when additional participants join the call."
                                }
                              },
                              "required": [
                                "data"
                              ]
                            }
                          },
                          "required": [
                            "in_call_recording"
                          ]
                        }
                      ],
                      "writeOnly": true,
                      "description": "(BETA) Settings for the bot to output audio."
                    },
                    "calendar_meetings": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "readOnly": true
                          },
                          "start_time": {
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          },
                          "end_time": {
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          },
                          "calendar_user": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "readOnly": true
                                  },
                                  "external_id": {
                                    "type": "string",
                                    "readOnly": true
                                  }
                                },
                                "required": [
                                  "external_id",
                                  "id"
                                ]
                              }
                            ],
                            "readOnly": true
                          }
                        },
                        "required": [
                          "calendar_user",
                          "end_time",
                          "id",
                          "start_time"
                        ]
                      },
                      "readOnly": true
                    },
                    "recording_mode": {
                      "allOf": [
                        {
                          "enum": [
                            "speaker_view",
                            "gallery_view",
                            "gallery_view_v2"
                          ],
                          "type": "string"
                        }
                      ],
                      "writeOnly": true,
                      "default": "speaker_view",
                      "description": "The layout of the output video."
                    },
                    "recording_mode_options": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "participant_video_when_screenshare": {
                              "allOf": [
                                {
                                  "enum": [
                                    "hide",
                                    "beside",
                                    "overlap"
                                  ],
                                  "type": "string"
                                }
                              ],
                              "description": "The layout of participant video streams when a screen is being shared. More docs: https://recallai.readme.io/reference/bot-faqs#5-what-do-the-recording-modes-look-like-when-specified-in-create-bot"
                            }
                          },
                          "required": [
                            "participant_video_when_screenshare"
                          ]
                        }
                      ],
                      "writeOnly": true,
                      "description": "Additional options for the output video layout."
                    }
                  },
                  "required": [
                    "calendar_meetings",
                    "id",
                    "media_retention_end",
                    "meeting_metadata",
                    "meeting_participants",
                    "meeting_url",
                    "status_changes",
                    "video_url"
                  ]
                }
              }
            },
            "description": ""
          },
          "507": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "If no bots are available in the ad-hoc bot pool the HTTP 507 code is returned. The ad-hoc bot pool is replenished every few minutes so retrying the request will eventually succeed."
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v1/bot/{bot_id}/screenshots/": {
      "get": {
        "operationId": "bot_screenshots_list",
        "description": "Get a list of all screenshots of the bot",
        "summary": "List Bot Screenshots",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "bot_id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "The ID of the bot for which to retrieve the screenshots",
            "required": true
          },
          {
            "in": "query",
            "name": "recorded_at_after",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "in": "query",
            "name": "recorded_at_before",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "tags": [
          "bot-screenshots"
        ],
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "example": 123
                    },
                    "next": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "readOnly": true
                          },
                          "recorded_at": {
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          },
                          "url": {
                            "type": "string",
                            "format": "uri",
                            "readOnly": true,
                            "description": "A URL where the bot screenshot can be acccessed from."
                          }
                        },
                        "required": [
                          "id",
                          "recorded_at",
                          "url"
                        ]
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v1/bot/{bot_id}/screenshots/{id}/": {
      "get": {
        "operationId": "bot_screenshots_retrieve",
        "description": "Get a bot screenshot instance.",
        "summary": "Retrieve Bot Screenshot",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "A UUID string identifying this bot screenshot.",
            "required": true
          },
          {
            "in": "path",
            "name": "bot_id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "The ID of the bot for which to retrieve the screenshot",
            "required": true
          }
        ],
        "tags": [
          "bot-screenshots"
        ],
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "readOnly": true
                    },
                    "recorded_at": {
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "url": {
                      "type": "string",
                      "format": "uri",
                      "readOnly": true,
                      "description": "A URL where the bot screenshot can be acccessed from."
                    }
                  },
                  "required": [
                    "id",
                    "recorded_at",
                    "url"
                  ]
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v1/bot/{id}/": {
      "get": {
        "operationId": "bot_retrieve",
        "description": "Get a bot instance.",
        "summary": "Retrieve Bot",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "A UUID string identifying this bot.",
            "required": true
          }
        ],
        "tags": [
          "bot"
        ],
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "readOnly": true
                    },
                    "video_url": {
                      "type": "string",
                      "format": "uri",
                      "readOnly": true,
                      "description": "A URL where the video recorded by the bot can be downloaded. This is null while the recording is in progress, and will be populated when the recording is completed. The returned URL is valid for 6 hours from the API call. A fresh URL can be obtained at any point by calling the API again."
                    },
                    "recording": {
                      "type": "string",
                      "format": "uuid",
                      "nullable": true
                    },
                    "media_retention_end": {
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "description": "After this date the video and transcript will be deleted. This date is 7 days from when the recording ended."
                    },
                    "status_changes": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "string",
                            "readOnly": true
                          },
                          "message": {
                            "type": "string",
                            "readOnly": true
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          },
                          "sub_code": {
                            "type": "string",
                            "readOnly": true
                          }
                        },
                        "required": [
                          "code",
                          "created_at",
                          "message",
                          "sub_code"
                        ]
                      },
                      "readOnly": true
                    },
                    "meeting_metadata": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "title": {
                              "type": "string",
                              "readOnly": true,
                              "description": "The title of the meeting the bot has joined."
                            }
                          },
                          "required": [
                            "title"
                          ]
                        }
                      ],
                      "readOnly": true,
                      "nullable": true
                    },
                    "meeting_participants": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "readOnly": true
                          },
                          "name": {
                            "type": "string",
                            "readOnly": true
                          },
                          "events": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "code": {
                                  "type": "string",
                                  "readOnly": true
                                },
                                "created_at": {
                                  "type": "string",
                                  "format": "date-time",
                                  "readOnly": true
                                }
                              },
                              "required": [
                                "code",
                                "created_at"
                              ]
                            },
                            "readOnly": true
                          }
                        },
                        "required": [
                          "events",
                          "id",
                          "name"
                        ]
                      },
                      "readOnly": true
                    },
                    "meeting_url": {
                      "type": "string",
                      "nullable": true,
                      "description": "The url of the meeting. For example, https://zoom.us/j/123?pwd=456. This field can only be read from scheduled bots that have not yet joined a call. Once a bot has joined a call, it's meeting_url will be cleared."
                    },
                    "bot_name": {
                      "type": "string",
                      "writeOnly": true,
                      "default": "Meeting Notetaker",
                      "description": "The name of the bot that will be displayed in the call.",
                      "maxLength": 100
                    },
                    "join_at": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true,
                      "description": "The time at which the bot will join the call, formatted in ISO 8601. This field can only be read from scheduled bots that have not yet joined a call. Once a bot has joined a call, it's join_at will be cleared."
                    },
                    "real_time_transcription": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "destination_url": {
                              "type": "string",
                              "format": "uri"
                            },
                            "partial_results": {
                              "type": "boolean",
                              "default": false
                            }
                          },
                          "required": [
                            "destination_url"
                          ]
                        }
                      ],
                      "writeOnly": true,
                      "description": "The settings for real-time transcription."
                    },
                    "real_time_media": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "rtmp_destination_url": {
                              "type": "string"
                            },
                            "websocket_video_destination_url": {
                              "type": "string"
                            },
                            "websocket_audio_destination_url": {
                              "type": "string"
                            },
                            "websocket_speaker_timeline_destination_url": {
                              "type": "string"
                            },
                            "websocket_speaker_timeline_exclude_null_speaker": {
                              "type": "boolean",
                              "default": true,
                              "description": "Set to false to include null active speaker events in the speaker timeline websocket. Defaults to true."
                            },
                            "webhook_call_events_destination_url": {
                              "type": "string",
                              "description": "(BETA) Receive webhooks for in call events('bot.participant_join'/'bot.participant_leave'/'bot.active_speaker_notify')"
                            }
                          }
                        }
                      ],
                      "writeOnly": true,
                      "description": "The settings for real-time media output."
                    },
                    "transcription_options": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "provider": {
                              "enum": [
                                "deepgram",
                                "assembly_ai",
                                "rev",
                                "aws_transcribe",
                                "symbl",
                                "none"
                              ],
                              "type": "string"
                            },
                            "assembly_ai": {
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "word_boost": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              ],
                              "title": "AssemblyAi Real-time Transcription Settings",
                              "description": "Docs: https://www.assemblyai.com/docs/walkthroughs#realtime-streaming-transcription"
                            },
                            "deepgram": {
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "tier": {
                                      "type": "string"
                                    },
                                    "model": {
                                      "type": "string"
                                    },
                                    "version": {
                                      "type": "string"
                                    },
                                    "language": {
                                      "type": "string"
                                    },
                                    "profanity_filter": {
                                      "type": "boolean"
                                    },
                                    "redact": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "diarize": {
                                      "type": "boolean"
                                    },
                                    "diarize_version": {
                                      "type": "string"
                                    },
                                    "ner": {
                                      "type": "boolean"
                                    },
                                    "alternatives": {
                                      "type": "integer"
                                    },
                                    "numerals": {
                                      "type": "boolean"
                                    },
                                    "search": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "replace": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "keywords": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "interim_results": {
                                      "type": "boolean"
                                    },
                                    "endpointing": {
                                      "type": "boolean"
                                    }
                                  }
                                }
                              ],
                              "title": "Deepgram Real-time Transcription Settings",
                              "description": "Docs: https://developers.deepgram.com/api-reference/transcription/#transcribe-live-streaming-audio"
                            },
                            "rev": {
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "language": {
                                      "type": "string"
                                    },
                                    "metadata": {
                                      "type": "string"
                                    },
                                    "custom_vocabulary_id": {
                                      "type": "string",
                                      "maxLength": 200
                                    },
                                    "filter_profanity": {
                                      "type": "boolean"
                                    },
                                    "remove_disfluencies": {
                                      "type": "boolean"
                                    },
                                    "delete_after_seconds": {
                                      "type": "integer"
                                    },
                                    "detailed_partials": {
                                      "type": "boolean"
                                    },
                                    "start_ts": {
                                      "type": "number",
                                      "format": "double"
                                    },
                                    "max_segment_duration_seconds": {
                                      "type": "integer"
                                    },
                                    "transcriber": {
                                      "type": "string"
                                    },
                                    "enable_speaker_switch": {
                                      "type": "boolean"
                                    },
                                    "skip_postprocessing": {
                                      "type": "boolean"
                                    },
                                    "priority": {
                                      "type": "string"
                                    }
                                  }
                                }
                              ],
                              "title": "Rev Real-time Transcription Settings",
                              "description": "Docs: https://docs.rev.ai/api/streaming/requests/"
                            },
                            "aws_transcribe": {
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "language_code": {
                                      "type": "string"
                                    },
                                    "content_redaction_type": {
                                      "type": "string"
                                    },
                                    "language_model_name": {
                                      "type": "string"
                                    },
                                    "language_options": {
                                      "type": "string"
                                    },
                                    "language_identification": {
                                      "type": "boolean"
                                    },
                                    "partial_results_stability": {
                                      "type": "string"
                                    },
                                    "pii_entity_types": {
                                      "type": "string"
                                    },
                                    "preferred_language": {
                                      "type": "string"
                                    },
                                    "show_speaker_label": {
                                      "type": "boolean"
                                    },
                                    "vocabulary_filter_method": {
                                      "type": "string"
                                    },
                                    "vocabulary_filter_names": {
                                      "type": "string"
                                    },
                                    "vocabulary_names": {
                                      "type": "string"
                                    }
                                  }
                                }
                              ],
                              "title": "AWS Transcribe Real-time Transcription Settings",
                              "description": "Docs: https://docs.aws.amazon.com/transcribe/latest/APIReference/API_streaming_StartStreamTranscription.html"
                            }
                          },
                          "required": [
                            "provider"
                          ]
                        }
                      ],
                      "writeOnly": true
                    },
                    "chat": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "on_bot_join": {
                              "type": "object",
                              "properties": {
                                "send_to": {
                                  "enum": [
                                    "host",
                                    "everyone",
                                    "everyone_except_host"
                                  ],
                                  "type": "string"
                                },
                                "message": {
                                  "type": "string",
                                  "maxLength": 4096
                                }
                              },
                              "required": [
                                "message",
                                "send_to"
                              ]
                            },
                            "on_participant_join": {
                              "type": "object",
                              "properties": {
                                "message": {
                                  "type": "string",
                                  "maxLength": 4096
                                },
                                "exclude_host": {
                                  "type": "boolean"
                                }
                              },
                              "required": [
                                "exclude_host",
                                "message"
                              ]
                            }
                          }
                        }
                      ],
                      "writeOnly": true,
                      "description": "(BETA) Settings for the bot to send chat messages."
                    },
                    "zoom": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "join_token_url": {
                              "type": "string",
                              "format": "uri",
                              "description": "A URL which Recall will make a GET request to, in order to retrieve the Zoom Join Token for Local Recording, which the V2 Zoom bot uses to automatically record. This token can be generated through the Zoom API. Docs: https://marketplace.zoom.us/docs/api-reference/zoom-api/methods/#operation/meetingLocalRecordingJoinToken"
                            },
                            "zak_url": {
                              "type": "string",
                              "format": "uri",
                              "description": "A URL which Recall will make  GET request to, in order to retrieve the ZAK. The V1 Zoom bot uses this to join meetings that require authentication to join.This token can be generated through the Zoom API. Docs: https://marketplace.zoom.us/docs/api-reference/zoom-api/methods/#operation/userZak"
                            }
                          }
                        }
                      ],
                      "writeOnly": true,
                      "description": "Zoom specific parameters"
                    },
                    "google_meet": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "login_required": {
                              "type": "boolean",
                              "nullable": true,
                              "description": "Specify if the bot should always login to Google before joining the meeting. This value will override the default value set on bot's Google Meet login credentials on the account. When set to 'false', the bot will only login if required by the meeting."
                            }
                          }
                        }
                      ],
                      "writeOnly": true,
                      "description": "Google Meet specific parameters"
                    },
                    "automatic_leave": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "waiting_room_timeout": {
                              "type": "integer",
                              "minimum": 30,
                              "default": 1200,
                              "description": "The number of seconds after which the bot will automatically leave the call, if it has not been let in from the waiting room."
                            },
                            "noone_joined_timeout": {
                              "type": "integer",
                              "minimum": 30,
                              "default": 1200,
                              "description": "(BETA) The number of seconds after which the bot will automatically leave the call, if it has joined the meeting but no other participant has joined."
                            },
                            "everyone_left_timeout": {
                              "type": "integer",
                              "minimum": 1,
                              "default": 2,
                              "description": "(BETA) The number of seconds after which the bot will automatically leave the call, if there were other participants in the call who have all left."
                            }
                          }
                        }
                      ],
                      "writeOnly": true
                    },
                    "automatic_video_output": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "in_call_recording": {
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "kind": {
                                      "allOf": [
                                        {
                                          "enum": [
                                            "jpeg"
                                          ],
                                          "type": "string"
                                        }
                                      ],
                                      "description": "The kind of data encoded in b64_data"
                                    },
                                    "b64_data": {
                                      "type": "string",
                                      "description": "Data encoded in Base64 format, using the standard alphabet (specified here: https://datatracker.ietf.org/doc/html/rfc4648#section-4)",
                                      "maxLength": 1835008
                                    }
                                  },
                                  "required": [
                                    "b64_data",
                                    "kind"
                                  ]
                                }
                              ],
                              "description": "The video that will be automatically output when the bot is in the in_call_recording state"
                            }
                          },
                          "required": [
                            "in_call_recording"
                          ]
                        }
                      ],
                      "writeOnly": true,
                      "description": "(BETA) Settings for the bot to output video."
                    },
                    "automatic_audio_output": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "in_call_recording": {
                              "type": "object",
                              "properties": {
                                "data": {
                                  "type": "object",
                                  "properties": {
                                    "kind": {
                                      "allOf": [
                                        {
                                          "enum": [
                                            "mp3"
                                          ],
                                          "type": "string"
                                        }
                                      ],
                                      "description": "The kind of data encoded in b64_data"
                                    },
                                    "b64_data": {
                                      "type": "string",
                                      "description": "Data encoded in Base64 format, using the standard alphabet (specified here: https://datatracker.ietf.org/doc/html/rfc4648#section-4)",
                                      "maxLength": 1835008
                                    }
                                  },
                                  "required": [
                                    "b64_data",
                                    "kind"
                                  ]
                                },
                                "replay_on_participant_join": {
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "debounce_interval": {
                                          "type": "integer",
                                          "description": "The amount of time to wait for additional participants to join before replaying the audio."
                                        }
                                      },
                                      "required": [
                                        "debounce_interval"
                                      ]
                                    }
                                  ],
                                  "description": "Specify this parameter if you want the audio to be replayed when additional participants join the call."
                                }
                              },
                              "required": [
                                "data"
                              ]
                            }
                          },
                          "required": [
                            "in_call_recording"
                          ]
                        }
                      ],
                      "writeOnly": true,
                      "description": "(BETA) Settings for the bot to output audio."
                    },
                    "calendar_meetings": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "readOnly": true
                          },
                          "start_time": {
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          },
                          "end_time": {
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          },
                          "calendar_user": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "readOnly": true
                                  },
                                  "external_id": {
                                    "type": "string",
                                    "readOnly": true
                                  }
                                },
                                "required": [
                                  "external_id",
                                  "id"
                                ]
                              }
                            ],
                            "readOnly": true
                          }
                        },
                        "required": [
                          "calendar_user",
                          "end_time",
                          "id",
                          "start_time"
                        ]
                      },
                      "readOnly": true
                    },
                    "recording_mode": {
                      "allOf": [
                        {
                          "enum": [
                            "speaker_view",
                            "gallery_view",
                            "gallery_view_v2"
                          ],
                          "type": "string"
                        }
                      ],
                      "writeOnly": true,
                      "default": "speaker_view",
                      "description": "The layout of the output video."
                    },
                    "recording_mode_options": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "participant_video_when_screenshare": {
                              "allOf": [
                                {
                                  "enum": [
                                    "hide",
                                    "beside",
                                    "overlap"
                                  ],
                                  "type": "string"
                                }
                              ],
                              "description": "The layout of participant video streams when a screen is being shared. More docs: https://recallai.readme.io/reference/bot-faqs#5-what-do-the-recording-modes-look-like-when-specified-in-create-bot"
                            }
                          },
                          "required": [
                            "participant_video_when_screenshare"
                          ]
                        }
                      ],
                      "writeOnly": true,
                      "description": "Additional options for the output video layout."
                    }
                  },
                  "required": [
                    "calendar_meetings",
                    "id",
                    "media_retention_end",
                    "meeting_metadata",
                    "meeting_participants",
                    "meeting_url",
                    "status_changes",
                    "video_url"
                  ]
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "bot_partial_update",
        "description": "Update a Scheduled Bot.",
        "summary": "Update Scheduled Bot",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "A UUID string identifying this bot.",
            "required": true
          }
        ],
        "tags": [
          "bot"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                  },
                  "video_url": {
                    "type": "string",
                    "format": "uri",
                    "readOnly": true,
                    "description": "A URL where the video recorded by the bot can be downloaded. This is null while the recording is in progress, and will be populated when the recording is completed. The returned URL is valid for 6 hours from the API call. A fresh URL can be obtained at any point by calling the API again."
                  },
                  "recording": {
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "media_retention_end": {
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true,
                    "description": "After this date the video and transcript will be deleted. This date is 7 days from when the recording ended."
                  },
                  "status_changes": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "readOnly": true
                        },
                        "message": {
                          "type": "string",
                          "readOnly": true
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        },
                        "sub_code": {
                          "type": "string",
                          "readOnly": true
                        }
                      },
                      "required": [
                        "code",
                        "created_at",
                        "message",
                        "sub_code"
                      ]
                    },
                    "readOnly": true
                  },
                  "meeting_metadata": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The title of the meeting the bot has joined."
                          }
                        },
                        "required": [
                          "title"
                        ]
                      }
                    ],
                    "readOnly": true,
                    "nullable": true
                  },
                  "meeting_participants": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "readOnly": true
                        },
                        "name": {
                          "type": "string",
                          "readOnly": true
                        },
                        "events": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "code": {
                                "type": "string",
                                "readOnly": true
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              }
                            },
                            "required": [
                              "code",
                              "created_at"
                            ]
                          },
                          "readOnly": true
                        }
                      },
                      "required": [
                        "events",
                        "id",
                        "name"
                      ]
                    },
                    "readOnly": true
                  },
                  "meeting_url": {
                    "type": "string",
                    "nullable": true,
                    "description": "The url of the meeting. For example, https://zoom.us/j/123?pwd=456. This field can only be read from scheduled bots that have not yet joined a call. Once a bot has joined a call, it's meeting_url will be cleared."
                  },
                  "bot_name": {
                    "type": "string",
                    "writeOnly": true,
                    "default": "Meeting Notetaker",
                    "description": "The name of the bot that will be displayed in the call.",
                    "maxLength": 100
                  },
                  "join_at": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true,
                    "description": "The time at which the bot will join the call, formatted in ISO 8601. This field can only be read from scheduled bots that have not yet joined a call. Once a bot has joined a call, it's join_at will be cleared."
                  },
                  "real_time_transcription": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "destination_url": {
                            "type": "string",
                            "format": "uri"
                          },
                          "partial_results": {
                            "type": "boolean",
                            "default": false
                          }
                        },
                        "required": [
                          "destination_url"
                        ]
                      }
                    ],
                    "writeOnly": true,
                    "description": "The settings for real-time transcription."
                  },
                  "real_time_media": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "rtmp_destination_url": {
                            "type": "string"
                          },
                          "websocket_video_destination_url": {
                            "type": "string"
                          },
                          "websocket_audio_destination_url": {
                            "type": "string"
                          },
                          "websocket_speaker_timeline_destination_url": {
                            "type": "string"
                          },
                          "websocket_speaker_timeline_exclude_null_speaker": {
                            "type": "boolean",
                            "default": true,
                            "description": "Set to false to include null active speaker events in the speaker timeline websocket. Defaults to true."
                          },
                          "webhook_call_events_destination_url": {
                            "type": "string",
                            "description": "(BETA) Receive webhooks for in call events('bot.participant_join'/'bot.participant_leave'/'bot.active_speaker_notify')"
                          }
                        }
                      }
                    ],
                    "writeOnly": true,
                    "description": "The settings for real-time media output."
                  },
                  "transcription_options": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "provider": {
                            "enum": [
                              "deepgram",
                              "assembly_ai",
                              "rev",
                              "aws_transcribe",
                              "symbl",
                              "none"
                            ],
                            "type": "string"
                          },
                          "assembly_ai": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "word_boost": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            ],
                            "title": "AssemblyAi Real-time Transcription Settings",
                            "description": "Docs: https://www.assemblyai.com/docs/walkthroughs#realtime-streaming-transcription"
                          },
                          "deepgram": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "tier": {
                                    "type": "string"
                                  },
                                  "model": {
                                    "type": "string"
                                  },
                                  "version": {
                                    "type": "string"
                                  },
                                  "language": {
                                    "type": "string"
                                  },
                                  "profanity_filter": {
                                    "type": "boolean"
                                  },
                                  "redact": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "diarize": {
                                    "type": "boolean"
                                  },
                                  "diarize_version": {
                                    "type": "string"
                                  },
                                  "ner": {
                                    "type": "boolean"
                                  },
                                  "alternatives": {
                                    "type": "integer"
                                  },
                                  "numerals": {
                                    "type": "boolean"
                                  },
                                  "search": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "replace": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "keywords": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "interim_results": {
                                    "type": "boolean"
                                  },
                                  "endpointing": {
                                    "type": "boolean"
                                  }
                                }
                              }
                            ],
                            "title": "Deepgram Real-time Transcription Settings",
                            "description": "Docs: https://developers.deepgram.com/api-reference/transcription/#transcribe-live-streaming-audio"
                          },
                          "rev": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "language": {
                                    "type": "string"
                                  },
                                  "metadata": {
                                    "type": "string"
                                  },
                                  "custom_vocabulary_id": {
                                    "type": "string",
                                    "maxLength": 200
                                  },
                                  "filter_profanity": {
                                    "type": "boolean"
                                  },
                                  "remove_disfluencies": {
                                    "type": "boolean"
                                  },
                                  "delete_after_seconds": {
                                    "type": "integer"
                                  },
                                  "detailed_partials": {
                                    "type": "boolean"
                                  },
                                  "start_ts": {
                                    "type": "number",
                                    "format": "double"
                                  },
                                  "max_segment_duration_seconds": {
                                    "type": "integer"
                                  },
                                  "transcriber": {
                                    "type": "string"
                                  },
                                  "enable_speaker_switch": {
                                    "type": "boolean"
                                  },
                                  "skip_postprocessing": {
                                    "type": "boolean"
                                  },
                                  "priority": {
                                    "type": "string"
                                  }
                                }
                              }
                            ],
                            "title": "Rev Real-time Transcription Settings",
                            "description": "Docs: https://docs.rev.ai/api/streaming/requests/"
                          },
                          "aws_transcribe": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "language_code": {
                                    "type": "string"
                                  },
                                  "content_redaction_type": {
                                    "type": "string"
                                  },
                                  "language_model_name": {
                                    "type": "string"
                                  },
                                  "language_options": {
                                    "type": "string"
                                  },
                                  "language_identification": {
                                    "type": "boolean"
                                  },
                                  "partial_results_stability": {
                                    "type": "string"
                                  },
                                  "pii_entity_types": {
                                    "type": "string"
                                  },
                                  "preferred_language": {
                                    "type": "string"
                                  },
                                  "show_speaker_label": {
                                    "type": "boolean"
                                  },
                                  "vocabulary_filter_method": {
                                    "type": "string"
                                  },
                                  "vocabulary_filter_names": {
                                    "type": "string"
                                  },
                                  "vocabulary_names": {
                                    "type": "string"
                                  }
                                }
                              }
                            ],
                            "title": "AWS Transcribe Real-time Transcription Settings",
                            "description": "Docs: https://docs.aws.amazon.com/transcribe/latest/APIReference/API_streaming_StartStreamTranscription.html"
                          }
                        },
                        "required": [
                          "provider"
                        ]
                      }
                    ],
                    "writeOnly": true
                  },
                  "chat": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "on_bot_join": {
                            "type": "object",
                            "properties": {
                              "send_to": {
                                "enum": [
                                  "host",
                                  "everyone",
                                  "everyone_except_host"
                                ],
                                "type": "string"
                              },
                              "message": {
                                "type": "string",
                                "maxLength": 4096
                              }
                            },
                            "required": [
                              "message",
                              "send_to"
                            ]
                          },
                          "on_participant_join": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "maxLength": 4096
                              },
                              "exclude_host": {
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "exclude_host",
                              "message"
                            ]
                          }
                        }
                      }
                    ],
                    "writeOnly": true,
                    "description": "(BETA) Settings for the bot to send chat messages."
                  },
                  "zoom": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "join_token_url": {
                            "type": "string",
                            "format": "uri",
                            "description": "A URL which Recall will make a GET request to, in order to retrieve the Zoom Join Token for Local Recording, which the V2 Zoom bot uses to automatically record. This token can be generated through the Zoom API. Docs: https://marketplace.zoom.us/docs/api-reference/zoom-api/methods/#operation/meetingLocalRecordingJoinToken"
                          },
                          "zak_url": {
                            "type": "string",
                            "format": "uri",
                            "description": "A URL which Recall will make  GET request to, in order to retrieve the ZAK. The V1 Zoom bot uses this to join meetings that require authentication to join.This token can be generated through the Zoom API. Docs: https://marketplace.zoom.us/docs/api-reference/zoom-api/methods/#operation/userZak"
                          }
                        }
                      }
                    ],
                    "writeOnly": true,
                    "description": "Zoom specific parameters"
                  },
                  "google_meet": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "login_required": {
                            "type": "boolean",
                            "nullable": true,
                            "description": "Specify if the bot should always login to Google before joining the meeting. This value will override the default value set on bot's Google Meet login credentials on the account. When set to 'false', the bot will only login if required by the meeting."
                          }
                        }
                      }
                    ],
                    "writeOnly": true,
                    "description": "Google Meet specific parameters"
                  },
                  "automatic_leave": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "waiting_room_timeout": {
                            "type": "integer",
                            "minimum": 30,
                            "default": 1200,
                            "description": "The number of seconds after which the bot will automatically leave the call, if it has not been let in from the waiting room."
                          },
                          "noone_joined_timeout": {
                            "type": "integer",
                            "minimum": 30,
                            "default": 1200,
                            "description": "(BETA) The number of seconds after which the bot will automatically leave the call, if it has joined the meeting but no other participant has joined."
                          },
                          "everyone_left_timeout": {
                            "type": "integer",
                            "minimum": 1,
                            "default": 2,
                            "description": "(BETA) The number of seconds after which the bot will automatically leave the call, if there were other participants in the call who have all left."
                          }
                        }
                      }
                    ],
                    "writeOnly": true
                  },
                  "automatic_video_output": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "in_call_recording": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "kind": {
                                    "allOf": [
                                      {
                                        "enum": [
                                          "jpeg"
                                        ],
                                        "type": "string"
                                      }
                                    ],
                                    "description": "The kind of data encoded in b64_data"
                                  },
                                  "b64_data": {
                                    "type": "string",
                                    "description": "Data encoded in Base64 format, using the standard alphabet (specified here: https://datatracker.ietf.org/doc/html/rfc4648#section-4)",
                                    "maxLength": 1835008
                                  }
                                },
                                "required": [
                                  "b64_data",
                                  "kind"
                                ]
                              }
                            ],
                            "description": "The video that will be automatically output when the bot is in the in_call_recording state"
                          }
                        },
                        "required": [
                          "in_call_recording"
                        ]
                      }
                    ],
                    "writeOnly": true,
                    "description": "(BETA) Settings for the bot to output video."
                  },
                  "automatic_audio_output": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "in_call_recording": {
                            "type": "object",
                            "properties": {
                              "data": {
                                "type": "object",
                                "properties": {
                                  "kind": {
                                    "allOf": [
                                      {
                                        "enum": [
                                          "mp3"
                                        ],
                                        "type": "string"
                                      }
                                    ],
                                    "description": "The kind of data encoded in b64_data"
                                  },
                                  "b64_data": {
                                    "type": "string",
                                    "description": "Data encoded in Base64 format, using the standard alphabet (specified here: https://datatracker.ietf.org/doc/html/rfc4648#section-4)",
                                    "maxLength": 1835008
                                  }
                                },
                                "required": [
                                  "b64_data",
                                  "kind"
                                ]
                              },
                              "replay_on_participant_join": {
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "debounce_interval": {
                                        "type": "integer",
                                        "description": "The amount of time to wait for additional participants to join before replaying the audio."
                                      }
                                    },
                                    "required": [
                                      "debounce_interval"
                                    ]
                                  }
                                ],
                                "description": "Specify this parameter if you want the audio to be replayed when additional participants join the call."
                              }
                            },
                            "required": [
                              "data"
                            ]
                          }
                        },
                        "required": [
                          "in_call_recording"
                        ]
                      }
                    ],
                    "writeOnly": true,
                    "description": "(BETA) Settings for the bot to output audio."
                  },
                  "calendar_meetings": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "readOnly": true
                        },
                        "start_time": {
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        },
                        "end_time": {
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        },
                        "calendar_user": {
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "uuid",
                                  "readOnly": true
                                },
                                "external_id": {
                                  "type": "string",
                                  "readOnly": true
                                }
                              },
                              "required": [
                                "external_id",
                                "id"
                              ]
                            }
                          ],
                          "readOnly": true
                        }
                      },
                      "required": [
                        "calendar_user",
                        "end_time",
                        "id",
                        "start_time"
                      ]
                    },
                    "readOnly": true
                  },
                  "recording_mode": {
                    "allOf": [
                      {
                        "enum": [
                          "speaker_view",
                          "gallery_view",
                          "gallery_view_v2"
                        ],
                        "type": "string"
                      }
                    ],
                    "writeOnly": true,
                    "default": "speaker_view",
                    "description": "The layout of the output video."
                  },
                  "recording_mode_options": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "participant_video_when_screenshare": {
                            "allOf": [
                              {
                                "enum": [
                                  "hide",
                                  "beside",
                                  "overlap"
                                ],
                                "type": "string"
                              }
                            ],
                            "description": "The layout of participant video streams when a screen is being shared. More docs: https://recallai.readme.io/reference/bot-faqs#5-what-do-the-recording-modes-look-like-when-specified-in-create-bot"
                          }
                        },
                        "required": [
                          "participant_video_when_screenshare"
                        ]
                      }
                    ],
                    "writeOnly": true,
                    "description": "Additional options for the output video layout."
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                  },
                  "video_url": {
                    "type": "string",
                    "format": "uri",
                    "readOnly": true,
                    "description": "A URL where the video recorded by the bot can be downloaded. This is null while the recording is in progress, and will be populated when the recording is completed. The returned URL is valid for 6 hours from the API call. A fresh URL can be obtained at any point by calling the API again."
                  },
                  "recording": {
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "media_retention_end": {
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true,
                    "description": "After this date the video and transcript will be deleted. This date is 7 days from when the recording ended."
                  },
                  "status_changes": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "readOnly": true
                        },
                        "message": {
                          "type": "string",
                          "readOnly": true
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        },
                        "sub_code": {
                          "type": "string",
                          "readOnly": true
                        }
                      },
                      "required": [
                        "code",
                        "created_at",
                        "message",
                        "sub_code"
                      ]
                    },
                    "readOnly": true
                  },
                  "meeting_metadata": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The title of the meeting the bot has joined."
                          }
                        },
                        "required": [
                          "title"
                        ]
                      }
                    ],
                    "readOnly": true,
                    "nullable": true
                  },
                  "meeting_participants": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "readOnly": true
                        },
                        "name": {
                          "type": "string",
                          "readOnly": true
                        },
                        "events": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "code": {
                                "type": "string",
                                "readOnly": true
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              }
                            },
                            "required": [
                              "code",
                              "created_at"
                            ]
                          },
                          "readOnly": true
                        }
                      },
                      "required": [
                        "events",
                        "id",
                        "name"
                      ]
                    },
                    "readOnly": true
                  },
                  "meeting_url": {
                    "type": "string",
                    "nullable": true,
                    "description": "The url of the meeting. For example, https://zoom.us/j/123?pwd=456. This field can only be read from scheduled bots that have not yet joined a call. Once a bot has joined a call, it's meeting_url will be cleared."
                  },
                  "bot_name": {
                    "type": "string",
                    "writeOnly": true,
                    "default": "Meeting Notetaker",
                    "description": "The name of the bot that will be displayed in the call.",
                    "maxLength": 100
                  },
                  "join_at": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true,
                    "description": "The time at which the bot will join the call, formatted in ISO 8601. This field can only be read from scheduled bots that have not yet joined a call. Once a bot has joined a call, it's join_at will be cleared."
                  },
                  "real_time_transcription": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "destination_url": {
                            "type": "string",
                            "format": "uri"
                          },
                          "partial_results": {
                            "type": "boolean",
                            "default": false
                          }
                        },
                        "required": [
                          "destination_url"
                        ]
                      }
                    ],
                    "writeOnly": true,
                    "description": "The settings for real-time transcription."
                  },
                  "real_time_media": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "rtmp_destination_url": {
                            "type": "string"
                          },
                          "websocket_video_destination_url": {
                            "type": "string"
                          },
                          "websocket_audio_destination_url": {
                            "type": "string"
                          },
                          "websocket_speaker_timeline_destination_url": {
                            "type": "string"
                          },
                          "websocket_speaker_timeline_exclude_null_speaker": {
                            "type": "boolean",
                            "default": true,
                            "description": "Set to false to include null active speaker events in the speaker timeline websocket. Defaults to true."
                          },
                          "webhook_call_events_destination_url": {
                            "type": "string",
                            "description": "(BETA) Receive webhooks for in call events('bot.participant_join'/'bot.participant_leave'/'bot.active_speaker_notify')"
                          }
                        }
                      }
                    ],
                    "writeOnly": true,
                    "description": "The settings for real-time media output."
                  },
                  "transcription_options": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "provider": {
                            "enum": [
                              "deepgram",
                              "assembly_ai",
                              "rev",
                              "aws_transcribe",
                              "symbl",
                              "none"
                            ],
                            "type": "string"
                          },
                          "assembly_ai": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "word_boost": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            ],
                            "title": "AssemblyAi Real-time Transcription Settings",
                            "description": "Docs: https://www.assemblyai.com/docs/walkthroughs#realtime-streaming-transcription"
                          },
                          "deepgram": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "tier": {
                                    "type": "string"
                                  },
                                  "model": {
                                    "type": "string"
                                  },
                                  "version": {
                                    "type": "string"
                                  },
                                  "language": {
                                    "type": "string"
                                  },
                                  "profanity_filter": {
                                    "type": "boolean"
                                  },
                                  "redact": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "diarize": {
                                    "type": "boolean"
                                  },
                                  "diarize_version": {
                                    "type": "string"
                                  },
                                  "ner": {
                                    "type": "boolean"
                                  },
                                  "alternatives": {
                                    "type": "integer"
                                  },
                                  "numerals": {
                                    "type": "boolean"
                                  },
                                  "search": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "replace": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "keywords": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "interim_results": {
                                    "type": "boolean"
                                  },
                                  "endpointing": {
                                    "type": "boolean"
                                  }
                                }
                              }
                            ],
                            "title": "Deepgram Real-time Transcription Settings",
                            "description": "Docs: https://developers.deepgram.com/api-reference/transcription/#transcribe-live-streaming-audio"
                          },
                          "rev": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "language": {
                                    "type": "string"
                                  },
                                  "metadata": {
                                    "type": "string"
                                  },
                                  "custom_vocabulary_id": {
                                    "type": "string",
                                    "maxLength": 200
                                  },
                                  "filter_profanity": {
                                    "type": "boolean"
                                  },
                                  "remove_disfluencies": {
                                    "type": "boolean"
                                  },
                                  "delete_after_seconds": {
                                    "type": "integer"
                                  },
                                  "detailed_partials": {
                                    "type": "boolean"
                                  },
                                  "start_ts": {
                                    "type": "number",
                                    "format": "double"
                                  },
                                  "max_segment_duration_seconds": {
                                    "type": "integer"
                                  },
                                  "transcriber": {
                                    "type": "string"
                                  },
                                  "enable_speaker_switch": {
                                    "type": "boolean"
                                  },
                                  "skip_postprocessing": {
                                    "type": "boolean"
                                  },
                                  "priority": {
                                    "type": "string"
                                  }
                                }
                              }
                            ],
                            "title": "Rev Real-time Transcription Settings",
                            "description": "Docs: https://docs.rev.ai/api/streaming/requests/"
                          },
                          "aws_transcribe": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "language_code": {
                                    "type": "string"
                                  },
                                  "content_redaction_type": {
                                    "type": "string"
                                  },
                                  "language_model_name": {
                                    "type": "string"
                                  },
                                  "language_options": {
                                    "type": "string"
                                  },
                                  "language_identification": {
                                    "type": "boolean"
                                  },
                                  "partial_results_stability": {
                                    "type": "string"
                                  },
                                  "pii_entity_types": {
                                    "type": "string"
                                  },
                                  "preferred_language": {
                                    "type": "string"
                                  },
                                  "show_speaker_label": {
                                    "type": "boolean"
                                  },
                                  "vocabulary_filter_method": {
                                    "type": "string"
                                  },
                                  "vocabulary_filter_names": {
                                    "type": "string"
                                  },
                                  "vocabulary_names": {
                                    "type": "string"
                                  }
                                }
                              }
                            ],
                            "title": "AWS Transcribe Real-time Transcription Settings",
                            "description": "Docs: https://docs.aws.amazon.com/transcribe/latest/APIReference/API_streaming_StartStreamTranscription.html"
                          }
                        },
                        "required": [
                          "provider"
                        ]
                      }
                    ],
                    "writeOnly": true
                  },
                  "chat": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "on_bot_join": {
                            "type": "object",
                            "properties": {
                              "send_to": {
                                "enum": [
                                  "host",
                                  "everyone",
                                  "everyone_except_host"
                                ],
                                "type": "string"
                              },
                              "message": {
                                "type": "string",
                                "maxLength": 4096
                              }
                            },
                            "required": [
                              "message",
                              "send_to"
                            ]
                          },
                          "on_participant_join": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "maxLength": 4096
                              },
                              "exclude_host": {
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "exclude_host",
                              "message"
                            ]
                          }
                        }
                      }
                    ],
                    "writeOnly": true,
                    "description": "(BETA) Settings for the bot to send chat messages."
                  },
                  "zoom": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "join_token_url": {
                            "type": "string",
                            "format": "uri",
                            "description": "A URL which Recall will make a GET request to, in order to retrieve the Zoom Join Token for Local Recording, which the V2 Zoom bot uses to automatically record. This token can be generated through the Zoom API. Docs: https://marketplace.zoom.us/docs/api-reference/zoom-api/methods/#operation/meetingLocalRecordingJoinToken"
                          },
                          "zak_url": {
                            "type": "string",
                            "format": "uri",
                            "description": "A URL which Recall will make  GET request to, in order to retrieve the ZAK. The V1 Zoom bot uses this to join meetings that require authentication to join.This token can be generated through the Zoom API. Docs: https://marketplace.zoom.us/docs/api-reference/zoom-api/methods/#operation/userZak"
                          }
                        }
                      }
                    ],
                    "writeOnly": true,
                    "description": "Zoom specific parameters"
                  },
                  "google_meet": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "login_required": {
                            "type": "boolean",
                            "nullable": true,
                            "description": "Specify if the bot should always login to Google before joining the meeting. This value will override the default value set on bot's Google Meet login credentials on the account. When set to 'false', the bot will only login if required by the meeting."
                          }
                        }
                      }
                    ],
                    "writeOnly": true,
                    "description": "Google Meet specific parameters"
                  },
                  "automatic_leave": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "waiting_room_timeout": {
                            "type": "integer",
                            "minimum": 30,
                            "default": 1200,
                            "description": "The number of seconds after which the bot will automatically leave the call, if it has not been let in from the waiting room."
                          },
                          "noone_joined_timeout": {
                            "type": "integer",
                            "minimum": 30,
                            "default": 1200,
                            "description": "(BETA) The number of seconds after which the bot will automatically leave the call, if it has joined the meeting but no other participant has joined."
                          },
                          "everyone_left_timeout": {
                            "type": "integer",
                            "minimum": 1,
                            "default": 2,
                            "description": "(BETA) The number of seconds after which the bot will automatically leave the call, if there were other participants in the call who have all left."
                          }
                        }
                      }
                    ],
                    "writeOnly": true
                  },
                  "automatic_video_output": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "in_call_recording": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "kind": {
                                    "allOf": [
                                      {
                                        "enum": [
                                          "jpeg"
                                        ],
                                        "type": "string"
                                      }
                                    ],
                                    "description": "The kind of data encoded in b64_data"
                                  },
                                  "b64_data": {
                                    "type": "string",
                                    "description": "Data encoded in Base64 format, using the standard alphabet (specified here: https://datatracker.ietf.org/doc/html/rfc4648#section-4)",
                                    "maxLength": 1835008
                                  }
                                },
                                "required": [
                                  "b64_data",
                                  "kind"
                                ]
                              }
                            ],
                            "description": "The video that will be automatically output when the bot is in the in_call_recording state"
                          }
                        },
                        "required": [
                          "in_call_recording"
                        ]
                      }
                    ],
                    "writeOnly": true,
                    "description": "(BETA) Settings for the bot to output video."
                  },
                  "automatic_audio_output": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "in_call_recording": {
                            "type": "object",
                            "properties": {
                              "data": {
                                "type": "object",
                                "properties": {
                                  "kind": {
                                    "allOf": [
                                      {
                                        "enum": [
                                          "mp3"
                                        ],
                                        "type": "string"
                                      }
                                    ],
                                    "description": "The kind of data encoded in b64_data"
                                  },
                                  "b64_data": {
                                    "type": "string",
                                    "description": "Data encoded in Base64 format, using the standard alphabet (specified here: https://datatracker.ietf.org/doc/html/rfc4648#section-4)",
                                    "maxLength": 1835008
                                  }
                                },
                                "required": [
                                  "b64_data",
                                  "kind"
                                ]
                              },
                              "replay_on_participant_join": {
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "debounce_interval": {
                                        "type": "integer",
                                        "description": "The amount of time to wait for additional participants to join before replaying the audio."
                                      }
                                    },
                                    "required": [
                                      "debounce_interval"
                                    ]
                                  }
                                ],
                                "description": "Specify this parameter if you want the audio to be replayed when additional participants join the call."
                              }
                            },
                            "required": [
                              "data"
                            ]
                          }
                        },
                        "required": [
                          "in_call_recording"
                        ]
                      }
                    ],
                    "writeOnly": true,
                    "description": "(BETA) Settings for the bot to output audio."
                  },
                  "calendar_meetings": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "readOnly": true
                        },
                        "start_time": {
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        },
                        "end_time": {
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        },
                        "calendar_user": {
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "uuid",
                                  "readOnly": true
                                },
                                "external_id": {
                                  "type": "string",
                                  "readOnly": true
                                }
                              },
                              "required": [
                                "external_id",
                                "id"
                              ]
                            }
                          ],
                          "readOnly": true
                        }
                      },
                      "required": [
                        "calendar_user",
                        "end_time",
                        "id",
                        "start_time"
                      ]
                    },
                    "readOnly": true
                  },
                  "recording_mode": {
                    "allOf": [
                      {
                        "enum": [
                          "speaker_view",
                          "gallery_view",
                          "gallery_view_v2"
                        ],
                        "type": "string"
                      }
                    ],
                    "writeOnly": true,
                    "default": "speaker_view",
                    "description": "The layout of the output video."
                  },
                  "recording_mode_options": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "participant_video_when_screenshare": {
                            "allOf": [
                              {
                                "enum": [
                                  "hide",
                                  "beside",
                                  "overlap"
                                ],
                                "type": "string"
                              }
                            ],
                            "description": "The layout of participant video streams when a screen is being shared. More docs: https://recallai.readme.io/reference/bot-faqs#5-what-do-the-recording-modes-look-like-when-specified-in-create-bot"
                          }
                        },
                        "required": [
                          "participant_video_when_screenshare"
                        ]
                      }
                    ],
                    "writeOnly": true,
                    "description": "Additional options for the output video layout."
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                  },
                  "video_url": {
                    "type": "string",
                    "format": "uri",
                    "readOnly": true,
                    "description": "A URL where the video recorded by the bot can be downloaded. This is null while the recording is in progress, and will be populated when the recording is completed. The returned URL is valid for 6 hours from the API call. A fresh URL can be obtained at any point by calling the API again."
                  },
                  "recording": {
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "media_retention_end": {
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true,
                    "description": "After this date the video and transcript will be deleted. This date is 7 days from when the recording ended."
                  },
                  "status_changes": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "readOnly": true
                        },
                        "message": {
                          "type": "string",
                          "readOnly": true
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        },
                        "sub_code": {
                          "type": "string",
                          "readOnly": true
                        }
                      },
                      "required": [
                        "code",
                        "created_at",
                        "message",
                        "sub_code"
                      ]
                    },
                    "readOnly": true
                  },
                  "meeting_metadata": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The title of the meeting the bot has joined."
                          }
                        },
                        "required": [
                          "title"
                        ]
                      }
                    ],
                    "readOnly": true,
                    "nullable": true
                  },
                  "meeting_participants": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "readOnly": true
                        },
                        "name": {
                          "type": "string",
                          "readOnly": true
                        },
                        "events": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "code": {
                                "type": "string",
                                "readOnly": true
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              }
                            },
                            "required": [
                              "code",
                              "created_at"
                            ]
                          },
                          "readOnly": true
                        }
                      },
                      "required": [
                        "events",
                        "id",
                        "name"
                      ]
                    },
                    "readOnly": true
                  },
                  "meeting_url": {
                    "type": "string",
                    "nullable": true,
                    "description": "The url of the meeting. For example, https://zoom.us/j/123?pwd=456. This field can only be read from scheduled bots that have not yet joined a call. Once a bot has joined a call, it's meeting_url will be cleared."
                  },
                  "bot_name": {
                    "type": "string",
                    "writeOnly": true,
                    "default": "Meeting Notetaker",
                    "description": "The name of the bot that will be displayed in the call.",
                    "maxLength": 100
                  },
                  "join_at": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true,
                    "description": "The time at which the bot will join the call, formatted in ISO 8601. This field can only be read from scheduled bots that have not yet joined a call. Once a bot has joined a call, it's join_at will be cleared."
                  },
                  "real_time_transcription": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "destination_url": {
                            "type": "string",
                            "format": "uri"
                          },
                          "partial_results": {
                            "type": "boolean",
                            "default": false
                          }
                        },
                        "required": [
                          "destination_url"
                        ]
                      }
                    ],
                    "writeOnly": true,
                    "description": "The settings for real-time transcription."
                  },
                  "real_time_media": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "rtmp_destination_url": {
                            "type": "string"
                          },
                          "websocket_video_destination_url": {
                            "type": "string"
                          },
                          "websocket_audio_destination_url": {
                            "type": "string"
                          },
                          "websocket_speaker_timeline_destination_url": {
                            "type": "string"
                          },
                          "websocket_speaker_timeline_exclude_null_speaker": {
                            "type": "boolean",
                            "default": true,
                            "description": "Set to false to include null active speaker events in the speaker timeline websocket. Defaults to true."
                          },
                          "webhook_call_events_destination_url": {
                            "type": "string",
                            "description": "(BETA) Receive webhooks for in call events('bot.participant_join'/'bot.participant_leave'/'bot.active_speaker_notify')"
                          }
                        }
                      }
                    ],
                    "writeOnly": true,
                    "description": "The settings for real-time media output."
                  },
                  "transcription_options": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "provider": {
                            "enum": [
                              "deepgram",
                              "assembly_ai",
                              "rev",
                              "aws_transcribe",
                              "symbl",
                              "none"
                            ],
                            "type": "string"
                          },
                          "assembly_ai": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "word_boost": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            ],
                            "title": "AssemblyAi Real-time Transcription Settings",
                            "description": "Docs: https://www.assemblyai.com/docs/walkthroughs#realtime-streaming-transcription"
                          },
                          "deepgram": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "tier": {
                                    "type": "string"
                                  },
                                  "model": {
                                    "type": "string"
                                  },
                                  "version": {
                                    "type": "string"
                                  },
                                  "language": {
                                    "type": "string"
                                  },
                                  "profanity_filter": {
                                    "type": "boolean"
                                  },
                                  "redact": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "diarize": {
                                    "type": "boolean"
                                  },
                                  "diarize_version": {
                                    "type": "string"
                                  },
                                  "ner": {
                                    "type": "boolean"
                                  },
                                  "alternatives": {
                                    "type": "integer"
                                  },
                                  "numerals": {
                                    "type": "boolean"
                                  },
                                  "search": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "replace": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "keywords": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "interim_results": {
                                    "type": "boolean"
                                  },
                                  "endpointing": {
                                    "type": "boolean"
                                  }
                                }
                              }
                            ],
                            "title": "Deepgram Real-time Transcription Settings",
                            "description": "Docs: https://developers.deepgram.com/api-reference/transcription/#transcribe-live-streaming-audio"
                          },
                          "rev": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "language": {
                                    "type": "string"
                                  },
                                  "metadata": {
                                    "type": "string"
                                  },
                                  "custom_vocabulary_id": {
                                    "type": "string",
                                    "maxLength": 200
                                  },
                                  "filter_profanity": {
                                    "type": "boolean"
                                  },
                                  "remove_disfluencies": {
                                    "type": "boolean"
                                  },
                                  "delete_after_seconds": {
                                    "type": "integer"
                                  },
                                  "detailed_partials": {
                                    "type": "boolean"
                                  },
                                  "start_ts": {
                                    "type": "number",
                                    "format": "double"
                                  },
                                  "max_segment_duration_seconds": {
                                    "type": "integer"
                                  },
                                  "transcriber": {
                                    "type": "string"
                                  },
                                  "enable_speaker_switch": {
                                    "type": "boolean"
                                  },
                                  "skip_postprocessing": {
                                    "type": "boolean"
                                  },
                                  "priority": {
                                    "type": "string"
                                  }
                                }
                              }
                            ],
                            "title": "Rev Real-time Transcription Settings",
                            "description": "Docs: https://docs.rev.ai/api/streaming/requests/"
                          },
                          "aws_transcribe": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "language_code": {
                                    "type": "string"
                                  },
                                  "content_redaction_type": {
                                    "type": "string"
                                  },
                                  "language_model_name": {
                                    "type": "string"
                                  },
                                  "language_options": {
                                    "type": "string"
                                  },
                                  "language_identification": {
                                    "type": "boolean"
                                  },
                                  "partial_results_stability": {
                                    "type": "string"
                                  },
                                  "pii_entity_types": {
                                    "type": "string"
                                  },
                                  "preferred_language": {
                                    "type": "string"
                                  },
                                  "show_speaker_label": {
                                    "type": "boolean"
                                  },
                                  "vocabulary_filter_method": {
                                    "type": "string"
                                  },
                                  "vocabulary_filter_names": {
                                    "type": "string"
                                  },
                                  "vocabulary_names": {
                                    "type": "string"
                                  }
                                }
                              }
                            ],
                            "title": "AWS Transcribe Real-time Transcription Settings",
                            "description": "Docs: https://docs.aws.amazon.com/transcribe/latest/APIReference/API_streaming_StartStreamTranscription.html"
                          }
                        },
                        "required": [
                          "provider"
                        ]
                      }
                    ],
                    "writeOnly": true
                  },
                  "chat": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "on_bot_join": {
                            "type": "object",
                            "properties": {
                              "send_to": {
                                "enum": [
                                  "host",
                                  "everyone",
                                  "everyone_except_host"
                                ],
                                "type": "string"
                              },
                              "message": {
                                "type": "string",
                                "maxLength": 4096
                              }
                            },
                            "required": [
                              "message",
                              "send_to"
                            ]
                          },
                          "on_participant_join": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "maxLength": 4096
                              },
                              "exclude_host": {
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "exclude_host",
                              "message"
                            ]
                          }
                        }
                      }
                    ],
                    "writeOnly": true,
                    "description": "(BETA) Settings for the bot to send chat messages."
                  },
                  "zoom": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "join_token_url": {
                            "type": "string",
                            "format": "uri",
                            "description": "A URL which Recall will make a GET request to, in order to retrieve the Zoom Join Token for Local Recording, which the V2 Zoom bot uses to automatically record. This token can be generated through the Zoom API. Docs: https://marketplace.zoom.us/docs/api-reference/zoom-api/methods/#operation/meetingLocalRecordingJoinToken"
                          },
                          "zak_url": {
                            "type": "string",
                            "format": "uri",
                            "description": "A URL which Recall will make  GET request to, in order to retrieve the ZAK. The V1 Zoom bot uses this to join meetings that require authentication to join.This token can be generated through the Zoom API. Docs: https://marketplace.zoom.us/docs/api-reference/zoom-api/methods/#operation/userZak"
                          }
                        }
                      }
                    ],
                    "writeOnly": true,
                    "description": "Zoom specific parameters"
                  },
                  "google_meet": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "login_required": {
                            "type": "boolean",
                            "nullable": true,
                            "description": "Specify if the bot should always login to Google before joining the meeting. This value will override the default value set on bot's Google Meet login credentials on the account. When set to 'false', the bot will only login if required by the meeting."
                          }
                        }
                      }
                    ],
                    "writeOnly": true,
                    "description": "Google Meet specific parameters"
                  },
                  "automatic_leave": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "waiting_room_timeout": {
                            "type": "integer",
                            "minimum": 30,
                            "default": 1200,
                            "description": "The number of seconds after which the bot will automatically leave the call, if it has not been let in from the waiting room."
                          },
                          "noone_joined_timeout": {
                            "type": "integer",
                            "minimum": 30,
                            "default": 1200,
                            "description": "(BETA) The number of seconds after which the bot will automatically leave the call, if it has joined the meeting but no other participant has joined."
                          },
                          "everyone_left_timeout": {
                            "type": "integer",
                            "minimum": 1,
                            "default": 2,
                            "description": "(BETA) The number of seconds after which the bot will automatically leave the call, if there were other participants in the call who have all left."
                          }
                        }
                      }
                    ],
                    "writeOnly": true
                  },
                  "automatic_video_output": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "in_call_recording": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "kind": {
                                    "allOf": [
                                      {
                                        "enum": [
                                          "jpeg"
                                        ],
                                        "type": "string"
                                      }
                                    ],
                                    "description": "The kind of data encoded in b64_data"
                                  },
                                  "b64_data": {
                                    "type": "string",
                                    "description": "Data encoded in Base64 format, using the standard alphabet (specified here: https://datatracker.ietf.org/doc/html/rfc4648#section-4)",
                                    "maxLength": 1835008
                                  }
                                },
                                "required": [
                                  "b64_data",
                                  "kind"
                                ]
                              }
                            ],
                            "description": "The video that will be automatically output when the bot is in the in_call_recording state"
                          }
                        },
                        "required": [
                          "in_call_recording"
                        ]
                      }
                    ],
                    "writeOnly": true,
                    "description": "(BETA) Settings for the bot to output video."
                  },
                  "automatic_audio_output": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "in_call_recording": {
                            "type": "object",
                            "properties": {
                              "data": {
                                "type": "object",
                                "properties": {
                                  "kind": {
                                    "allOf": [
                                      {
                                        "enum": [
                                          "mp3"
                                        ],
                                        "type": "string"
                                      }
                                    ],
                                    "description": "The kind of data encoded in b64_data"
                                  },
                                  "b64_data": {
                                    "type": "string",
                                    "description": "Data encoded in Base64 format, using the standard alphabet (specified here: https://datatracker.ietf.org/doc/html/rfc4648#section-4)",
                                    "maxLength": 1835008
                                  }
                                },
                                "required": [
                                  "b64_data",
                                  "kind"
                                ]
                              },
                              "replay_on_participant_join": {
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "debounce_interval": {
                                        "type": "integer",
                                        "description": "The amount of time to wait for additional participants to join before replaying the audio."
                                      }
                                    },
                                    "required": [
                                      "debounce_interval"
                                    ]
                                  }
                                ],
                                "description": "Specify this parameter if you want the audio to be replayed when additional participants join the call."
                              }
                            },
                            "required": [
                              "data"
                            ]
                          }
                        },
                        "required": [
                          "in_call_recording"
                        ]
                      }
                    ],
                    "writeOnly": true,
                    "description": "(BETA) Settings for the bot to output audio."
                  },
                  "calendar_meetings": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "readOnly": true
                        },
                        "start_time": {
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        },
                        "end_time": {
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        },
                        "calendar_user": {
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "uuid",
                                  "readOnly": true
                                },
                                "external_id": {
                                  "type": "string",
                                  "readOnly": true
                                }
                              },
                              "required": [
                                "external_id",
                                "id"
                              ]
                            }
                          ],
                          "readOnly": true
                        }
                      },
                      "required": [
                        "calendar_user",
                        "end_time",
                        "id",
                        "start_time"
                      ]
                    },
                    "readOnly": true
                  },
                  "recording_mode": {
                    "allOf": [
                      {
                        "enum": [
                          "speaker_view",
                          "gallery_view",
                          "gallery_view_v2"
                        ],
                        "type": "string"
                      }
                    ],
                    "writeOnly": true,
                    "default": "speaker_view",
                    "description": "The layout of the output video."
                  },
                  "recording_mode_options": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "participant_video_when_screenshare": {
                            "allOf": [
                              {
                                "enum": [
                                  "hide",
                                  "beside",
                                  "overlap"
                                ],
                                "type": "string"
                              }
                            ],
                            "description": "The layout of participant video streams when a screen is being shared. More docs: https://recallai.readme.io/reference/bot-faqs#5-what-do-the-recording-modes-look-like-when-specified-in-create-bot"
                          }
                        },
                        "required": [
                          "participant_video_when_screenshare"
                        ]
                      }
                    ],
                    "writeOnly": true,
                    "description": "Additional options for the output video layout."
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "readOnly": true
                    },
                    "video_url": {
                      "type": "string",
                      "format": "uri",
                      "readOnly": true,
                      "description": "A URL where the video recorded by the bot can be downloaded. This is null while the recording is in progress, and will be populated when the recording is completed. The returned URL is valid for 6 hours from the API call. A fresh URL can be obtained at any point by calling the API again."
                    },
                    "recording": {
                      "type": "string",
                      "format": "uuid",
                      "nullable": true
                    },
                    "media_retention_end": {
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "description": "After this date the video and transcript will be deleted. This date is 7 days from when the recording ended."
                    },
                    "status_changes": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "string",
                            "readOnly": true
                          },
                          "message": {
                            "type": "string",
                            "readOnly": true
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          },
                          "sub_code": {
                            "type": "string",
                            "readOnly": true
                          }
                        },
                        "required": [
                          "code",
                          "created_at",
                          "message",
                          "sub_code"
                        ]
                      },
                      "readOnly": true
                    },
                    "meeting_metadata": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "title": {
                              "type": "string",
                              "readOnly": true,
                              "description": "The title of the meeting the bot has joined."
                            }
                          },
                          "required": [
                            "title"
                          ]
                        }
                      ],
                      "readOnly": true,
                      "nullable": true
                    },
                    "meeting_participants": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "readOnly": true
                          },
                          "name": {
                            "type": "string",
                            "readOnly": true
                          },
                          "events": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "code": {
                                  "type": "string",
                                  "readOnly": true
                                },
                                "created_at": {
                                  "type": "string",
                                  "format": "date-time",
                                  "readOnly": true
                                }
                              },
                              "required": [
                                "code",
                                "created_at"
                              ]
                            },
                            "readOnly": true
                          }
                        },
                        "required": [
                          "events",
                          "id",
                          "name"
                        ]
                      },
                      "readOnly": true
                    },
                    "meeting_url": {
                      "type": "string",
                      "nullable": true,
                      "description": "The url of the meeting. For example, https://zoom.us/j/123?pwd=456. This field can only be read from scheduled bots that have not yet joined a call. Once a bot has joined a call, it's meeting_url will be cleared."
                    },
                    "bot_name": {
                      "type": "string",
                      "writeOnly": true,
                      "default": "Meeting Notetaker",
                      "description": "The name of the bot that will be displayed in the call.",
                      "maxLength": 100
                    },
                    "join_at": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true,
                      "description": "The time at which the bot will join the call, formatted in ISO 8601. This field can only be read from scheduled bots that have not yet joined a call. Once a bot has joined a call, it's join_at will be cleared."
                    },
                    "real_time_transcription": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "destination_url": {
                              "type": "string",
                              "format": "uri"
                            },
                            "partial_results": {
                              "type": "boolean",
                              "default": false
                            }
                          },
                          "required": [
                            "destination_url"
                          ]
                        }
                      ],
                      "writeOnly": true,
                      "description": "The settings for real-time transcription."
                    },
                    "real_time_media": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "rtmp_destination_url": {
                              "type": "string"
                            },
                            "websocket_video_destination_url": {
                              "type": "string"
                            },
                            "websocket_audio_destination_url": {
                              "type": "string"
                            },
                            "websocket_speaker_timeline_destination_url": {
                              "type": "string"
                            },
                            "websocket_speaker_timeline_exclude_null_speaker": {
                              "type": "boolean",
                              "default": true,
                              "description": "Set to false to include null active speaker events in the speaker timeline websocket. Defaults to true."
                            },
                            "webhook_call_events_destination_url": {
                              "type": "string",
                              "description": "(BETA) Receive webhooks for in call events('bot.participant_join'/'bot.participant_leave'/'bot.active_speaker_notify')"
                            }
                          }
                        }
                      ],
                      "writeOnly": true,
                      "description": "The settings for real-time media output."
                    },
                    "transcription_options": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "provider": {
                              "enum": [
                                "deepgram",
                                "assembly_ai",
                                "rev",
                                "aws_transcribe",
                                "symbl",
                                "none"
                              ],
                              "type": "string"
                            },
                            "assembly_ai": {
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "word_boost": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              ],
                              "title": "AssemblyAi Real-time Transcription Settings",
                              "description": "Docs: https://www.assemblyai.com/docs/walkthroughs#realtime-streaming-transcription"
                            },
                            "deepgram": {
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "tier": {
                                      "type": "string"
                                    },
                                    "model": {
                                      "type": "string"
                                    },
                                    "version": {
                                      "type": "string"
                                    },
                                    "language": {
                                      "type": "string"
                                    },
                                    "profanity_filter": {
                                      "type": "boolean"
                                    },
                                    "redact": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "diarize": {
                                      "type": "boolean"
                                    },
                                    "diarize_version": {
                                      "type": "string"
                                    },
                                    "ner": {
                                      "type": "boolean"
                                    },
                                    "alternatives": {
                                      "type": "integer"
                                    },
                                    "numerals": {
                                      "type": "boolean"
                                    },
                                    "search": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "replace": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "keywords": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "interim_results": {
                                      "type": "boolean"
                                    },
                                    "endpointing": {
                                      "type": "boolean"
                                    }
                                  }
                                }
                              ],
                              "title": "Deepgram Real-time Transcription Settings",
                              "description": "Docs: https://developers.deepgram.com/api-reference/transcription/#transcribe-live-streaming-audio"
                            },
                            "rev": {
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "language": {
                                      "type": "string"
                                    },
                                    "metadata": {
                                      "type": "string"
                                    },
                                    "custom_vocabulary_id": {
                                      "type": "string",
                                      "maxLength": 200
                                    },
                                    "filter_profanity": {
                                      "type": "boolean"
                                    },
                                    "remove_disfluencies": {
                                      "type": "boolean"
                                    },
                                    "delete_after_seconds": {
                                      "type": "integer"
                                    },
                                    "detailed_partials": {
                                      "type": "boolean"
                                    },
                                    "start_ts": {
                                      "type": "number",
                                      "format": "double"
                                    },
                                    "max_segment_duration_seconds": {
                                      "type": "integer"
                                    },
                                    "transcriber": {
                                      "type": "string"
                                    },
                                    "enable_speaker_switch": {
                                      "type": "boolean"
                                    },
                                    "skip_postprocessing": {
                                      "type": "boolean"
                                    },
                                    "priority": {
                                      "type": "string"
                                    }
                                  }
                                }
                              ],
                              "title": "Rev Real-time Transcription Settings",
                              "description": "Docs: https://docs.rev.ai/api/streaming/requests/"
                            },
                            "aws_transcribe": {
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "language_code": {
                                      "type": "string"
                                    },
                                    "content_redaction_type": {
                                      "type": "string"
                                    },
                                    "language_model_name": {
                                      "type": "string"
                                    },
                                    "language_options": {
                                      "type": "string"
                                    },
                                    "language_identification": {
                                      "type": "boolean"
                                    },
                                    "partial_results_stability": {
                                      "type": "string"
                                    },
                                    "pii_entity_types": {
                                      "type": "string"
                                    },
                                    "preferred_language": {
                                      "type": "string"
                                    },
                                    "show_speaker_label": {
                                      "type": "boolean"
                                    },
                                    "vocabulary_filter_method": {
                                      "type": "string"
                                    },
                                    "vocabulary_filter_names": {
                                      "type": "string"
                                    },
                                    "vocabulary_names": {
                                      "type": "string"
                                    }
                                  }
                                }
                              ],
                              "title": "AWS Transcribe Real-time Transcription Settings",
                              "description": "Docs: https://docs.aws.amazon.com/transcribe/latest/APIReference/API_streaming_StartStreamTranscription.html"
                            }
                          },
                          "required": [
                            "provider"
                          ]
                        }
                      ],
                      "writeOnly": true
                    },
                    "chat": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "on_bot_join": {
                              "type": "object",
                              "properties": {
                                "send_to": {
                                  "enum": [
                                    "host",
                                    "everyone",
                                    "everyone_except_host"
                                  ],
                                  "type": "string"
                                },
                                "message": {
                                  "type": "string",
                                  "maxLength": 4096
                                }
                              },
                              "required": [
                                "message",
                                "send_to"
                              ]
                            },
                            "on_participant_join": {
                              "type": "object",
                              "properties": {
                                "message": {
                                  "type": "string",
                                  "maxLength": 4096
                                },
                                "exclude_host": {
                                  "type": "boolean"
                                }
                              },
                              "required": [
                                "exclude_host",
                                "message"
                              ]
                            }
                          }
                        }
                      ],
                      "writeOnly": true,
                      "description": "(BETA) Settings for the bot to send chat messages."
                    },
                    "zoom": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "join_token_url": {
                              "type": "string",
                              "format": "uri",
                              "description": "A URL which Recall will make a GET request to, in order to retrieve the Zoom Join Token for Local Recording, which the V2 Zoom bot uses to automatically record. This token can be generated through the Zoom API. Docs: https://marketplace.zoom.us/docs/api-reference/zoom-api/methods/#operation/meetingLocalRecordingJoinToken"
                            },
                            "zak_url": {
                              "type": "string",
                              "format": "uri",
                              "description": "A URL which Recall will make  GET request to, in order to retrieve the ZAK. The V1 Zoom bot uses this to join meetings that require authentication to join.This token can be generated through the Zoom API. Docs: https://marketplace.zoom.us/docs/api-reference/zoom-api/methods/#operation/userZak"
                            }
                          }
                        }
                      ],
                      "writeOnly": true,
                      "description": "Zoom specific parameters"
                    },
                    "google_meet": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "login_required": {
                              "type": "boolean",
                              "nullable": true,
                              "description": "Specify if the bot should always login to Google before joining the meeting. This value will override the default value set on bot's Google Meet login credentials on the account. When set to 'false', the bot will only login if required by the meeting."
                            }
                          }
                        }
                      ],
                      "writeOnly": true,
                      "description": "Google Meet specific parameters"
                    },
                    "automatic_leave": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "waiting_room_timeout": {
                              "type": "integer",
                              "minimum": 30,
                              "default": 1200,
                              "description": "The number of seconds after which the bot will automatically leave the call, if it has not been let in from the waiting room."
                            },
                            "noone_joined_timeout": {
                              "type": "integer",
                              "minimum": 30,
                              "default": 1200,
                              "description": "(BETA) The number of seconds after which the bot will automatically leave the call, if it has joined the meeting but no other participant has joined."
                            },
                            "everyone_left_timeout": {
                              "type": "integer",
                              "minimum": 1,
                              "default": 2,
                              "description": "(BETA) The number of seconds after which the bot will automatically leave the call, if there were other participants in the call who have all left."
                            }
                          }
                        }
                      ],
                      "writeOnly": true
                    },
                    "automatic_video_output": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "in_call_recording": {
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "kind": {
                                      "allOf": [
                                        {
                                          "enum": [
                                            "jpeg"
                                          ],
                                          "type": "string"
                                        }
                                      ],
                                      "description": "The kind of data encoded in b64_data"
                                    },
                                    "b64_data": {
                                      "type": "string",
                                      "description": "Data encoded in Base64 format, using the standard alphabet (specified here: https://datatracker.ietf.org/doc/html/rfc4648#section-4)",
                                      "maxLength": 1835008
                                    }
                                  },
                                  "required": [
                                    "b64_data",
                                    "kind"
                                  ]
                                }
                              ],
                              "description": "The video that will be automatically output when the bot is in the in_call_recording state"
                            }
                          },
                          "required": [
                            "in_call_recording"
                          ]
                        }
                      ],
                      "writeOnly": true,
                      "description": "(BETA) Settings for the bot to output video."
                    },
                    "automatic_audio_output": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "in_call_recording": {
                              "type": "object",
                              "properties": {
                                "data": {
                                  "type": "object",
                                  "properties": {
                                    "kind": {
                                      "allOf": [
                                        {
                                          "enum": [
                                            "mp3"
                                          ],
                                          "type": "string"
                                        }
                                      ],
                                      "description": "The kind of data encoded in b64_data"
                                    },
                                    "b64_data": {
                                      "type": "string",
                                      "description": "Data encoded in Base64 format, using the standard alphabet (specified here: https://datatracker.ietf.org/doc/html/rfc4648#section-4)",
                                      "maxLength": 1835008
                                    }
                                  },
                                  "required": [
                                    "b64_data",
                                    "kind"
                                  ]
                                },
                                "replay_on_participant_join": {
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "debounce_interval": {
                                          "type": "integer",
                                          "description": "The amount of time to wait for additional participants to join before replaying the audio."
                                        }
                                      },
                                      "required": [
                                        "debounce_interval"
                                      ]
                                    }
                                  ],
                                  "description": "Specify this parameter if you want the audio to be replayed when additional participants join the call."
                                }
                              },
                              "required": [
                                "data"
                              ]
                            }
                          },
                          "required": [
                            "in_call_recording"
                          ]
                        }
                      ],
                      "writeOnly": true,
                      "description": "(BETA) Settings for the bot to output audio."
                    },
                    "calendar_meetings": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "readOnly": true
                          },
                          "start_time": {
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          },
                          "end_time": {
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          },
                          "calendar_user": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "readOnly": true
                                  },
                                  "external_id": {
                                    "type": "string",
                                    "readOnly": true
                                  }
                                },
                                "required": [
                                  "external_id",
                                  "id"
                                ]
                              }
                            ],
                            "readOnly": true
                          }
                        },
                        "required": [
                          "calendar_user",
                          "end_time",
                          "id",
                          "start_time"
                        ]
                      },
                      "readOnly": true
                    },
                    "recording_mode": {
                      "allOf": [
                        {
                          "enum": [
                            "speaker_view",
                            "gallery_view",
                            "gallery_view_v2"
                          ],
                          "type": "string"
                        }
                      ],
                      "writeOnly": true,
                      "default": "speaker_view",
                      "description": "The layout of the output video."
                    },
                    "recording_mode_options": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "participant_video_when_screenshare": {
                              "allOf": [
                                {
                                  "enum": [
                                    "hide",
                                    "beside",
                                    "overlap"
                                  ],
                                  "type": "string"
                                }
                              ],
                              "description": "The layout of participant video streams when a screen is being shared. More docs: https://recallai.readme.io/reference/bot-faqs#5-what-do-the-recording-modes-look-like-when-specified-in-create-bot"
                            }
                          },
                          "required": [
                            "participant_video_when_screenshare"
                          ]
                        }
                      ],
                      "writeOnly": true,
                      "description": "Additional options for the output video layout."
                    }
                  },
                  "required": [
                    "calendar_meetings",
                    "id",
                    "media_retention_end",
                    "meeting_metadata",
                    "meeting_participants",
                    "meeting_url",
                    "status_changes",
                    "video_url"
                  ]
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "bot_destroy",
        "description": "Deletes a bot. This can only be done on scheduled bots that have not yet joined a call.",
        "summary": "Delete Scheduled Bot",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "A UUID string identifying this bot.",
            "required": true
          }
        ],
        "tags": [
          "bot"
        ],
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          }
        }
      }
    },
    "/api/v1/bot/{id}/delete_media/": {
      "post": {
        "operationId": "bot_delete_media_create",
        "description": "Deletes bot media stored by Recall. This is irreversable.",
        "summary": "Delete Bot Media",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "A UUID string identifying this bot.",
            "required": true
          }
        ],
        "tags": [
          "bot"
        ],
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "readOnly": true
                    },
                    "video_url": {
                      "type": "string",
                      "format": "uri",
                      "readOnly": true,
                      "description": "A URL where the video recorded by the bot can be downloaded. This is null while the recording is in progress, and will be populated when the recording is completed. The returned URL is valid for 6 hours from the API call. A fresh URL can be obtained at any point by calling the API again."
                    },
                    "recording": {
                      "type": "string",
                      "format": "uuid",
                      "nullable": true
                    },
                    "media_retention_end": {
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "description": "After this date the video and transcript will be deleted. This date is 7 days from when the recording ended."
                    },
                    "status_changes": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "string",
                            "readOnly": true
                          },
                          "message": {
                            "type": "string",
                            "readOnly": true
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          },
                          "sub_code": {
                            "type": "string",
                            "readOnly": true
                          }
                        },
                        "required": [
                          "code",
                          "created_at",
                          "message",
                          "sub_code"
                        ]
                      },
                      "readOnly": true
                    },
                    "meeting_metadata": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "title": {
                              "type": "string",
                              "readOnly": true,
                              "description": "The title of the meeting the bot has joined."
                            }
                          },
                          "required": [
                            "title"
                          ]
                        }
                      ],
                      "readOnly": true,
                      "nullable": true
                    },
                    "meeting_participants": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "readOnly": true
                          },
                          "name": {
                            "type": "string",
                            "readOnly": true
                          },
                          "events": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "code": {
                                  "type": "string",
                                  "readOnly": true
                                },
                                "created_at": {
                                  "type": "string",
                                  "format": "date-time",
                                  "readOnly": true
                                }
                              },
                              "required": [
                                "code",
                                "created_at"
                              ]
                            },
                            "readOnly": true
                          }
                        },
                        "required": [
                          "events",
                          "id",
                          "name"
                        ]
                      },
                      "readOnly": true
                    },
                    "meeting_url": {
                      "type": "string",
                      "nullable": true,
                      "description": "The url of the meeting. For example, https://zoom.us/j/123?pwd=456. This field can only be read from scheduled bots that have not yet joined a call. Once a bot has joined a call, it's meeting_url will be cleared."
                    },
                    "bot_name": {
                      "type": "string",
                      "writeOnly": true,
                      "default": "Meeting Notetaker",
                      "description": "The name of the bot that will be displayed in the call.",
                      "maxLength": 100
                    },
                    "join_at": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true,
                      "description": "The time at which the bot will join the call, formatted in ISO 8601. This field can only be read from scheduled bots that have not yet joined a call. Once a bot has joined a call, it's join_at will be cleared."
                    },
                    "real_time_transcription": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "destination_url": {
                              "type": "string",
                              "format": "uri"
                            },
                            "partial_results": {
                              "type": "boolean",
                              "default": false
                            }
                          },
                          "required": [
                            "destination_url"
                          ]
                        }
                      ],
                      "writeOnly": true,
                      "description": "The settings for real-time transcription."
                    },
                    "real_time_media": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "rtmp_destination_url": {
                              "type": "string"
                            },
                            "websocket_video_destination_url": {
                              "type": "string"
                            },
                            "websocket_audio_destination_url": {
                              "type": "string"
                            },
                            "websocket_speaker_timeline_destination_url": {
                              "type": "string"
                            },
                            "websocket_speaker_timeline_exclude_null_speaker": {
                              "type": "boolean",
                              "default": true,
                              "description": "Set to false to include null active speaker events in the speaker timeline websocket. Defaults to true."
                            },
                            "webhook_call_events_destination_url": {
                              "type": "string",
                              "description": "(BETA) Receive webhooks for in call events('bot.participant_join'/'bot.participant_leave'/'bot.active_speaker_notify')"
                            }
                          }
                        }
                      ],
                      "writeOnly": true,
                      "description": "The settings for real-time media output."
                    },
                    "transcription_options": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "provider": {
                              "enum": [
                                "deepgram",
                                "assembly_ai",
                                "rev",
                                "aws_transcribe",
                                "symbl",
                                "none"
                              ],
                              "type": "string"
                            },
                            "assembly_ai": {
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "word_boost": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              ],
                              "title": "AssemblyAi Real-time Transcription Settings",
                              "description": "Docs: https://www.assemblyai.com/docs/walkthroughs#realtime-streaming-transcription"
                            },
                            "deepgram": {
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "tier": {
                                      "type": "string"
                                    },
                                    "model": {
                                      "type": "string"
                                    },
                                    "version": {
                                      "type": "string"
                                    },
                                    "language": {
                                      "type": "string"
                                    },
                                    "profanity_filter": {
                                      "type": "boolean"
                                    },
                                    "redact": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "diarize": {
                                      "type": "boolean"
                                    },
                                    "diarize_version": {
                                      "type": "string"
                                    },
                                    "ner": {
                                      "type": "boolean"
                                    },
                                    "alternatives": {
                                      "type": "integer"
                                    },
                                    "numerals": {
                                      "type": "boolean"
                                    },
                                    "search": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "replace": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "keywords": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "interim_results": {
                                      "type": "boolean"
                                    },
                                    "endpointing": {
                                      "type": "boolean"
                                    }
                                  }
                                }
                              ],
                              "title": "Deepgram Real-time Transcription Settings",
                              "description": "Docs: https://developers.deepgram.com/api-reference/transcription/#transcribe-live-streaming-audio"
                            },
                            "rev": {
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "language": {
                                      "type": "string"
                                    },
                                    "metadata": {
                                      "type": "string"
                                    },
                                    "custom_vocabulary_id": {
                                      "type": "string",
                                      "maxLength": 200
                                    },
                                    "filter_profanity": {
                                      "type": "boolean"
                                    },
                                    "remove_disfluencies": {
                                      "type": "boolean"
                                    },
                                    "delete_after_seconds": {
                                      "type": "integer"
                                    },
                                    "detailed_partials": {
                                      "type": "boolean"
                                    },
                                    "start_ts": {
                                      "type": "number",
                                      "format": "double"
                                    },
                                    "max_segment_duration_seconds": {
                                      "type": "integer"
                                    },
                                    "transcriber": {
                                      "type": "string"
                                    },
                                    "enable_speaker_switch": {
                                      "type": "boolean"
                                    },
                                    "skip_postprocessing": {
                                      "type": "boolean"
                                    },
                                    "priority": {
                                      "type": "string"
                                    }
                                  }
                                }
                              ],
                              "title": "Rev Real-time Transcription Settings",
                              "description": "Docs: https://docs.rev.ai/api/streaming/requests/"
                            },
                            "aws_transcribe": {
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "language_code": {
                                      "type": "string"
                                    },
                                    "content_redaction_type": {
                                      "type": "string"
                                    },
                                    "language_model_name": {
                                      "type": "string"
                                    },
                                    "language_options": {
                                      "type": "string"
                                    },
                                    "language_identification": {
                                      "type": "boolean"
                                    },
                                    "partial_results_stability": {
                                      "type": "string"
                                    },
                                    "pii_entity_types": {
                                      "type": "string"
                                    },
                                    "preferred_language": {
                                      "type": "string"
                                    },
                                    "show_speaker_label": {
                                      "type": "boolean"
                                    },
                                    "vocabulary_filter_method": {
                                      "type": "string"
                                    },
                                    "vocabulary_filter_names": {
                                      "type": "string"
                                    },
                                    "vocabulary_names": {
                                      "type": "string"
                                    }
                                  }
                                }
                              ],
                              "title": "AWS Transcribe Real-time Transcription Settings",
                              "description": "Docs: https://docs.aws.amazon.com/transcribe/latest/APIReference/API_streaming_StartStreamTranscription.html"
                            }
                          },
                          "required": [
                            "provider"
                          ]
                        }
                      ],
                      "writeOnly": true
                    },
                    "chat": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "on_bot_join": {
                              "type": "object",
                              "properties": {
                                "send_to": {
                                  "enum": [
                                    "host",
                                    "everyone",
                                    "everyone_except_host"
                                  ],
                                  "type": "string"
                                },
                                "message": {
                                  "type": "string",
                                  "maxLength": 4096
                                }
                              },
                              "required": [
                                "message",
                                "send_to"
                              ]
                            },
                            "on_participant_join": {
                              "type": "object",
                              "properties": {
                                "message": {
                                  "type": "string",
                                  "maxLength": 4096
                                },
                                "exclude_host": {
                                  "type": "boolean"
                                }
                              },
                              "required": [
                                "exclude_host",
                                "message"
                              ]
                            }
                          }
                        }
                      ],
                      "writeOnly": true,
                      "description": "(BETA) Settings for the bot to send chat messages."
                    },
                    "zoom": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "join_token_url": {
                              "type": "string",
                              "format": "uri",
                              "description": "A URL which Recall will make a GET request to, in order to retrieve the Zoom Join Token for Local Recording, which the V2 Zoom bot uses to automatically record. This token can be generated through the Zoom API. Docs: https://marketplace.zoom.us/docs/api-reference/zoom-api/methods/#operation/meetingLocalRecordingJoinToken"
                            },
                            "zak_url": {
                              "type": "string",
                              "format": "uri",
                              "description": "A URL which Recall will make  GET request to, in order to retrieve the ZAK. The V1 Zoom bot uses this to join meetings that require authentication to join.This token can be generated through the Zoom API. Docs: https://marketplace.zoom.us/docs/api-reference/zoom-api/methods/#operation/userZak"
                            }
                          }
                        }
                      ],
                      "writeOnly": true,
                      "description": "Zoom specific parameters"
                    },
                    "google_meet": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "login_required": {
                              "type": "boolean",
                              "nullable": true,
                              "description": "Specify if the bot should always login to Google before joining the meeting. This value will override the default value set on bot's Google Meet login credentials on the account. When set to 'false', the bot will only login if required by the meeting."
                            }
                          }
                        }
                      ],
                      "writeOnly": true,
                      "description": "Google Meet specific parameters"
                    },
                    "automatic_leave": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "waiting_room_timeout": {
                              "type": "integer",
                              "minimum": 30,
                              "default": 1200,
                              "description": "The number of seconds after which the bot will automatically leave the call, if it has not been let in from the waiting room."
                            },
                            "noone_joined_timeout": {
                              "type": "integer",
                              "minimum": 30,
                              "default": 1200,
                              "description": "(BETA) The number of seconds after which the bot will automatically leave the call, if it has joined the meeting but no other participant has joined."
                            },
                            "everyone_left_timeout": {
                              "type": "integer",
                              "minimum": 1,
                              "default": 2,
                              "description": "(BETA) The number of seconds after which the bot will automatically leave the call, if there were other participants in the call who have all left."
                            }
                          }
                        }
                      ],
                      "writeOnly": true
                    },
                    "automatic_video_output": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "in_call_recording": {
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "kind": {
                                      "allOf": [
                                        {
                                          "enum": [
                                            "jpeg"
                                          ],
                                          "type": "string"
                                        }
                                      ],
                                      "description": "The kind of data encoded in b64_data"
                                    },
                                    "b64_data": {
                                      "type": "string",
                                      "description": "Data encoded in Base64 format, using the standard alphabet (specified here: https://datatracker.ietf.org/doc/html/rfc4648#section-4)",
                                      "maxLength": 1835008
                                    }
                                  },
                                  "required": [
                                    "b64_data",
                                    "kind"
                                  ]
                                }
                              ],
                              "description": "The video that will be automatically output when the bot is in the in_call_recording state"
                            }
                          },
                          "required": [
                            "in_call_recording"
                          ]
                        }
                      ],
                      "writeOnly": true,
                      "description": "(BETA) Settings for the bot to output video."
                    },
                    "automatic_audio_output": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "in_call_recording": {
                              "type": "object",
                              "properties": {
                                "data": {
                                  "type": "object",
                                  "properties": {
                                    "kind": {
                                      "allOf": [
                                        {
                                          "enum": [
                                            "mp3"
                                          ],
                                          "type": "string"
                                        }
                                      ],
                                      "description": "The kind of data encoded in b64_data"
                                    },
                                    "b64_data": {
                                      "type": "string",
                                      "description": "Data encoded in Base64 format, using the standard alphabet (specified here: https://datatracker.ietf.org/doc/html/rfc4648#section-4)",
                                      "maxLength": 1835008
                                    }
                                  },
                                  "required": [
                                    "b64_data",
                                    "kind"
                                  ]
                                },
                                "replay_on_participant_join": {
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "debounce_interval": {
                                          "type": "integer",
                                          "description": "The amount of time to wait for additional participants to join before replaying the audio."
                                        }
                                      },
                                      "required": [
                                        "debounce_interval"
                                      ]
                                    }
                                  ],
                                  "description": "Specify this parameter if you want the audio to be replayed when additional participants join the call."
                                }
                              },
                              "required": [
                                "data"
                              ]
                            }
                          },
                          "required": [
                            "in_call_recording"
                          ]
                        }
                      ],
                      "writeOnly": true,
                      "description": "(BETA) Settings for the bot to output audio."
                    },
                    "calendar_meetings": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "readOnly": true
                          },
                          "start_time": {
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          },
                          "end_time": {
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          },
                          "calendar_user": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "readOnly": true
                                  },
                                  "external_id": {
                                    "type": "string",
                                    "readOnly": true
                                  }
                                },
                                "required": [
                                  "external_id",
                                  "id"
                                ]
                              }
                            ],
                            "readOnly": true
                          }
                        },
                        "required": [
                          "calendar_user",
                          "end_time",
                          "id",
                          "start_time"
                        ]
                      },
                      "readOnly": true
                    },
                    "recording_mode": {
                      "allOf": [
                        {
                          "enum": [
                            "speaker_view",
                            "gallery_view",
                            "gallery_view_v2"
                          ],
                          "type": "string"
                        }
                      ],
                      "writeOnly": true,
                      "default": "speaker_view",
                      "description": "The layout of the output video."
                    },
                    "recording_mode_options": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "participant_video_when_screenshare": {
                              "allOf": [
                                {
                                  "enum": [
                                    "hide",
                                    "beside",
                                    "overlap"
                                  ],
                                  "type": "string"
                                }
                              ],
                              "description": "The layout of participant video streams when a screen is being shared. More docs: https://recallai.readme.io/reference/bot-faqs#5-what-do-the-recording-modes-look-like-when-specified-in-create-bot"
                            }
                          },
                          "required": [
                            "participant_video_when_screenshare"
                          ]
                        }
                      ],
                      "writeOnly": true,
                      "description": "Additional options for the output video layout."
                    }
                  },
                  "required": [
                    "calendar_meetings",
                    "id",
                    "media_retention_end",
                    "meeting_metadata",
                    "meeting_participants",
                    "meeting_url",
                    "status_changes",
                    "video_url"
                  ]
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v1/bot/{id}/intelligence/": {
      "get": {
        "operationId": "bot_intelligence_retrieve",
        "description": "(BETA) Get the results of additional analysis specified by the intelligence parameter. If the call is not yet complete, this returns results from any real-time analysis performed so-far.",
        "summary": "Get Intelligence Results",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "A UUID string identifying this bot.",
            "required": true
          }
        ],
        "tags": [
          "bot"
        ],
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v1/bot/{id}/leave_call/": {
      "post": {
        "operationId": "bot_leave_call_create",
        "description": "Removes the bot from the meeting. This is irreversable.",
        "summary": "Remove Bot From Call",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "A UUID string identifying this bot.",
            "required": true
          }
        ],
        "tags": [
          "bot"
        ],
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "readOnly": true
                    },
                    "video_url": {
                      "type": "string",
                      "format": "uri",
                      "readOnly": true,
                      "description": "A URL where the video recorded by the bot can be downloaded. This is null while the recording is in progress, and will be populated when the recording is completed. The returned URL is valid for 6 hours from the API call. A fresh URL can be obtained at any point by calling the API again."
                    },
                    "recording": {
                      "type": "string",
                      "format": "uuid",
                      "nullable": true
                    },
                    "media_retention_end": {
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "description": "After this date the video and transcript will be deleted. This date is 7 days from when the recording ended."
                    },
                    "status_changes": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "string",
                            "readOnly": true
                          },
                          "message": {
                            "type": "string",
                            "readOnly": true
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          },
                          "sub_code": {
                            "type": "string",
                            "readOnly": true
                          }
                        },
                        "required": [
                          "code",
                          "created_at",
                          "message",
                          "sub_code"
                        ]
                      },
                      "readOnly": true
                    },
                    "meeting_metadata": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "title": {
                              "type": "string",
                              "readOnly": true,
                              "description": "The title of the meeting the bot has joined."
                            }
                          },
                          "required": [
                            "title"
                          ]
                        }
                      ],
                      "readOnly": true,
                      "nullable": true
                    },
                    "meeting_participants": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "readOnly": true
                          },
                          "name": {
                            "type": "string",
                            "readOnly": true
                          },
                          "events": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "code": {
                                  "type": "string",
                                  "readOnly": true
                                },
                                "created_at": {
                                  "type": "string",
                                  "format": "date-time",
                                  "readOnly": true
                                }
                              },
                              "required": [
                                "code",
                                "created_at"
                              ]
                            },
                            "readOnly": true
                          }
                        },
                        "required": [
                          "events",
                          "id",
                          "name"
                        ]
                      },
                      "readOnly": true
                    },
                    "meeting_url": {
                      "type": "string",
                      "nullable": true,
                      "description": "The url of the meeting. For example, https://zoom.us/j/123?pwd=456. This field can only be read from scheduled bots that have not yet joined a call. Once a bot has joined a call, it's meeting_url will be cleared."
                    },
                    "bot_name": {
                      "type": "string",
                      "writeOnly": true,
                      "default": "Meeting Notetaker",
                      "description": "The name of the bot that will be displayed in the call.",
                      "maxLength": 100
                    },
                    "join_at": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true,
                      "description": "The time at which the bot will join the call, formatted in ISO 8601. This field can only be read from scheduled bots that have not yet joined a call. Once a bot has joined a call, it's join_at will be cleared."
                    },
                    "real_time_transcription": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "destination_url": {
                              "type": "string",
                              "format": "uri"
                            },
                            "partial_results": {
                              "type": "boolean",
                              "default": false
                            }
                          },
                          "required": [
                            "destination_url"
                          ]
                        }
                      ],
                      "writeOnly": true,
                      "description": "The settings for real-time transcription."
                    },
                    "real_time_media": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "rtmp_destination_url": {
                              "type": "string"
                            },
                            "websocket_video_destination_url": {
                              "type": "string"
                            },
                            "websocket_audio_destination_url": {
                              "type": "string"
                            },
                            "websocket_speaker_timeline_destination_url": {
                              "type": "string"
                            },
                            "websocket_speaker_timeline_exclude_null_speaker": {
                              "type": "boolean",
                              "default": true,
                              "description": "Set to false to include null active speaker events in the speaker timeline websocket. Defaults to true."
                            },
                            "webhook_call_events_destination_url": {
                              "type": "string",
                              "description": "(BETA) Receive webhooks for in call events('bot.participant_join'/'bot.participant_leave'/'bot.active_speaker_notify')"
                            }
                          }
                        }
                      ],
                      "writeOnly": true,
                      "description": "The settings for real-time media output."
                    },
                    "transcription_options": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "provider": {
                              "enum": [
                                "deepgram",
                                "assembly_ai",
                                "rev",
                                "aws_transcribe",
                                "symbl",
                                "none"
                              ],
                              "type": "string"
                            },
                            "assembly_ai": {
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "word_boost": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              ],
                              "title": "AssemblyAi Real-time Transcription Settings",
                              "description": "Docs: https://www.assemblyai.com/docs/walkthroughs#realtime-streaming-transcription"
                            },
                            "deepgram": {
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "tier": {
                                      "type": "string"
                                    },
                                    "model": {
                                      "type": "string"
                                    },
                                    "version": {
                                      "type": "string"
                                    },
                                    "language": {
                                      "type": "string"
                                    },
                                    "profanity_filter": {
                                      "type": "boolean"
                                    },
                                    "redact": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "diarize": {
                                      "type": "boolean"
                                    },
                                    "diarize_version": {
                                      "type": "string"
                                    },
                                    "ner": {
                                      "type": "boolean"
                                    },
                                    "alternatives": {
                                      "type": "integer"
                                    },
                                    "numerals": {
                                      "type": "boolean"
                                    },
                                    "search": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "replace": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "keywords": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "interim_results": {
                                      "type": "boolean"
                                    },
                                    "endpointing": {
                                      "type": "boolean"
                                    }
                                  }
                                }
                              ],
                              "title": "Deepgram Real-time Transcription Settings",
                              "description": "Docs: https://developers.deepgram.com/api-reference/transcription/#transcribe-live-streaming-audio"
                            },
                            "rev": {
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "language": {
                                      "type": "string"
                                    },
                                    "metadata": {
                                      "type": "string"
                                    },
                                    "custom_vocabulary_id": {
                                      "type": "string",
                                      "maxLength": 200
                                    },
                                    "filter_profanity": {
                                      "type": "boolean"
                                    },
                                    "remove_disfluencies": {
                                      "type": "boolean"
                                    },
                                    "delete_after_seconds": {
                                      "type": "integer"
                                    },
                                    "detailed_partials": {
                                      "type": "boolean"
                                    },
                                    "start_ts": {
                                      "type": "number",
                                      "format": "double"
                                    },
                                    "max_segment_duration_seconds": {
                                      "type": "integer"
                                    },
                                    "transcriber": {
                                      "type": "string"
                                    },
                                    "enable_speaker_switch": {
                                      "type": "boolean"
                                    },
                                    "skip_postprocessing": {
                                      "type": "boolean"
                                    },
                                    "priority": {
                                      "type": "string"
                                    }
                                  }
                                }
                              ],
                              "title": "Rev Real-time Transcription Settings",
                              "description": "Docs: https://docs.rev.ai/api/streaming/requests/"
                            },
                            "aws_transcribe": {
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "language_code": {
                                      "type": "string"
                                    },
                                    "content_redaction_type": {
                                      "type": "string"
                                    },
                                    "language_model_name": {
                                      "type": "string"
                                    },
                                    "language_options": {
                                      "type": "string"
                                    },
                                    "language_identification": {
                                      "type": "boolean"
                                    },
                                    "partial_results_stability": {
                                      "type": "string"
                                    },
                                    "pii_entity_types": {
                                      "type": "string"
                                    },
                                    "preferred_language": {
                                      "type": "string"
                                    },
                                    "show_speaker_label": {
                                      "type": "boolean"
                                    },
                                    "vocabulary_filter_method": {
                                      "type": "string"
                                    },
                                    "vocabulary_filter_names": {
                                      "type": "string"
                                    },
                                    "vocabulary_names": {
                                      "type": "string"
                                    }
                                  }
                                }
                              ],
                              "title": "AWS Transcribe Real-time Transcription Settings",
                              "description": "Docs: https://docs.aws.amazon.com/transcribe/latest/APIReference/API_streaming_StartStreamTranscription.html"
                            }
                          },
                          "required": [
                            "provider"
                          ]
                        }
                      ],
                      "writeOnly": true
                    },
                    "chat": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "on_bot_join": {
                              "type": "object",
                              "properties": {
                                "send_to": {
                                  "enum": [
                                    "host",
                                    "everyone",
                                    "everyone_except_host"
                                  ],
                                  "type": "string"
                                },
                                "message": {
                                  "type": "string",
                                  "maxLength": 4096
                                }
                              },
                              "required": [
                                "message",
                                "send_to"
                              ]
                            },
                            "on_participant_join": {
                              "type": "object",
                              "properties": {
                                "message": {
                                  "type": "string",
                                  "maxLength": 4096
                                },
                                "exclude_host": {
                                  "type": "boolean"
                                }
                              },
                              "required": [
                                "exclude_host",
                                "message"
                              ]
                            }
                          }
                        }
                      ],
                      "writeOnly": true,
                      "description": "(BETA) Settings for the bot to send chat messages."
                    },
                    "zoom": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "join_token_url": {
                              "type": "string",
                              "format": "uri",
                              "description": "A URL which Recall will make a GET request to, in order to retrieve the Zoom Join Token for Local Recording, which the V2 Zoom bot uses to automatically record. This token can be generated through the Zoom API. Docs: https://marketplace.zoom.us/docs/api-reference/zoom-api/methods/#operation/meetingLocalRecordingJoinToken"
                            },
                            "zak_url": {
                              "type": "string",
                              "format": "uri",
                              "description": "A URL which Recall will make  GET request to, in order to retrieve the ZAK. The V1 Zoom bot uses this to join meetings that require authentication to join.This token can be generated through the Zoom API. Docs: https://marketplace.zoom.us/docs/api-reference/zoom-api/methods/#operation/userZak"
                            }
                          }
                        }
                      ],
                      "writeOnly": true,
                      "description": "Zoom specific parameters"
                    },
                    "google_meet": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "login_required": {
                              "type": "boolean",
                              "nullable": true,
                              "description": "Specify if the bot should always login to Google before joining the meeting. This value will override the default value set on bot's Google Meet login credentials on the account. When set to 'false', the bot will only login if required by the meeting."
                            }
                          }
                        }
                      ],
                      "writeOnly": true,
                      "description": "Google Meet specific parameters"
                    },
                    "automatic_leave": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "waiting_room_timeout": {
                              "type": "integer",
                              "minimum": 30,
                              "default": 1200,
                              "description": "The number of seconds after which the bot will automatically leave the call, if it has not been let in from the waiting room."
                            },
                            "noone_joined_timeout": {
                              "type": "integer",
                              "minimum": 30,
                              "default": 1200,
                              "description": "(BETA) The number of seconds after which the bot will automatically leave the call, if it has joined the meeting but no other participant has joined."
                            },
                            "everyone_left_timeout": {
                              "type": "integer",
                              "minimum": 1,
                              "default": 2,
                              "description": "(BETA) The number of seconds after which the bot will automatically leave the call, if there were other participants in the call who have all left."
                            }
                          }
                        }
                      ],
                      "writeOnly": true
                    },
                    "automatic_video_output": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "in_call_recording": {
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "kind": {
                                      "allOf": [
                                        {
                                          "enum": [
                                            "jpeg"
                                          ],
                                          "type": "string"
                                        }
                                      ],
                                      "description": "The kind of data encoded in b64_data"
                                    },
                                    "b64_data": {
                                      "type": "string",
                                      "description": "Data encoded in Base64 format, using the standard alphabet (specified here: https://datatracker.ietf.org/doc/html/rfc4648#section-4)",
                                      "maxLength": 1835008
                                    }
                                  },
                                  "required": [
                                    "b64_data",
                                    "kind"
                                  ]
                                }
                              ],
                              "description": "The video that will be automatically output when the bot is in the in_call_recording state"
                            }
                          },
                          "required": [
                            "in_call_recording"
                          ]
                        }
                      ],
                      "writeOnly": true,
                      "description": "(BETA) Settings for the bot to output video."
                    },
                    "automatic_audio_output": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "in_call_recording": {
                              "type": "object",
                              "properties": {
                                "data": {
                                  "type": "object",
                                  "properties": {
                                    "kind": {
                                      "allOf": [
                                        {
                                          "enum": [
                                            "mp3"
                                          ],
                                          "type": "string"
                                        }
                                      ],
                                      "description": "The kind of data encoded in b64_data"
                                    },
                                    "b64_data": {
                                      "type": "string",
                                      "description": "Data encoded in Base64 format, using the standard alphabet (specified here: https://datatracker.ietf.org/doc/html/rfc4648#section-4)",
                                      "maxLength": 1835008
                                    }
                                  },
                                  "required": [
                                    "b64_data",
                                    "kind"
                                  ]
                                },
                                "replay_on_participant_join": {
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "debounce_interval": {
                                          "type": "integer",
                                          "description": "The amount of time to wait for additional participants to join before replaying the audio."
                                        }
                                      },
                                      "required": [
                                        "debounce_interval"
                                      ]
                                    }
                                  ],
                                  "description": "Specify this parameter if you want the audio to be replayed when additional participants join the call."
                                }
                              },
                              "required": [
                                "data"
                              ]
                            }
                          },
                          "required": [
                            "in_call_recording"
                          ]
                        }
                      ],
                      "writeOnly": true,
                      "description": "(BETA) Settings for the bot to output audio."
                    },
                    "calendar_meetings": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "readOnly": true
                          },
                          "start_time": {
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          },
                          "end_time": {
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          },
                          "calendar_user": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "readOnly": true
                                  },
                                  "external_id": {
                                    "type": "string",
                                    "readOnly": true
                                  }
                                },
                                "required": [
                                  "external_id",
                                  "id"
                                ]
                              }
                            ],
                            "readOnly": true
                          }
                        },
                        "required": [
                          "calendar_user",
                          "end_time",
                          "id",
                          "start_time"
                        ]
                      },
                      "readOnly": true
                    },
                    "recording_mode": {
                      "allOf": [
                        {
                          "enum": [
                            "speaker_view",
                            "gallery_view",
                            "gallery_view_v2"
                          ],
                          "type": "string"
                        }
                      ],
                      "writeOnly": true,
                      "default": "speaker_view",
                      "description": "The layout of the output video."
                    },
                    "recording_mode_options": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "participant_video_when_screenshare": {
                              "allOf": [
                                {
                                  "enum": [
                                    "hide",
                                    "beside",
                                    "overlap"
                                  ],
                                  "type": "string"
                                }
                              ],
                              "description": "The layout of participant video streams when a screen is being shared. More docs: https://recallai.readme.io/reference/bot-faqs#5-what-do-the-recording-modes-look-like-when-specified-in-create-bot"
                            }
                          },
                          "required": [
                            "participant_video_when_screenshare"
                          ]
                        }
                      ],
                      "writeOnly": true,
                      "description": "Additional options for the output video layout."
                    }
                  },
                  "required": [
                    "calendar_meetings",
                    "id",
                    "media_retention_end",
                    "meeting_metadata",
                    "meeting_participants",
                    "meeting_url",
                    "status_changes",
                    "video_url"
                  ]
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v1/bot/{id}/send_chat_message/": {
      "post": {
        "operationId": "bot_send_chat_message_create",
        "description": "Causes the bot to send a message in the meeting chat.",
        "summary": "Send Chat Message",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "A UUID string identifying this bot.",
            "required": true
          }
        ],
        "tags": [
          "bot"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "to": {
                    "allOf": [
                      {
                        "enum": [
                          "everyone"
                        ],
                        "type": "string"
                      }
                    ],
                    "description": "The person or group that the message will be sent to. \"everyone\" is currently the only supported option, meaning the message will be sent to everyone in the meeting."
                  },
                  "message": {
                    "type": "string",
                    "description": "The message that will be sent.",
                    "maxLength": 4096
                  }
                },
                "required": [
                  "message",
                  "to"
                ]
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "to": {
                    "allOf": [
                      {
                        "enum": [
                          "everyone"
                        ],
                        "type": "string"
                      }
                    ],
                    "description": "The person or group that the message will be sent to. \"everyone\" is currently the only supported option, meaning the message will be sent to everyone in the meeting."
                  },
                  "message": {
                    "type": "string",
                    "description": "The message that will be sent.",
                    "maxLength": 4096
                  }
                },
                "required": [
                  "message",
                  "to"
                ]
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "to": {
                    "allOf": [
                      {
                        "enum": [
                          "everyone"
                        ],
                        "type": "string"
                      }
                    ],
                    "description": "The person or group that the message will be sent to. \"everyone\" is currently the only supported option, meaning the message will be sent to everyone in the meeting."
                  },
                  "message": {
                    "type": "string",
                    "description": "The message that will be sent.",
                    "maxLength": 4096
                  }
                },
                "required": [
                  "message",
                  "to"
                ]
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "readOnly": true
                    },
                    "video_url": {
                      "type": "string",
                      "format": "uri",
                      "readOnly": true,
                      "description": "A URL where the video recorded by the bot can be downloaded. This is null while the recording is in progress, and will be populated when the recording is completed. The returned URL is valid for 6 hours from the API call. A fresh URL can be obtained at any point by calling the API again."
                    },
                    "recording": {
                      "type": "string",
                      "format": "uuid",
                      "nullable": true
                    },
                    "media_retention_end": {
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "description": "After this date the video and transcript will be deleted. This date is 7 days from when the recording ended."
                    },
                    "status_changes": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "string",
                            "readOnly": true
                          },
                          "message": {
                            "type": "string",
                            "readOnly": true
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          },
                          "sub_code": {
                            "type": "string",
                            "readOnly": true
                          }
                        },
                        "required": [
                          "code",
                          "created_at",
                          "message",
                          "sub_code"
                        ]
                      },
                      "readOnly": true
                    },
                    "meeting_metadata": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "title": {
                              "type": "string",
                              "readOnly": true,
                              "description": "The title of the meeting the bot has joined."
                            }
                          },
                          "required": [
                            "title"
                          ]
                        }
                      ],
                      "readOnly": true,
                      "nullable": true
                    },
                    "meeting_participants": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "readOnly": true
                          },
                          "name": {
                            "type": "string",
                            "readOnly": true
                          },
                          "events": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "code": {
                                  "type": "string",
                                  "readOnly": true
                                },
                                "created_at": {
                                  "type": "string",
                                  "format": "date-time",
                                  "readOnly": true
                                }
                              },
                              "required": [
                                "code",
                                "created_at"
                              ]
                            },
                            "readOnly": true
                          }
                        },
                        "required": [
                          "events",
                          "id",
                          "name"
                        ]
                      },
                      "readOnly": true
                    },
                    "meeting_url": {
                      "type": "string",
                      "nullable": true,
                      "description": "The url of the meeting. For example, https://zoom.us/j/123?pwd=456. This field can only be read from scheduled bots that have not yet joined a call. Once a bot has joined a call, it's meeting_url will be cleared."
                    },
                    "bot_name": {
                      "type": "string",
                      "writeOnly": true,
                      "default": "Meeting Notetaker",
                      "description": "The name of the bot that will be displayed in the call.",
                      "maxLength": 100
                    },
                    "join_at": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true,
                      "description": "The time at which the bot will join the call, formatted in ISO 8601. This field can only be read from scheduled bots that have not yet joined a call. Once a bot has joined a call, it's join_at will be cleared."
                    },
                    "real_time_transcription": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "destination_url": {
                              "type": "string",
                              "format": "uri"
                            },
                            "partial_results": {
                              "type": "boolean",
                              "default": false
                            }
                          },
                          "required": [
                            "destination_url"
                          ]
                        }
                      ],
                      "writeOnly": true,
                      "description": "The settings for real-time transcription."
                    },
                    "real_time_media": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "rtmp_destination_url": {
                              "type": "string"
                            },
                            "websocket_video_destination_url": {
                              "type": "string"
                            },
                            "websocket_audio_destination_url": {
                              "type": "string"
                            },
                            "websocket_speaker_timeline_destination_url": {
                              "type": "string"
                            },
                            "websocket_speaker_timeline_exclude_null_speaker": {
                              "type": "boolean",
                              "default": true,
                              "description": "Set to false to include null active speaker events in the speaker timeline websocket. Defaults to true."
                            },
                            "webhook_call_events_destination_url": {
                              "type": "string",
                              "description": "(BETA) Receive webhooks for in call events('bot.participant_join'/'bot.participant_leave'/'bot.active_speaker_notify')"
                            }
                          }
                        }
                      ],
                      "writeOnly": true,
                      "description": "The settings for real-time media output."
                    },
                    "transcription_options": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "provider": {
                              "enum": [
                                "deepgram",
                                "assembly_ai",
                                "rev",
                                "aws_transcribe",
                                "symbl",
                                "none"
                              ],
                              "type": "string"
                            },
                            "assembly_ai": {
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "word_boost": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              ],
                              "title": "AssemblyAi Real-time Transcription Settings",
                              "description": "Docs: https://www.assemblyai.com/docs/walkthroughs#realtime-streaming-transcription"
                            },
                            "deepgram": {
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "tier": {
                                      "type": "string"
                                    },
                                    "model": {
                                      "type": "string"
                                    },
                                    "version": {
                                      "type": "string"
                                    },
                                    "language": {
                                      "type": "string"
                                    },
                                    "profanity_filter": {
                                      "type": "boolean"
                                    },
                                    "redact": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "diarize": {
                                      "type": "boolean"
                                    },
                                    "diarize_version": {
                                      "type": "string"
                                    },
                                    "ner": {
                                      "type": "boolean"
                                    },
                                    "alternatives": {
                                      "type": "integer"
                                    },
                                    "numerals": {
                                      "type": "boolean"
                                    },
                                    "search": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "replace": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "keywords": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "interim_results": {
                                      "type": "boolean"
                                    },
                                    "endpointing": {
                                      "type": "boolean"
                                    }
                                  }
                                }
                              ],
                              "title": "Deepgram Real-time Transcription Settings",
                              "description": "Docs: https://developers.deepgram.com/api-reference/transcription/#transcribe-live-streaming-audio"
                            },
                            "rev": {
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "language": {
                                      "type": "string"
                                    },
                                    "metadata": {
                                      "type": "string"
                                    },
                                    "custom_vocabulary_id": {
                                      "type": "string",
                                      "maxLength": 200
                                    },
                                    "filter_profanity": {
                                      "type": "boolean"
                                    },
                                    "remove_disfluencies": {
                                      "type": "boolean"
                                    },
                                    "delete_after_seconds": {
                                      "type": "integer"
                                    },
                                    "detailed_partials": {
                                      "type": "boolean"
                                    },
                                    "start_ts": {
                                      "type": "number",
                                      "format": "double"
                                    },
                                    "max_segment_duration_seconds": {
                                      "type": "integer"
                                    },
                                    "transcriber": {
                                      "type": "string"
                                    },
                                    "enable_speaker_switch": {
                                      "type": "boolean"
                                    },
                                    "skip_postprocessing": {
                                      "type": "boolean"
                                    },
                                    "priority": {
                                      "type": "string"
                                    }
                                  }
                                }
                              ],
                              "title": "Rev Real-time Transcription Settings",
                              "description": "Docs: https://docs.rev.ai/api/streaming/requests/"
                            },
                            "aws_transcribe": {
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "language_code": {
                                      "type": "string"
                                    },
                                    "content_redaction_type": {
                                      "type": "string"
                                    },
                                    "language_model_name": {
                                      "type": "string"
                                    },
                                    "language_options": {
                                      "type": "string"
                                    },
                                    "language_identification": {
                                      "type": "boolean"
                                    },
                                    "partial_results_stability": {
                                      "type": "string"
                                    },
                                    "pii_entity_types": {
                                      "type": "string"
                                    },
                                    "preferred_language": {
                                      "type": "string"
                                    },
                                    "show_speaker_label": {
                                      "type": "boolean"
                                    },
                                    "vocabulary_filter_method": {
                                      "type": "string"
                                    },
                                    "vocabulary_filter_names": {
                                      "type": "string"
                                    },
                                    "vocabulary_names": {
                                      "type": "string"
                                    }
                                  }
                                }
                              ],
                              "title": "AWS Transcribe Real-time Transcription Settings",
                              "description": "Docs: https://docs.aws.amazon.com/transcribe/latest/APIReference/API_streaming_StartStreamTranscription.html"
                            }
                          },
                          "required": [
                            "provider"
                          ]
                        }
                      ],
                      "writeOnly": true
                    },
                    "chat": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "on_bot_join": {
                              "type": "object",
                              "properties": {
                                "send_to": {
                                  "enum": [
                                    "host",
                                    "everyone",
                                    "everyone_except_host"
                                  ],
                                  "type": "string"
                                },
                                "message": {
                                  "type": "string",
                                  "maxLength": 4096
                                }
                              },
                              "required": [
                                "message",
                                "send_to"
                              ]
                            },
                            "on_participant_join": {
                              "type": "object",
                              "properties": {
                                "message": {
                                  "type": "string",
                                  "maxLength": 4096
                                },
                                "exclude_host": {
                                  "type": "boolean"
                                }
                              },
                              "required": [
                                "exclude_host",
                                "message"
                              ]
                            }
                          }
                        }
                      ],
                      "writeOnly": true,
                      "description": "(BETA) Settings for the bot to send chat messages."
                    },
                    "zoom": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "join_token_url": {
                              "type": "string",
                              "format": "uri",
                              "description": "A URL which Recall will make a GET request to, in order to retrieve the Zoom Join Token for Local Recording, which the V2 Zoom bot uses to automatically record. This token can be generated through the Zoom API. Docs: https://marketplace.zoom.us/docs/api-reference/zoom-api/methods/#operation/meetingLocalRecordingJoinToken"
                            },
                            "zak_url": {
                              "type": "string",
                              "format": "uri",
                              "description": "A URL which Recall will make  GET request to, in order to retrieve the ZAK. The V1 Zoom bot uses this to join meetings that require authentication to join.This token can be generated through the Zoom API. Docs: https://marketplace.zoom.us/docs/api-reference/zoom-api/methods/#operation/userZak"
                            }
                          }
                        }
                      ],
                      "writeOnly": true,
                      "description": "Zoom specific parameters"
                    },
                    "google_meet": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "login_required": {
                              "type": "boolean",
                              "nullable": true,
                              "description": "Specify if the bot should always login to Google before joining the meeting. This value will override the default value set on bot's Google Meet login credentials on the account. When set to 'false', the bot will only login if required by the meeting."
                            }
                          }
                        }
                      ],
                      "writeOnly": true,
                      "description": "Google Meet specific parameters"
                    },
                    "automatic_leave": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "waiting_room_timeout": {
                              "type": "integer",
                              "minimum": 30,
                              "default": 1200,
                              "description": "The number of seconds after which the bot will automatically leave the call, if it has not been let in from the waiting room."
                            },
                            "noone_joined_timeout": {
                              "type": "integer",
                              "minimum": 30,
                              "default": 1200,
                              "description": "(BETA) The number of seconds after which the bot will automatically leave the call, if it has joined the meeting but no other participant has joined."
                            },
                            "everyone_left_timeout": {
                              "type": "integer",
                              "minimum": 1,
                              "default": 2,
                              "description": "(BETA) The number of seconds after which the bot will automatically leave the call, if there were other participants in the call who have all left."
                            }
                          }
                        }
                      ],
                      "writeOnly": true
                    },
                    "automatic_video_output": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "in_call_recording": {
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "kind": {
                                      "allOf": [
                                        {
                                          "enum": [
                                            "jpeg"
                                          ],
                                          "type": "string"
                                        }
                                      ],
                                      "description": "The kind of data encoded in b64_data"
                                    },
                                    "b64_data": {
                                      "type": "string",
                                      "description": "Data encoded in Base64 format, using the standard alphabet (specified here: https://datatracker.ietf.org/doc/html/rfc4648#section-4)",
                                      "maxLength": 1835008
                                    }
                                  },
                                  "required": [
                                    "b64_data",
                                    "kind"
                                  ]
                                }
                              ],
                              "description": "The video that will be automatically output when the bot is in the in_call_recording state"
                            }
                          },
                          "required": [
                            "in_call_recording"
                          ]
                        }
                      ],
                      "writeOnly": true,
                      "description": "(BETA) Settings for the bot to output video."
                    },
                    "automatic_audio_output": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "in_call_recording": {
                              "type": "object",
                              "properties": {
                                "data": {
                                  "type": "object",
                                  "properties": {
                                    "kind": {
                                      "allOf": [
                                        {
                                          "enum": [
                                            "mp3"
                                          ],
                                          "type": "string"
                                        }
                                      ],
                                      "description": "The kind of data encoded in b64_data"
                                    },
                                    "b64_data": {
                                      "type": "string",
                                      "description": "Data encoded in Base64 format, using the standard alphabet (specified here: https://datatracker.ietf.org/doc/html/rfc4648#section-4)",
                                      "maxLength": 1835008
                                    }
                                  },
                                  "required": [
                                    "b64_data",
                                    "kind"
                                  ]
                                },
                                "replay_on_participant_join": {
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "debounce_interval": {
                                          "type": "integer",
                                          "description": "The amount of time to wait for additional participants to join before replaying the audio."
                                        }
                                      },
                                      "required": [
                                        "debounce_interval"
                                      ]
                                    }
                                  ],
                                  "description": "Specify this parameter if you want the audio to be replayed when additional participants join the call."
                                }
                              },
                              "required": [
                                "data"
                              ]
                            }
                          },
                          "required": [
                            "in_call_recording"
                          ]
                        }
                      ],
                      "writeOnly": true,
                      "description": "(BETA) Settings for the bot to output audio."
                    },
                    "calendar_meetings": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "readOnly": true
                          },
                          "start_time": {
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          },
                          "end_time": {
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          },
                          "calendar_user": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "readOnly": true
                                  },
                                  "external_id": {
                                    "type": "string",
                                    "readOnly": true
                                  }
                                },
                                "required": [
                                  "external_id",
                                  "id"
                                ]
                              }
                            ],
                            "readOnly": true
                          }
                        },
                        "required": [
                          "calendar_user",
                          "end_time",
                          "id",
                          "start_time"
                        ]
                      },
                      "readOnly": true
                    },
                    "recording_mode": {
                      "allOf": [
                        {
                          "enum": [
                            "speaker_view",
                            "gallery_view",
                            "gallery_view_v2"
                          ],
                          "type": "string"
                        }
                      ],
                      "writeOnly": true,
                      "default": "speaker_view",
                      "description": "The layout of the output video."
                    },
                    "recording_mode_options": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "participant_video_when_screenshare": {
                              "allOf": [
                                {
                                  "enum": [
                                    "hide",
                                    "beside",
                                    "overlap"
                                  ],
                                  "type": "string"
                                }
                              ],
                              "description": "The layout of participant video streams when a screen is being shared. More docs: https://recallai.readme.io/reference/bot-faqs#5-what-do-the-recording-modes-look-like-when-specified-in-create-bot"
                            }
                          },
                          "required": [
                            "participant_video_when_screenshare"
                          ]
                        }
                      ],
                      "writeOnly": true,
                      "description": "Additional options for the output video layout."
                    }
                  },
                  "required": [
                    "calendar_meetings",
                    "id",
                    "media_retention_end",
                    "meeting_metadata",
                    "meeting_participants",
                    "meeting_url",
                    "status_changes",
                    "video_url"
                  ]
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v1/bot/{id}/speaker_timeline/": {
      "get": {
        "operationId": "bot_speaker_timeline_list",
        "description": "Get the speaker timeline produced by the bot. If the call is not yet complete, this returns the speaker timeline so-far.",
        "summary": "Get Speaker Timeline",
        "parameters": [
          {
            "in": "query",
            "name": "exclude_null_speaker",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "A UUID string identifying this bot.",
            "required": true
          }
        ],
        "tags": [
          "bot"
        ],
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The name of the speaker."
                      },
                      "user_id": {
                        "type": "integer",
                        "description": "The ID of the speaker, which can be used to match speaker names to real-time audio and video streams."
                      },
                      "timestamp": {
                        "type": "number",
                        "format": "double",
                        "description": "The time relative to the start of the recording when this participant started speaking, in seconds."
                      }
                    },
                    "required": [
                      "name",
                      "timestamp",
                      "user_id"
                    ]
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v1/bot/{id}/transcribe/": {
      "post": {
        "operationId": "bot_transcribe_create",
        "description": "Asynchronously transcribes bot audio",
        "summary": "Asynchronously Transcribe Bot Audio",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "A UUID string identifying this bot.",
            "required": true
          }
        ],
        "tags": [
          "bot"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "language": {
                    "type": "string"
                  },
                  "language_code": {
                    "type": "string",
                    "description": "Docs: https://www.assemblyai.com/docs/walkthroughs#specifying-a-language"
                  },
                  "speaker_labels": {
                    "type": "boolean",
                    "description": "Docs: https://www.assemblyai.com/docs/core-transcription#speaker-labels-speaker-diarization"
                  },
                  "word_boost": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Docs: https://www.assemblyai.com/docs/core-transcription#custom-vocabulary"
                  },
                  "boost_param": {
                    "type": "string",
                    "description": "Docs: https://www.assemblyai.com/docs/core-transcription#custom-vocabulary"
                  },
                  "custom_spelling": {
                    "type": "object",
                    "additionalProperties": {},
                    "description": "Docs: https://www.assemblyai.com/docs/core-transcription#custom-spelling"
                  },
                  "disfluencies": {
                    "type": "boolean",
                    "description": "Docs: https://www.assemblyai.com/docs/core-transcription#filler-words"
                  },
                  "language_detection": {
                    "type": "boolean",
                    "description": "Docs: https://www.assemblyai.com/docs/core-transcription#automatic-language-detection"
                  },
                  "punctuate": {
                    "type": "boolean",
                    "description": "Docs: https://www.assemblyai.com/docs/core-transcription#automatic-punctuation-and-casing"
                  },
                  "format_text": {
                    "type": "boolean",
                    "description": "Docs: https://www.assemblyai.com/docs/core-transcription#automatic-punctuation-and-casing"
                  },
                  "filter_profanity": {
                    "type": "boolean",
                    "description": "Docs: https://www.assemblyai.com/docs/core-transcription#profanity-filtering"
                  },
                  "redact_pii_policies": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Docs: https://www.assemblyai.com/docs/audio-intelligence#pii-redaction"
                  },
                  "auto_highlights": {
                    "type": "boolean",
                    "description": "Docs: https://www.assemblyai.com/docs/audio-intelligence#detect-important-phrases-and-words"
                  },
                  "content_safety": {
                    "type": "boolean",
                    "description": "Docs: https://www.assemblyai.com/docs/audio-intelligence#content-moderation"
                  },
                  "iab_categories": {
                    "type": "boolean",
                    "description": "Docs: https://www.assemblyai.com/docs/audio-intelligence#topic-detection-iab-classification"
                  },
                  "sentiment_analysis": {
                    "type": "boolean",
                    "description": "Docs: https://www.assemblyai.com/docs/audio-intelligence#sentiment-analysis"
                  },
                  "summarization": {
                    "type": "boolean",
                    "description": "Docs: https://www.assemblyai.com/docs/audio-intelligence#summarization"
                  },
                  "summary_model": {
                    "type": "string",
                    "description": "Docs: https://www.assemblyai.com/docs/audio-intelligence#summarization"
                  },
                  "summary_type": {
                    "type": "string",
                    "description": "Docs: https://www.assemblyai.com/docs/audio-intelligence#summarization"
                  },
                  "auto_chapters": {
                    "type": "boolean",
                    "description": "Docs: https://www.assemblyai.com/docs/audio-intelligence#auto-chapters"
                  },
                  "entity_detection": {
                    "type": "boolean",
                    "description": "Docs: https://www.assemblyai.com/docs/audio-intelligence#entity-detection"
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "language": {
                    "type": "string"
                  },
                  "language_code": {
                    "type": "string",
                    "description": "Docs: https://www.assemblyai.com/docs/walkthroughs#specifying-a-language"
                  },
                  "speaker_labels": {
                    "type": "boolean",
                    "description": "Docs: https://www.assemblyai.com/docs/core-transcription#speaker-labels-speaker-diarization"
                  },
                  "word_boost": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Docs: https://www.assemblyai.com/docs/core-transcription#custom-vocabulary"
                  },
                  "boost_param": {
                    "type": "string",
                    "description": "Docs: https://www.assemblyai.com/docs/core-transcription#custom-vocabulary"
                  },
                  "custom_spelling": {
                    "type": "object",
                    "additionalProperties": {},
                    "description": "Docs: https://www.assemblyai.com/docs/core-transcription#custom-spelling"
                  },
                  "disfluencies": {
                    "type": "boolean",
                    "description": "Docs: https://www.assemblyai.com/docs/core-transcription#filler-words"
                  },
                  "language_detection": {
                    "type": "boolean",
                    "description": "Docs: https://www.assemblyai.com/docs/core-transcription#automatic-language-detection"
                  },
                  "punctuate": {
                    "type": "boolean",
                    "description": "Docs: https://www.assemblyai.com/docs/core-transcription#automatic-punctuation-and-casing"
                  },
                  "format_text": {
                    "type": "boolean",
                    "description": "Docs: https://www.assemblyai.com/docs/core-transcription#automatic-punctuation-and-casing"
                  },
                  "filter_profanity": {
                    "type": "boolean",
                    "description": "Docs: https://www.assemblyai.com/docs/core-transcription#profanity-filtering"
                  },
                  "redact_pii_policies": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Docs: https://www.assemblyai.com/docs/audio-intelligence#pii-redaction"
                  },
                  "auto_highlights": {
                    "type": "boolean",
                    "description": "Docs: https://www.assemblyai.com/docs/audio-intelligence#detect-important-phrases-and-words"
                  },
                  "content_safety": {
                    "type": "boolean",
                    "description": "Docs: https://www.assemblyai.com/docs/audio-intelligence#content-moderation"
                  },
                  "iab_categories": {
                    "type": "boolean",
                    "description": "Docs: https://www.assemblyai.com/docs/audio-intelligence#topic-detection-iab-classification"
                  },
                  "sentiment_analysis": {
                    "type": "boolean",
                    "description": "Docs: https://www.assemblyai.com/docs/audio-intelligence#sentiment-analysis"
                  },
                  "summarization": {
                    "type": "boolean",
                    "description": "Docs: https://www.assemblyai.com/docs/audio-intelligence#summarization"
                  },
                  "summary_model": {
                    "type": "string",
                    "description": "Docs: https://www.assemblyai.com/docs/audio-intelligence#summarization"
                  },
                  "summary_type": {
                    "type": "string",
                    "description": "Docs: https://www.assemblyai.com/docs/audio-intelligence#summarization"
                  },
                  "auto_chapters": {
                    "type": "boolean",
                    "description": "Docs: https://www.assemblyai.com/docs/audio-intelligence#auto-chapters"
                  },
                  "entity_detection": {
                    "type": "boolean",
                    "description": "Docs: https://www.assemblyai.com/docs/audio-intelligence#entity-detection"
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "language": {
                    "type": "string"
                  },
                  "language_code": {
                    "type": "string",
                    "description": "Docs: https://www.assemblyai.com/docs/walkthroughs#specifying-a-language"
                  },
                  "speaker_labels": {
                    "type": "boolean",
                    "description": "Docs: https://www.assemblyai.com/docs/core-transcription#speaker-labels-speaker-diarization"
                  },
                  "word_boost": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Docs: https://www.assemblyai.com/docs/core-transcription#custom-vocabulary"
                  },
                  "boost_param": {
                    "type": "string",
                    "description": "Docs: https://www.assemblyai.com/docs/core-transcription#custom-vocabulary"
                  },
                  "custom_spelling": {
                    "type": "object",
                    "additionalProperties": {},
                    "description": "Docs: https://www.assemblyai.com/docs/core-transcription#custom-spelling"
                  },
                  "disfluencies": {
                    "type": "boolean",
                    "description": "Docs: https://www.assemblyai.com/docs/core-transcription#filler-words"
                  },
                  "language_detection": {
                    "type": "boolean",
                    "description": "Docs: https://www.assemblyai.com/docs/core-transcription#automatic-language-detection"
                  },
                  "punctuate": {
                    "type": "boolean",
                    "description": "Docs: https://www.assemblyai.com/docs/core-transcription#automatic-punctuation-and-casing"
                  },
                  "format_text": {
                    "type": "boolean",
                    "description": "Docs: https://www.assemblyai.com/docs/core-transcription#automatic-punctuation-and-casing"
                  },
                  "filter_profanity": {
                    "type": "boolean",
                    "description": "Docs: https://www.assemblyai.com/docs/core-transcription#profanity-filtering"
                  },
                  "redact_pii_policies": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Docs: https://www.assemblyai.com/docs/audio-intelligence#pii-redaction"
                  },
                  "auto_highlights": {
                    "type": "boolean",
                    "description": "Docs: https://www.assemblyai.com/docs/audio-intelligence#detect-important-phrases-and-words"
                  },
                  "content_safety": {
                    "type": "boolean",
                    "description": "Docs: https://www.assemblyai.com/docs/audio-intelligence#content-moderation"
                  },
                  "iab_categories": {
                    "type": "boolean",
                    "description": "Docs: https://www.assemblyai.com/docs/audio-intelligence#topic-detection-iab-classification"
                  },
                  "sentiment_analysis": {
                    "type": "boolean",
                    "description": "Docs: https://www.assemblyai.com/docs/audio-intelligence#sentiment-analysis"
                  },
                  "summarization": {
                    "type": "boolean",
                    "description": "Docs: https://www.assemblyai.com/docs/audio-intelligence#summarization"
                  },
                  "summary_model": {
                    "type": "string",
                    "description": "Docs: https://www.assemblyai.com/docs/audio-intelligence#summarization"
                  },
                  "summary_type": {
                    "type": "string",
                    "description": "Docs: https://www.assemblyai.com/docs/audio-intelligence#summarization"
                  },
                  "auto_chapters": {
                    "type": "boolean",
                    "description": "Docs: https://www.assemblyai.com/docs/audio-intelligence#auto-chapters"
                  },
                  "entity_detection": {
                    "type": "boolean",
                    "description": "Docs: https://www.assemblyai.com/docs/audio-intelligence#entity-detection"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "deprecated": true,
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "readOnly": true
                    },
                    "video_url": {
                      "type": "string",
                      "format": "uri",
                      "readOnly": true,
                      "description": "A URL where the video recorded by the bot can be downloaded. This is null while the recording is in progress, and will be populated when the recording is completed. The returned URL is valid for 6 hours from the API call. A fresh URL can be obtained at any point by calling the API again."
                    },
                    "recording": {
                      "type": "string",
                      "format": "uuid",
                      "nullable": true
                    },
                    "media_retention_end": {
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "description": "After this date the video and transcript will be deleted. This date is 7 days from when the recording ended."
                    },
                    "status_changes": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "string",
                            "readOnly": true
                          },
                          "message": {
                            "type": "string",
                            "readOnly": true
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          },
                          "sub_code": {
                            "type": "string",
                            "readOnly": true
                          }
                        },
                        "required": [
                          "code",
                          "created_at",
                          "message",
                          "sub_code"
                        ]
                      },
                      "readOnly": true
                    },
                    "meeting_metadata": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "title": {
                              "type": "string",
                              "readOnly": true,
                              "description": "The title of the meeting the bot has joined."
                            }
                          },
                          "required": [
                            "title"
                          ]
                        }
                      ],
                      "readOnly": true,
                      "nullable": true
                    },
                    "meeting_participants": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "readOnly": true
                          },
                          "name": {
                            "type": "string",
                            "readOnly": true
                          },
                          "events": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "code": {
                                  "type": "string",
                                  "readOnly": true
                                },
                                "created_at": {
                                  "type": "string",
                                  "format": "date-time",
                                  "readOnly": true
                                }
                              },
                              "required": [
                                "code",
                                "created_at"
                              ]
                            },
                            "readOnly": true
                          }
                        },
                        "required": [
                          "events",
                          "id",
                          "name"
                        ]
                      },
                      "readOnly": true
                    },
                    "meeting_url": {
                      "type": "string",
                      "nullable": true,
                      "description": "The url of the meeting. For example, https://zoom.us/j/123?pwd=456. This field can only be read from scheduled bots that have not yet joined a call. Once a bot has joined a call, it's meeting_url will be cleared."
                    },
                    "bot_name": {
                      "type": "string",
                      "writeOnly": true,
                      "default": "Meeting Notetaker",
                      "description": "The name of the bot that will be displayed in the call.",
                      "maxLength": 100
                    },
                    "join_at": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true,
                      "description": "The time at which the bot will join the call, formatted in ISO 8601. This field can only be read from scheduled bots that have not yet joined a call. Once a bot has joined a call, it's join_at will be cleared."
                    },
                    "real_time_transcription": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "destination_url": {
                              "type": "string",
                              "format": "uri"
                            },
                            "partial_results": {
                              "type": "boolean",
                              "default": false
                            }
                          },
                          "required": [
                            "destination_url"
                          ]
                        }
                      ],
                      "writeOnly": true,
                      "description": "The settings for real-time transcription."
                    },
                    "real_time_media": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "rtmp_destination_url": {
                              "type": "string"
                            },
                            "websocket_video_destination_url": {
                              "type": "string"
                            },
                            "websocket_audio_destination_url": {
                              "type": "string"
                            },
                            "websocket_speaker_timeline_destination_url": {
                              "type": "string"
                            },
                            "websocket_speaker_timeline_exclude_null_speaker": {
                              "type": "boolean",
                              "default": true,
                              "description": "Set to false to include null active speaker events in the speaker timeline websocket. Defaults to true."
                            },
                            "webhook_call_events_destination_url": {
                              "type": "string",
                              "description": "(BETA) Receive webhooks for in call events('bot.participant_join'/'bot.participant_leave'/'bot.active_speaker_notify')"
                            }
                          }
                        }
                      ],
                      "writeOnly": true,
                      "description": "The settings for real-time media output."
                    },
                    "transcription_options": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "provider": {
                              "enum": [
                                "deepgram",
                                "assembly_ai",
                                "rev",
                                "aws_transcribe",
                                "symbl",
                                "none"
                              ],
                              "type": "string"
                            },
                            "assembly_ai": {
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "word_boost": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              ],
                              "title": "AssemblyAi Real-time Transcription Settings",
                              "description": "Docs: https://www.assemblyai.com/docs/walkthroughs#realtime-streaming-transcription"
                            },
                            "deepgram": {
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "tier": {
                                      "type": "string"
                                    },
                                    "model": {
                                      "type": "string"
                                    },
                                    "version": {
                                      "type": "string"
                                    },
                                    "language": {
                                      "type": "string"
                                    },
                                    "profanity_filter": {
                                      "type": "boolean"
                                    },
                                    "redact": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "diarize": {
                                      "type": "boolean"
                                    },
                                    "diarize_version": {
                                      "type": "string"
                                    },
                                    "ner": {
                                      "type": "boolean"
                                    },
                                    "alternatives": {
                                      "type": "integer"
                                    },
                                    "numerals": {
                                      "type": "boolean"
                                    },
                                    "search": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "replace": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "keywords": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "interim_results": {
                                      "type": "boolean"
                                    },
                                    "endpointing": {
                                      "type": "boolean"
                                    }
                                  }
                                }
                              ],
                              "title": "Deepgram Real-time Transcription Settings",
                              "description": "Docs: https://developers.deepgram.com/api-reference/transcription/#transcribe-live-streaming-audio"
                            },
                            "rev": {
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "language": {
                                      "type": "string"
                                    },
                                    "metadata": {
                                      "type": "string"
                                    },
                                    "custom_vocabulary_id": {
                                      "type": "string",
                                      "maxLength": 200
                                    },
                                    "filter_profanity": {
                                      "type": "boolean"
                                    },
                                    "remove_disfluencies": {
                                      "type": "boolean"
                                    },
                                    "delete_after_seconds": {
                                      "type": "integer"
                                    },
                                    "detailed_partials": {
                                      "type": "boolean"
                                    },
                                    "start_ts": {
                                      "type": "number",
                                      "format": "double"
                                    },
                                    "max_segment_duration_seconds": {
                                      "type": "integer"
                                    },
                                    "transcriber": {
                                      "type": "string"
                                    },
                                    "enable_speaker_switch": {
                                      "type": "boolean"
                                    },
                                    "skip_postprocessing": {
                                      "type": "boolean"
                                    },
                                    "priority": {
                                      "type": "string"
                                    }
                                  }
                                }
                              ],
                              "title": "Rev Real-time Transcription Settings",
                              "description": "Docs: https://docs.rev.ai/api/streaming/requests/"
                            },
                            "aws_transcribe": {
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "language_code": {
                                      "type": "string"
                                    },
                                    "content_redaction_type": {
                                      "type": "string"
                                    },
                                    "language_model_name": {
                                      "type": "string"
                                    },
                                    "language_options": {
                                      "type": "string"
                                    },
                                    "language_identification": {
                                      "type": "boolean"
                                    },
                                    "partial_results_stability": {
                                      "type": "string"
                                    },
                                    "pii_entity_types": {
                                      "type": "string"
                                    },
                                    "preferred_language": {
                                      "type": "string"
                                    },
                                    "show_speaker_label": {
                                      "type": "boolean"
                                    },
                                    "vocabulary_filter_method": {
                                      "type": "string"
                                    },
                                    "vocabulary_filter_names": {
                                      "type": "string"
                                    },
                                    "vocabulary_names": {
                                      "type": "string"
                                    }
                                  }
                                }
                              ],
                              "title": "AWS Transcribe Real-time Transcription Settings",
                              "description": "Docs: https://docs.aws.amazon.com/transcribe/latest/APIReference/API_streaming_StartStreamTranscription.html"
                            }
                          },
                          "required": [
                            "provider"
                          ]
                        }
                      ],
                      "writeOnly": true
                    },
                    "chat": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "on_bot_join": {
                              "type": "object",
                              "properties": {
                                "send_to": {
                                  "enum": [
                                    "host",
                                    "everyone",
                                    "everyone_except_host"
                                  ],
                                  "type": "string"
                                },
                                "message": {
                                  "type": "string",
                                  "maxLength": 4096
                                }
                              },
                              "required": [
                                "message",
                                "send_to"
                              ]
                            },
                            "on_participant_join": {
                              "type": "object",
                              "properties": {
                                "message": {
                                  "type": "string",
                                  "maxLength": 4096
                                },
                                "exclude_host": {
                                  "type": "boolean"
                                }
                              },
                              "required": [
                                "exclude_host",
                                "message"
                              ]
                            }
                          }
                        }
                      ],
                      "writeOnly": true,
                      "description": "(BETA) Settings for the bot to send chat messages."
                    },
                    "zoom": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "join_token_url": {
                              "type": "string",
                              "format": "uri",
                              "description": "A URL which Recall will make a GET request to, in order to retrieve the Zoom Join Token for Local Recording, which the V2 Zoom bot uses to automatically record. This token can be generated through the Zoom API. Docs: https://marketplace.zoom.us/docs/api-reference/zoom-api/methods/#operation/meetingLocalRecordingJoinToken"
                            },
                            "zak_url": {
                              "type": "string",
                              "format": "uri",
                              "description": "A URL which Recall will make  GET request to, in order to retrieve the ZAK. The V1 Zoom bot uses this to join meetings that require authentication to join.This token can be generated through the Zoom API. Docs: https://marketplace.zoom.us/docs/api-reference/zoom-api/methods/#operation/userZak"
                            }
                          }
                        }
                      ],
                      "writeOnly": true,
                      "description": "Zoom specific parameters"
                    },
                    "google_meet": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "login_required": {
                              "type": "boolean",
                              "nullable": true,
                              "description": "Specify if the bot should always login to Google before joining the meeting. This value will override the default value set on bot's Google Meet login credentials on the account. When set to 'false', the bot will only login if required by the meeting."
                            }
                          }
                        }
                      ],
                      "writeOnly": true,
                      "description": "Google Meet specific parameters"
                    },
                    "automatic_leave": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "waiting_room_timeout": {
                              "type": "integer",
                              "minimum": 30,
                              "default": 1200,
                              "description": "The number of seconds after which the bot will automatically leave the call, if it has not been let in from the waiting room."
                            },
                            "noone_joined_timeout": {
                              "type": "integer",
                              "minimum": 30,
                              "default": 1200,
                              "description": "(BETA) The number of seconds after which the bot will automatically leave the call, if it has joined the meeting but no other participant has joined."
                            },
                            "everyone_left_timeout": {
                              "type": "integer",
                              "minimum": 1,
                              "default": 2,
                              "description": "(BETA) The number of seconds after which the bot will automatically leave the call, if there were other participants in the call who have all left."
                            }
                          }
                        }
                      ],
                      "writeOnly": true
                    },
                    "automatic_video_output": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "in_call_recording": {
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "kind": {
                                      "allOf": [
                                        {
                                          "enum": [
                                            "jpeg"
                                          ],
                                          "type": "string"
                                        }
                                      ],
                                      "description": "The kind of data encoded in b64_data"
                                    },
                                    "b64_data": {
                                      "type": "string",
                                      "description": "Data encoded in Base64 format, using the standard alphabet (specified here: https://datatracker.ietf.org/doc/html/rfc4648#section-4)",
                                      "maxLength": 1835008
                                    }
                                  },
                                  "required": [
                                    "b64_data",
                                    "kind"
                                  ]
                                }
                              ],
                              "description": "The video that will be automatically output when the bot is in the in_call_recording state"
                            }
                          },
                          "required": [
                            "in_call_recording"
                          ]
                        }
                      ],
                      "writeOnly": true,
                      "description": "(BETA) Settings for the bot to output video."
                    },
                    "automatic_audio_output": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "in_call_recording": {
                              "type": "object",
                              "properties": {
                                "data": {
                                  "type": "object",
                                  "properties": {
                                    "kind": {
                                      "allOf": [
                                        {
                                          "enum": [
                                            "mp3"
                                          ],
                                          "type": "string"
                                        }
                                      ],
                                      "description": "The kind of data encoded in b64_data"
                                    },
                                    "b64_data": {
                                      "type": "string",
                                      "description": "Data encoded in Base64 format, using the standard alphabet (specified here: https://datatracker.ietf.org/doc/html/rfc4648#section-4)",
                                      "maxLength": 1835008
                                    }
                                  },
                                  "required": [
                                    "b64_data",
                                    "kind"
                                  ]
                                },
                                "replay_on_participant_join": {
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "debounce_interval": {
                                          "type": "integer",
                                          "description": "The amount of time to wait for additional participants to join before replaying the audio."
                                        }
                                      },
                                      "required": [
                                        "debounce_interval"
                                      ]
                                    }
                                  ],
                                  "description": "Specify this parameter if you want the audio to be replayed when additional participants join the call."
                                }
                              },
                              "required": [
                                "data"
                              ]
                            }
                          },
                          "required": [
                            "in_call_recording"
                          ]
                        }
                      ],
                      "writeOnly": true,
                      "description": "(BETA) Settings for the bot to output audio."
                    },
                    "calendar_meetings": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "readOnly": true
                          },
                          "start_time": {
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          },
                          "end_time": {
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          },
                          "calendar_user": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "readOnly": true
                                  },
                                  "external_id": {
                                    "type": "string",
                                    "readOnly": true
                                  }
                                },
                                "required": [
                                  "external_id",
                                  "id"
                                ]
                              }
                            ],
                            "readOnly": true
                          }
                        },
                        "required": [
                          "calendar_user",
                          "end_time",
                          "id",
                          "start_time"
                        ]
                      },
                      "readOnly": true
                    },
                    "recording_mode": {
                      "allOf": [
                        {
                          "enum": [
                            "speaker_view",
                            "gallery_view",
                            "gallery_view_v2"
                          ],
                          "type": "string"
                        }
                      ],
                      "writeOnly": true,
                      "default": "speaker_view",
                      "description": "The layout of the output video."
                    },
                    "recording_mode_options": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "participant_video_when_screenshare": {
                              "allOf": [
                                {
                                  "enum": [
                                    "hide",
                                    "beside",
                                    "overlap"
                                  ],
                                  "type": "string"
                                }
                              ],
                              "description": "The layout of participant video streams when a screen is being shared. More docs: https://recallai.readme.io/reference/bot-faqs#5-what-do-the-recording-modes-look-like-when-specified-in-create-bot"
                            }
                          },
                          "required": [
                            "participant_video_when_screenshare"
                          ]
                        }
                      ],
                      "writeOnly": true,
                      "description": "Additional options for the output video layout."
                    }
                  },
                  "required": [
                    "calendar_meetings",
                    "id",
                    "media_retention_end",
                    "meeting_metadata",
                    "meeting_participants",
                    "meeting_url",
                    "status_changes",
                    "video_url"
                  ]
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v1/bot/{id}/transcript/": {
      "get": {
        "operationId": "bot_transcript_list",
        "description": "Get the transcript produced by the bot. If the call is not yet complete, this returns the transcript so-far.",
        "summary": "Get Bot Transcript",
        "parameters": [
          {
            "in": "query",
            "name": "enhanced_diarization",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "A UUID string identifying this bot.",
            "required": true
          }
        ],
        "tags": [
          "bot"
        ],
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "speaker": {
                        "type": "string",
                        "description": "The name of the meeting participant who said these words."
                      },
                      "words": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "text": {
                              "type": "string"
                            },
                            "start_timestamp": {
                              "type": "number",
                              "format": "double"
                            },
                            "end_timestamp": {
                              "type": "number",
                              "format": "double"
                            }
                          },
                          "required": [
                            "end_timestamp",
                            "start_timestamp",
                            "text"
                          ]
                        }
                      }
                    },
                    "required": [
                      "speaker",
                      "words"
                    ]
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v1/calendar/authenticate/": {
      "post": {
        "operationId": "calendar_authenticate_create",
        "description": "Generate an authentication token for calendar APIs, scoped to the user. Each token has an expiry of 1 day from time of creation.",
        "summary": "Get Calendar Auth Token",
        "tags": [
          "calendar-v1"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user_id": {
                    "type": "string",
                    "description": "The unique id of the user in your system."
                  }
                },
                "required": [
                  "user_id"
                ]
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "user_id": {
                    "type": "string",
                    "description": "The unique id of the user in your system."
                  }
                },
                "required": [
                  "user_id"
                ]
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "user_id": {
                    "type": "string",
                    "description": "The unique id of the user in your system."
                  }
                },
                "required": [
                  "user_id"
                ]
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "description": "The authentication token for the user."
                    }
                  },
                  "required": [
                    "token"
                  ]
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v1/calendar/meetings/": {
      "get": {
        "operationId": "calendar_meetings_list",
        "summary": "List Calendar Meetings",
        "parameters": [
          {
            "in": "query",
            "name": "ical_uid",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "start_time_after",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "in": "query",
            "name": "start_time_before",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "tags": [
          "calendar-v1"
        ],
        "security": [
          {
            "CalendarJwtAuthentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                      },
                      "override_should_record": {
                        "type": "boolean",
                        "nullable": true
                      },
                      "title": {
                        "type": "string",
                        "readOnly": true
                      },
                      "will_record": {
                        "type": "boolean",
                        "readOnly": true
                      },
                      "will_record_reason": {
                        "type": "string",
                        "readOnly": true
                      },
                      "start_time": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                      },
                      "end_time": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                      },
                      "platform": {
                        "type": "string",
                        "readOnly": true
                      },
                      "meeting_platform": {
                        "type": "string",
                        "readOnly": true
                      },
                      "calendar_platform": {
                        "type": "string",
                        "readOnly": true
                      },
                      "zoom_invite": {
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "meeting_id": {
                                "type": "string"
                              },
                              "meeting_password": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "meeting_id",
                              "meeting_password"
                            ]
                          }
                        ],
                        "readOnly": true
                      },
                      "teams_invite": {
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "organizer_id": {
                                "type": "string"
                              },
                              "tenant_id": {
                                "type": "string"
                              },
                              "message_id": {
                                "type": "string"
                              },
                              "thread_id": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "message_id",
                              "organizer_id",
                              "tenant_id",
                              "thread_id"
                            ]
                          }
                        ],
                        "readOnly": true
                      },
                      "meet_invite": {
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "meeting_id": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "meeting_id"
                            ]
                          }
                        ],
                        "readOnly": true
                      },
                      "webex_invite": {
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "meeting_subdomain": {
                                "type": "string"
                              },
                              "meeting_path": {
                                "type": "string",
                                "description": "This value is available only for Scheduled Webex meetings."
                              },
                              "meeting_mtid": {
                                "type": "string",
                                "description": "This value is available only for Scheduled Webex meetings."
                              },
                              "meeting_personal_room_id": {
                                "type": "string",
                                "description": "This value is available only for Personal room Webex meetings."
                              }
                            },
                            "required": [
                              "meeting_subdomain"
                            ]
                          }
                        ],
                        "readOnly": true
                      },
                      "bot_id": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "readOnly": true
                      },
                      "is_external": {
                        "type": "boolean",
                        "readOnly": true
                      },
                      "is_hosted_by_me": {
                        "type": "boolean",
                        "readOnly": true
                      },
                      "is_recurring": {
                        "type": "boolean",
                        "readOnly": true
                      },
                      "organizer_email": {
                        "type": "string",
                        "readOnly": true
                      },
                      "attendee_emails": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "readOnly": true
                      },
                      "attendees": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "additionalProperties": {}
                        },
                        "readOnly": true
                      },
                      "ical_uid": {
                        "type": "string",
                        "readOnly": true
                      }
                    },
                    "required": [
                      "attendee_emails",
                      "attendees",
                      "bot_id",
                      "calendar_platform",
                      "end_time",
                      "ical_uid",
                      "id",
                      "is_external",
                      "is_hosted_by_me",
                      "is_recurring",
                      "meet_invite",
                      "meeting_platform",
                      "organizer_email",
                      "platform",
                      "start_time",
                      "teams_invite",
                      "title",
                      "webex_invite",
                      "will_record",
                      "will_record_reason",
                      "zoom_invite"
                    ]
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v1/calendar/meetings/{id}/": {
      "get": {
        "operationId": "calendar_meetings_retrieve",
        "summary": "Retrieve Calendar Meeting",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "A UUID string identifying this calendar meeting.",
            "required": true
          }
        ],
        "tags": [
          "calendar-v1"
        ],
        "security": [
          {
            "CalendarJwtAuthentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "readOnly": true
                    },
                    "override_should_record": {
                      "type": "boolean",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "readOnly": true
                    },
                    "will_record": {
                      "type": "boolean",
                      "readOnly": true
                    },
                    "will_record_reason": {
                      "type": "string",
                      "readOnly": true
                    },
                    "start_time": {
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "end_time": {
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "platform": {
                      "type": "string",
                      "readOnly": true
                    },
                    "meeting_platform": {
                      "type": "string",
                      "readOnly": true
                    },
                    "calendar_platform": {
                      "type": "string",
                      "readOnly": true
                    },
                    "zoom_invite": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "meeting_id": {
                              "type": "string"
                            },
                            "meeting_password": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "meeting_id",
                            "meeting_password"
                          ]
                        }
                      ],
                      "readOnly": true
                    },
                    "teams_invite": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "organizer_id": {
                              "type": "string"
                            },
                            "tenant_id": {
                              "type": "string"
                            },
                            "message_id": {
                              "type": "string"
                            },
                            "thread_id": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message_id",
                            "organizer_id",
                            "tenant_id",
                            "thread_id"
                          ]
                        }
                      ],
                      "readOnly": true
                    },
                    "meet_invite": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "meeting_id": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "meeting_id"
                          ]
                        }
                      ],
                      "readOnly": true
                    },
                    "webex_invite": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "meeting_subdomain": {
                              "type": "string"
                            },
                            "meeting_path": {
                              "type": "string",
                              "description": "This value is available only for Scheduled Webex meetings."
                            },
                            "meeting_mtid": {
                              "type": "string",
                              "description": "This value is available only for Scheduled Webex meetings."
                            },
                            "meeting_personal_room_id": {
                              "type": "string",
                              "description": "This value is available only for Personal room Webex meetings."
                            }
                          },
                          "required": [
                            "meeting_subdomain"
                          ]
                        }
                      ],
                      "readOnly": true
                    },
                    "bot_id": {
                      "type": "string",
                      "format": "uuid",
                      "nullable": true,
                      "readOnly": true
                    },
                    "is_external": {
                      "type": "boolean",
                      "readOnly": true
                    },
                    "is_hosted_by_me": {
                      "type": "boolean",
                      "readOnly": true
                    },
                    "is_recurring": {
                      "type": "boolean",
                      "readOnly": true
                    },
                    "organizer_email": {
                      "type": "string",
                      "readOnly": true
                    },
                    "attendee_emails": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "attendees": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "additionalProperties": {}
                      },
                      "readOnly": true
                    },
                    "ical_uid": {
                      "type": "string",
                      "readOnly": true
                    }
                  },
                  "required": [
                    "attendee_emails",
                    "attendees",
                    "bot_id",
                    "calendar_platform",
                    "end_time",
                    "ical_uid",
                    "id",
                    "is_external",
                    "is_hosted_by_me",
                    "is_recurring",
                    "meet_invite",
                    "meeting_platform",
                    "organizer_email",
                    "platform",
                    "start_time",
                    "teams_invite",
                    "title",
                    "webex_invite",
                    "will_record",
                    "will_record_reason",
                    "zoom_invite"
                  ]
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "calendar_meetings_update",
        "description": "Use this endpoint to update override_should_record property of the meeting. This endpoint is rate limited to 10 requests per user per meeting per minute.",
        "summary": "Update Calendar Meeting",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "A UUID string identifying this calendar meeting.",
            "required": true
          }
        ],
        "tags": [
          "calendar-v1"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                  },
                  "override_should_record": {
                    "type": "boolean",
                    "nullable": true
                  },
                  "title": {
                    "type": "string",
                    "readOnly": true
                  },
                  "will_record": {
                    "type": "boolean",
                    "readOnly": true
                  },
                  "will_record_reason": {
                    "type": "string",
                    "readOnly": true
                  },
                  "start_time": {
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                  },
                  "end_time": {
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                  },
                  "platform": {
                    "type": "string",
                    "readOnly": true
                  },
                  "meeting_platform": {
                    "type": "string",
                    "readOnly": true
                  },
                  "calendar_platform": {
                    "type": "string",
                    "readOnly": true
                  },
                  "zoom_invite": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "meeting_id": {
                            "type": "string"
                          },
                          "meeting_password": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "meeting_id",
                          "meeting_password"
                        ]
                      }
                    ],
                    "readOnly": true
                  },
                  "teams_invite": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "organizer_id": {
                            "type": "string"
                          },
                          "tenant_id": {
                            "type": "string"
                          },
                          "message_id": {
                            "type": "string"
                          },
                          "thread_id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message_id",
                          "organizer_id",
                          "tenant_id",
                          "thread_id"
                        ]
                      }
                    ],
                    "readOnly": true
                  },
                  "meet_invite": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "meeting_id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "meeting_id"
                        ]
                      }
                    ],
                    "readOnly": true
                  },
                  "webex_invite": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "meeting_subdomain": {
                            "type": "string"
                          },
                          "meeting_path": {
                            "type": "string",
                            "description": "This value is available only for Scheduled Webex meetings."
                          },
                          "meeting_mtid": {
                            "type": "string",
                            "description": "This value is available only for Scheduled Webex meetings."
                          },
                          "meeting_personal_room_id": {
                            "type": "string",
                            "description": "This value is available only for Personal room Webex meetings."
                          }
                        },
                        "required": [
                          "meeting_subdomain"
                        ]
                      }
                    ],
                    "readOnly": true
                  },
                  "bot_id": {
                    "type": "string",
                    "format": "uuid",
                    "nullable": true,
                    "readOnly": true
                  },
                  "is_external": {
                    "type": "boolean",
                    "readOnly": true
                  },
                  "is_hosted_by_me": {
                    "type": "boolean",
                    "readOnly": true
                  },
                  "is_recurring": {
                    "type": "boolean",
                    "readOnly": true
                  },
                  "organizer_email": {
                    "type": "string",
                    "readOnly": true
                  },
                  "attendee_emails": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "readOnly": true
                  },
                  "attendees": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": {}
                    },
                    "readOnly": true
                  },
                  "ical_uid": {
                    "type": "string",
                    "readOnly": true
                  }
                },
                "required": [
                  "attendee_emails",
                  "attendees",
                  "bot_id",
                  "calendar_platform",
                  "end_time",
                  "ical_uid",
                  "id",
                  "is_external",
                  "is_hosted_by_me",
                  "is_recurring",
                  "meet_invite",
                  "meeting_platform",
                  "organizer_email",
                  "platform",
                  "start_time",
                  "teams_invite",
                  "title",
                  "webex_invite",
                  "will_record",
                  "will_record_reason",
                  "zoom_invite"
                ]
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                  },
                  "override_should_record": {
                    "type": "boolean",
                    "nullable": true
                  },
                  "title": {
                    "type": "string",
                    "readOnly": true
                  },
                  "will_record": {
                    "type": "boolean",
                    "readOnly": true
                  },
                  "will_record_reason": {
                    "type": "string",
                    "readOnly": true
                  },
                  "start_time": {
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                  },
                  "end_time": {
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                  },
                  "platform": {
                    "type": "string",
                    "readOnly": true
                  },
                  "meeting_platform": {
                    "type": "string",
                    "readOnly": true
                  },
                  "calendar_platform": {
                    "type": "string",
                    "readOnly": true
                  },
                  "zoom_invite": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "meeting_id": {
                            "type": "string"
                          },
                          "meeting_password": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "meeting_id",
                          "meeting_password"
                        ]
                      }
                    ],
                    "readOnly": true
                  },
                  "teams_invite": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "organizer_id": {
                            "type": "string"
                          },
                          "tenant_id": {
                            "type": "string"
                          },
                          "message_id": {
                            "type": "string"
                          },
                          "thread_id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message_id",
                          "organizer_id",
                          "tenant_id",
                          "thread_id"
                        ]
                      }
                    ],
                    "readOnly": true
                  },
                  "meet_invite": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "meeting_id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "meeting_id"
                        ]
                      }
                    ],
                    "readOnly": true
                  },
                  "webex_invite": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "meeting_subdomain": {
                            "type": "string"
                          },
                          "meeting_path": {
                            "type": "string",
                            "description": "This value is available only for Scheduled Webex meetings."
                          },
                          "meeting_mtid": {
                            "type": "string",
                            "description": "This value is available only for Scheduled Webex meetings."
                          },
                          "meeting_personal_room_id": {
                            "type": "string",
                            "description": "This value is available only for Personal room Webex meetings."
                          }
                        },
                        "required": [
                          "meeting_subdomain"
                        ]
                      }
                    ],
                    "readOnly": true
                  },
                  "bot_id": {
                    "type": "string",
                    "format": "uuid",
                    "nullable": true,
                    "readOnly": true
                  },
                  "is_external": {
                    "type": "boolean",
                    "readOnly": true
                  },
                  "is_hosted_by_me": {
                    "type": "boolean",
                    "readOnly": true
                  },
                  "is_recurring": {
                    "type": "boolean",
                    "readOnly": true
                  },
                  "organizer_email": {
                    "type": "string",
                    "readOnly": true
                  },
                  "attendee_emails": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "readOnly": true
                  },
                  "attendees": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": {}
                    },
                    "readOnly": true
                  },
                  "ical_uid": {
                    "type": "string",
                    "readOnly": true
                  }
                },
                "required": [
                  "attendee_emails",
                  "attendees",
                  "bot_id",
                  "calendar_platform",
                  "end_time",
                  "ical_uid",
                  "id",
                  "is_external",
                  "is_hosted_by_me",
                  "is_recurring",
                  "meet_invite",
                  "meeting_platform",
                  "organizer_email",
                  "platform",
                  "start_time",
                  "teams_invite",
                  "title",
                  "webex_invite",
                  "will_record",
                  "will_record_reason",
                  "zoom_invite"
                ]
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                  },
                  "override_should_record": {
                    "type": "boolean",
                    "nullable": true
                  },
                  "title": {
                    "type": "string",
                    "readOnly": true
                  },
                  "will_record": {
                    "type": "boolean",
                    "readOnly": true
                  },
                  "will_record_reason": {
                    "type": "string",
                    "readOnly": true
                  },
                  "start_time": {
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                  },
                  "end_time": {
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                  },
                  "platform": {
                    "type": "string",
                    "readOnly": true
                  },
                  "meeting_platform": {
                    "type": "string",
                    "readOnly": true
                  },
                  "calendar_platform": {
                    "type": "string",
                    "readOnly": true
                  },
                  "zoom_invite": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "meeting_id": {
                            "type": "string"
                          },
                          "meeting_password": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "meeting_id",
                          "meeting_password"
                        ]
                      }
                    ],
                    "readOnly": true
                  },
                  "teams_invite": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "organizer_id": {
                            "type": "string"
                          },
                          "tenant_id": {
                            "type": "string"
                          },
                          "message_id": {
                            "type": "string"
                          },
                          "thread_id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message_id",
                          "organizer_id",
                          "tenant_id",
                          "thread_id"
                        ]
                      }
                    ],
                    "readOnly": true
                  },
                  "meet_invite": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "meeting_id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "meeting_id"
                        ]
                      }
                    ],
                    "readOnly": true
                  },
                  "webex_invite": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "meeting_subdomain": {
                            "type": "string"
                          },
                          "meeting_path": {
                            "type": "string",
                            "description": "This value is available only for Scheduled Webex meetings."
                          },
                          "meeting_mtid": {
                            "type": "string",
                            "description": "This value is available only for Scheduled Webex meetings."
                          },
                          "meeting_personal_room_id": {
                            "type": "string",
                            "description": "This value is available only for Personal room Webex meetings."
                          }
                        },
                        "required": [
                          "meeting_subdomain"
                        ]
                      }
                    ],
                    "readOnly": true
                  },
                  "bot_id": {
                    "type": "string",
                    "format": "uuid",
                    "nullable": true,
                    "readOnly": true
                  },
                  "is_external": {
                    "type": "boolean",
                    "readOnly": true
                  },
                  "is_hosted_by_me": {
                    "type": "boolean",
                    "readOnly": true
                  },
                  "is_recurring": {
                    "type": "boolean",
                    "readOnly": true
                  },
                  "organizer_email": {
                    "type": "string",
                    "readOnly": true
                  },
                  "attendee_emails": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "readOnly": true
                  },
                  "attendees": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": {}
                    },
                    "readOnly": true
                  },
                  "ical_uid": {
                    "type": "string",
                    "readOnly": true
                  }
                },
                "required": [
                  "attendee_emails",
                  "attendees",
                  "bot_id",
                  "calendar_platform",
                  "end_time",
                  "ical_uid",
                  "id",
                  "is_external",
                  "is_hosted_by_me",
                  "is_recurring",
                  "meet_invite",
                  "meeting_platform",
                  "organizer_email",
                  "platform",
                  "start_time",
                  "teams_invite",
                  "title",
                  "webex_invite",
                  "will_record",
                  "will_record_reason",
                  "zoom_invite"
                ]
              }
            }
          }
        },
        "security": [
          {
            "CalendarJwtAuthentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "readOnly": true
                    },
                    "override_should_record": {
                      "type": "boolean",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "readOnly": true
                    },
                    "will_record": {
                      "type": "boolean",
                      "readOnly": true
                    },
                    "will_record_reason": {
                      "type": "string",
                      "readOnly": true
                    },
                    "start_time": {
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "end_time": {
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "platform": {
                      "type": "string",
                      "readOnly": true
                    },
                    "meeting_platform": {
                      "type": "string",
                      "readOnly": true
                    },
                    "calendar_platform": {
                      "type": "string",
                      "readOnly": true
                    },
                    "zoom_invite": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "meeting_id": {
                              "type": "string"
                            },
                            "meeting_password": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "meeting_id",
                            "meeting_password"
                          ]
                        }
                      ],
                      "readOnly": true
                    },
                    "teams_invite": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "organizer_id": {
                              "type": "string"
                            },
                            "tenant_id": {
                              "type": "string"
                            },
                            "message_id": {
                              "type": "string"
                            },
                            "thread_id": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message_id",
                            "organizer_id",
                            "tenant_id",
                            "thread_id"
                          ]
                        }
                      ],
                      "readOnly": true
                    },
                    "meet_invite": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "meeting_id": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "meeting_id"
                          ]
                        }
                      ],
                      "readOnly": true
                    },
                    "webex_invite": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "meeting_subdomain": {
                              "type": "string"
                            },
                            "meeting_path": {
                              "type": "string",
                              "description": "This value is available only for Scheduled Webex meetings."
                            },
                            "meeting_mtid": {
                              "type": "string",
                              "description": "This value is available only for Scheduled Webex meetings."
                            },
                            "meeting_personal_room_id": {
                              "type": "string",
                              "description": "This value is available only for Personal room Webex meetings."
                            }
                          },
                          "required": [
                            "meeting_subdomain"
                          ]
                        }
                      ],
                      "readOnly": true
                    },
                    "bot_id": {
                      "type": "string",
                      "format": "uuid",
                      "nullable": true,
                      "readOnly": true
                    },
                    "is_external": {
                      "type": "boolean",
                      "readOnly": true
                    },
                    "is_hosted_by_me": {
                      "type": "boolean",
                      "readOnly": true
                    },
                    "is_recurring": {
                      "type": "boolean",
                      "readOnly": true
                    },
                    "organizer_email": {
                      "type": "string",
                      "readOnly": true
                    },
                    "attendee_emails": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "attendees": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "additionalProperties": {}
                      },
                      "readOnly": true
                    },
                    "ical_uid": {
                      "type": "string",
                      "readOnly": true
                    }
                  },
                  "required": [
                    "attendee_emails",
                    "attendees",
                    "bot_id",
                    "calendar_platform",
                    "end_time",
                    "ical_uid",
                    "id",
                    "is_external",
                    "is_hosted_by_me",
                    "is_recurring",
                    "meet_invite",
                    "meeting_platform",
                    "organizer_email",
                    "platform",
                    "start_time",
                    "teams_invite",
                    "title",
                    "webex_invite",
                    "will_record",
                    "will_record_reason",
                    "zoom_invite"
                  ]
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v1/calendar/meetings/refresh/": {
      "post": {
        "operationId": "calendar_meetings_refresh_create",
        "description": "Resync the calendar meetings for the user. This endpoint is rate limited to 1 request per user per minute.",
        "summary": "Refresh Calendar Meetings",
        "tags": [
          "calendar-v1"
        ],
        "security": [
          {
            "CalendarJwtAuthentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                      },
                      "override_should_record": {
                        "type": "boolean",
                        "nullable": true
                      },
                      "title": {
                        "type": "string",
                        "readOnly": true
                      },
                      "will_record": {
                        "type": "boolean",
                        "readOnly": true
                      },
                      "will_record_reason": {
                        "type": "string",
                        "readOnly": true
                      },
                      "start_time": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                      },
                      "end_time": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                      },
                      "platform": {
                        "type": "string",
                        "readOnly": true
                      },
                      "meeting_platform": {
                        "type": "string",
                        "readOnly": true
                      },
                      "calendar_platform": {
                        "type": "string",
                        "readOnly": true
                      },
                      "zoom_invite": {
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "meeting_id": {
                                "type": "string"
                              },
                              "meeting_password": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "meeting_id",
                              "meeting_password"
                            ]
                          }
                        ],
                        "readOnly": true
                      },
                      "teams_invite": {
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "organizer_id": {
                                "type": "string"
                              },
                              "tenant_id": {
                                "type": "string"
                              },
                              "message_id": {
                                "type": "string"
                              },
                              "thread_id": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "message_id",
                              "organizer_id",
                              "tenant_id",
                              "thread_id"
                            ]
                          }
                        ],
                        "readOnly": true
                      },
                      "meet_invite": {
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "meeting_id": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "meeting_id"
                            ]
                          }
                        ],
                        "readOnly": true
                      },
                      "webex_invite": {
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "meeting_subdomain": {
                                "type": "string"
                              },
                              "meeting_path": {
                                "type": "string",
                                "description": "This value is available only for Scheduled Webex meetings."
                              },
                              "meeting_mtid": {
                                "type": "string",
                                "description": "This value is available only for Scheduled Webex meetings."
                              },
                              "meeting_personal_room_id": {
                                "type": "string",
                                "description": "This value is available only for Personal room Webex meetings."
                              }
                            },
                            "required": [
                              "meeting_subdomain"
                            ]
                          }
                        ],
                        "readOnly": true
                      },
                      "bot_id": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "readOnly": true
                      },
                      "is_external": {
                        "type": "boolean",
                        "readOnly": true
                      },
                      "is_hosted_by_me": {
                        "type": "boolean",
                        "readOnly": true
                      },
                      "is_recurring": {
                        "type": "boolean",
                        "readOnly": true
                      },
                      "organizer_email": {
                        "type": "string",
                        "readOnly": true
                      },
                      "attendee_emails": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "readOnly": true
                      },
                      "attendees": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "additionalProperties": {}
                        },
                        "readOnly": true
                      },
                      "ical_uid": {
                        "type": "string",
                        "readOnly": true
                      }
                    },
                    "required": [
                      "attendee_emails",
                      "attendees",
                      "bot_id",
                      "calendar_platform",
                      "end_time",
                      "ical_uid",
                      "id",
                      "is_external",
                      "is_hosted_by_me",
                      "is_recurring",
                      "meet_invite",
                      "meeting_platform",
                      "organizer_email",
                      "platform",
                      "start_time",
                      "teams_invite",
                      "title",
                      "webex_invite",
                      "will_record",
                      "will_record_reason",
                      "zoom_invite"
                    ]
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v1/calendar/user/": {
      "get": {
        "operationId": "calendar_user_retrieve",
        "summary": "Get Calendar User",
        "tags": [
          "calendar-v1"
        ],
        "security": [
          {
            "CalendarJwtAuthentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "readOnly": true
                    },
                    "external_id": {
                      "type": "string"
                    },
                    "connections": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "connected": {
                            "type": "boolean"
                          },
                          "platform": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "connected",
                          "platform"
                        ]
                      },
                      "readOnly": true
                    },
                    "preferences": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "readOnly": true
                        },
                        "record_non_host": {
                          "type": "boolean"
                        },
                        "record_recurring": {
                          "type": "boolean"
                        },
                        "record_external": {
                          "type": "boolean"
                        },
                        "record_internal": {
                          "type": "boolean"
                        },
                        "record_confirmed": {
                          "type": "boolean"
                        },
                        "record_only_host": {
                          "type": "boolean"
                        },
                        "bot_name": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "required": [
                    "connections",
                    "id"
                  ]
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "calendar_user_update",
        "description": "Update the recording preferences for a calendar user. This endpoint is rate limited to 10 requests per user per minute.",
        "summary": "Update Recording Preferences",
        "tags": [
          "calendar-v1"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                  },
                  "external_id": {
                    "type": "string"
                  },
                  "connections": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "connected": {
                          "type": "boolean"
                        },
                        "platform": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "connected",
                        "platform"
                      ]
                    },
                    "readOnly": true
                  },
                  "preferences": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                      },
                      "record_non_host": {
                        "type": "boolean"
                      },
                      "record_recurring": {
                        "type": "boolean"
                      },
                      "record_external": {
                        "type": "boolean"
                      },
                      "record_internal": {
                        "type": "boolean"
                      },
                      "record_confirmed": {
                        "type": "boolean"
                      },
                      "record_only_host": {
                        "type": "boolean"
                      },
                      "bot_name": {
                        "type": "string"
                      }
                    }
                  }
                },
                "required": [
                  "connections",
                  "id"
                ]
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                  },
                  "external_id": {
                    "type": "string"
                  },
                  "connections": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "connected": {
                          "type": "boolean"
                        },
                        "platform": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "connected",
                        "platform"
                      ]
                    },
                    "readOnly": true
                  },
                  "preferences": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                      },
                      "record_non_host": {
                        "type": "boolean"
                      },
                      "record_recurring": {
                        "type": "boolean"
                      },
                      "record_external": {
                        "type": "boolean"
                      },
                      "record_internal": {
                        "type": "boolean"
                      },
                      "record_confirmed": {
                        "type": "boolean"
                      },
                      "record_only_host": {
                        "type": "boolean"
                      },
                      "bot_name": {
                        "type": "string"
                      }
                    }
                  }
                },
                "required": [
                  "connections",
                  "id"
                ]
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                  },
                  "external_id": {
                    "type": "string"
                  },
                  "connections": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "connected": {
                          "type": "boolean"
                        },
                        "platform": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "connected",
                        "platform"
                      ]
                    },
                    "readOnly": true
                  },
                  "preferences": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                      },
                      "record_non_host": {
                        "type": "boolean"
                      },
                      "record_recurring": {
                        "type": "boolean"
                      },
                      "record_external": {
                        "type": "boolean"
                      },
                      "record_internal": {
                        "type": "boolean"
                      },
                      "record_confirmed": {
                        "type": "boolean"
                      },
                      "record_only_host": {
                        "type": "boolean"
                      },
                      "bot_name": {
                        "type": "string"
                      }
                    }
                  }
                },
                "required": [
                  "connections",
                  "id"
                ]
              }
            }
          }
        },
        "security": [
          {
            "CalendarJwtAuthentication": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "readOnly": true
                    },
                    "external_id": {
                      "type": "string"
                    },
                    "connections": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "connected": {
                            "type": "boolean"
                          },
                          "platform": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "connected",
                          "platform"
                        ]
                      },
                      "readOnly": true
                    },
                    "preferences": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "readOnly": true
                        },
                        "record_non_host": {
                          "type": "boolean"
                        },
                        "record_recurring": {
                          "type": "boolean"
                        },
                        "record_external": {
                          "type": "boolean"
                        },
                        "record_internal": {
                          "type": "boolean"
                        },
                        "record_confirmed": {
                          "type": "boolean"
                        },
                        "record_only_host": {
                          "type": "boolean"
                        },
                        "bot_name": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "required": [
                    "connections",
                    "id"
                  ]
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "calendar_user_destroy",
        "description": "Delete calendar user(+disconnect any connected calendars). This endpoint is rate limited to 10 requests per user per minute.",
        "summary": "Delete Calendar User",
        "tags": [
          "calendar-v1"
        ],
        "security": [
          {
            "CalendarJwtAuthentication": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          }
        }
      }
    },
    "/api/v1/calendar/users/": {
      "get": {
        "operationId": "calendar_users_list",
        "description": "List all calendar users created for the account.",
        "summary": "List Calendar Users",
        "tags": [
          "calendar-v1"
        ],
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                      },
                      "external_id": {
                        "type": "string"
                      },
                      "connections": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "connected": {
                              "type": "boolean"
                            },
                            "platform": {
                              "type": "string"
                            },
                            "email": {
                              "type": "string"
                            },
                            "id": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "connected",
                            "platform"
                          ]
                        },
                        "readOnly": true
                      },
                      "preferences": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "readOnly": true
                          },
                          "record_non_host": {
                            "type": "boolean"
                          },
                          "record_recurring": {
                            "type": "boolean"
                          },
                          "record_external": {
                            "type": "boolean"
                          },
                          "record_internal": {
                            "type": "boolean"
                          },
                          "record_confirmed": {
                            "type": "boolean"
                          },
                          "record_only_host": {
                            "type": "boolean"
                          },
                          "bot_name": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "required": [
                      "connections",
                      "id"
                    ]
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v1/clips/": {
      "get": {
        "operationId": "clips_list",
        "description": "Get a list of all clips.",
        "summary": "(BETA) List Clips",
        "parameters": [
          {
            "in": "query",
            "name": "created_at_after",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "in": "query",
            "name": "created_at_before",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "cursor",
            "required": false,
            "in": "query",
            "description": "The pagination cursor value.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "clips"
        ],
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next": {
                      "type": "string",
                      "nullable": true
                    },
                    "previous": {
                      "type": "string",
                      "nullable": true
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "bot_id": {
                            "type": "string",
                            "format": "uuid",
                            "writeOnly": true
                          },
                          "start_timestamp": {
                            "type": "number",
                            "format": "double",
                            "minimum": 0,
                            "writeOnly": true
                          },
                          "end_timestamp": {
                            "type": "number",
                            "format": "double",
                            "minimum": 0,
                            "writeOnly": true
                          },
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "readOnly": true
                          },
                          "video_url": {
                            "type": "string",
                            "readOnly": true
                          },
                          "image_url": {
                            "type": "string",
                            "readOnly": true
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time"
                          }
                        },
                        "required": [
                          "bot_id",
                          "end_timestamp",
                          "id",
                          "image_url",
                          "start_timestamp",
                          "video_url"
                        ]
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "clips_create",
        "description": "Create a clip.",
        "summary": "(BETA) Create Clip",
        "tags": [
          "clips"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "bot_id": {
                    "type": "string",
                    "format": "uuid",
                    "writeOnly": true
                  },
                  "start_timestamp": {
                    "type": "number",
                    "format": "double",
                    "minimum": 0,
                    "writeOnly": true
                  },
                  "end_timestamp": {
                    "type": "number",
                    "format": "double",
                    "minimum": 0,
                    "writeOnly": true
                  },
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                  },
                  "video_url": {
                    "type": "string",
                    "readOnly": true
                  },
                  "image_url": {
                    "type": "string",
                    "readOnly": true
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  }
                },
                "required": [
                  "bot_id",
                  "end_timestamp",
                  "id",
                  "image_url",
                  "start_timestamp",
                  "video_url"
                ]
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "bot_id": {
                    "type": "string",
                    "format": "uuid",
                    "writeOnly": true
                  },
                  "start_timestamp": {
                    "type": "number",
                    "format": "double",
                    "minimum": 0,
                    "writeOnly": true
                  },
                  "end_timestamp": {
                    "type": "number",
                    "format": "double",
                    "minimum": 0,
                    "writeOnly": true
                  },
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                  },
                  "video_url": {
                    "type": "string",
                    "readOnly": true
                  },
                  "image_url": {
                    "type": "string",
                    "readOnly": true
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  }
                },
                "required": [
                  "bot_id",
                  "end_timestamp",
                  "id",
                  "image_url",
                  "start_timestamp",
                  "video_url"
                ]
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "bot_id": {
                    "type": "string",
                    "format": "uuid",
                    "writeOnly": true
                  },
                  "start_timestamp": {
                    "type": "number",
                    "format": "double",
                    "minimum": 0,
                    "writeOnly": true
                  },
                  "end_timestamp": {
                    "type": "number",
                    "format": "double",
                    "minimum": 0,
                    "writeOnly": true
                  },
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                  },
                  "video_url": {
                    "type": "string",
                    "readOnly": true
                  },
                  "image_url": {
                    "type": "string",
                    "readOnly": true
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  }
                },
                "required": [
                  "bot_id",
                  "end_timestamp",
                  "id",
                  "image_url",
                  "start_timestamp",
                  "video_url"
                ]
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "bot_id": {
                      "type": "string",
                      "format": "uuid",
                      "writeOnly": true
                    },
                    "start_timestamp": {
                      "type": "number",
                      "format": "double",
                      "minimum": 0,
                      "writeOnly": true
                    },
                    "end_timestamp": {
                      "type": "number",
                      "format": "double",
                      "minimum": 0,
                      "writeOnly": true
                    },
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "readOnly": true
                    },
                    "video_url": {
                      "type": "string",
                      "readOnly": true
                    },
                    "image_url": {
                      "type": "string",
                      "readOnly": true
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    }
                  },
                  "required": [
                    "bot_id",
                    "end_timestamp",
                    "id",
                    "image_url",
                    "start_timestamp",
                    "video_url"
                  ]
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v1/clips/{id}/": {
      "get": {
        "operationId": "clips_retrieve",
        "description": "Get a clip.",
        "summary": "(BETA) Retrieve Clip",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "A UUID string identifying this clip.",
            "required": true
          }
        ],
        "tags": [
          "clips"
        ],
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "bot_id": {
                      "type": "string",
                      "format": "uuid",
                      "writeOnly": true
                    },
                    "start_timestamp": {
                      "type": "number",
                      "format": "double",
                      "minimum": 0,
                      "writeOnly": true
                    },
                    "end_timestamp": {
                      "type": "number",
                      "format": "double",
                      "minimum": 0,
                      "writeOnly": true
                    },
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "readOnly": true
                    },
                    "video_url": {
                      "type": "string",
                      "readOnly": true
                    },
                    "image_url": {
                      "type": "string",
                      "readOnly": true
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    }
                  },
                  "required": [
                    "bot_id",
                    "end_timestamp",
                    "id",
                    "image_url",
                    "start_timestamp",
                    "video_url"
                  ]
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v1/clips/{id}/status/": {
      "get": {
        "operationId": "clips_status_list",
        "description": "Get the current status of the clip",
        "summary": "Get Clip Status",
        "parameters": [
          {
            "in": "query",
            "name": "created_at_after",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "in": "query",
            "name": "created_at_before",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "cursor",
            "required": false,
            "in": "query",
            "description": "The pagination cursor value.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "A UUID string identifying this clip.",
            "required": true
          }
        ],
        "tags": [
          "clips"
        ],
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next": {
                      "type": "string",
                      "nullable": true
                    },
                    "previous": {
                      "type": "string",
                      "nullable": true
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "enum": [
                              "submitted",
                              "progressing",
                              "complete",
                              "canceled",
                              "error"
                            ],
                            "type": "string"
                          }
                        },
                        "required": [
                          "status"
                        ]
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v2/calendar-accounts/{uuid}/": {
      "get": {
        "operationId": "calendar_accounts_retrieve",
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "calendar-accounts"
        ],
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "readOnly": true
                    },
                    "platform": {
                      "type": "string",
                      "readOnly": true
                    },
                    "email": {
                      "type": "string",
                      "format": "email",
                      "readOnly": true
                    }
                  },
                  "required": [
                    "email",
                    "id",
                    "platform"
                  ]
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v2/calendar-accounts/{uuid}/access_token/": {
      "get": {
        "operationId": "calendar_accounts_access_token_retrieve",
        "description": "Get the OAuth access token for this calendar account.",
        "summary": "Get Access Token",
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "calendar-accounts"
        ],
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "access_token": {
                      "type": "string",
                      "readOnly": true
                    }
                  },
                  "required": [
                    "access_token"
                  ]
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "enum": [
                        "no_oauth_credentials",
                        "bad_refresh_token",
                        "error"
                      ],
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v2/calendar-events/": {
      "get": {
        "operationId": "calendar_events_list",
        "description": "Get a list of calendar events",
        "summary": "List Calendar Events",
        "parameters": [
          {
            "in": "query",
            "name": "calendar_id",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "cursor",
            "required": false,
            "in": "query",
            "description": "The pagination cursor value.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "ical_uid",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "start_time",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "in": "query",
            "name": "start_time__gte",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "in": "query",
            "name": "start_time__lte",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "in": "query",
            "name": "updated_at__gte",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "tags": [
          "calendar-v2"
        ],
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next": {
                      "type": "string",
                      "nullable": true
                    },
                    "previous": {
                      "type": "string",
                      "nullable": true
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "readOnly": true
                          },
                          "start_time": {
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          },
                          "end_time": {
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          },
                          "calendar_id": {
                            "type": "string",
                            "format": "uuid",
                            "readOnly": true
                          },
                          "raw": {
                            "type": "object",
                            "additionalProperties": {},
                            "readOnly": true
                          },
                          "platform": {
                            "type": "string",
                            "readOnly": true
                          },
                          "platform_id": {
                            "type": "string",
                            "readOnly": true
                          },
                          "ical_uid": {
                            "type": "string",
                            "readOnly": true
                          },
                          "meeting_platform": {
                            "readOnly": true,
                            "nullable": true,
                            "oneOf": [
                              {
                                "enum": [
                                  "zoom",
                                  "google_meet",
                                  "microsoft_teams",
                                  "webex"
                                ],
                                "type": "string"
                              },
                              {
                                "enum": [
                                  null
                                ]
                              }
                            ]
                          },
                          "meeting_url": {
                            "type": "string",
                            "readOnly": true,
                            "nullable": true
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          },
                          "updated_at": {
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          },
                          "is_deleted": {
                            "type": "boolean",
                            "readOnly": true
                          }
                        },
                        "required": [
                          "calendar_id",
                          "created_at",
                          "end_time",
                          "ical_uid",
                          "id",
                          "is_deleted",
                          "meeting_platform",
                          "meeting_url",
                          "platform",
                          "platform_id",
                          "raw",
                          "start_time",
                          "updated_at"
                        ]
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v2/calendar-events/{id}/": {
      "get": {
        "operationId": "calendar_events_retrieve",
        "description": "Get a calendar event instance.",
        "summary": "Retrieve Calendar Event",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "A UUID string identifying this calendar event.",
            "required": true
          }
        ],
        "tags": [
          "calendar-v2"
        ],
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "readOnly": true
                    },
                    "start_time": {
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "end_time": {
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "calendar_id": {
                      "type": "string",
                      "format": "uuid",
                      "readOnly": true
                    },
                    "raw": {
                      "type": "object",
                      "additionalProperties": {},
                      "readOnly": true
                    },
                    "platform": {
                      "type": "string",
                      "readOnly": true
                    },
                    "platform_id": {
                      "type": "string",
                      "readOnly": true
                    },
                    "ical_uid": {
                      "type": "string",
                      "readOnly": true
                    },
                    "meeting_platform": {
                      "readOnly": true,
                      "nullable": true,
                      "oneOf": [
                        {
                          "enum": [
                            "zoom",
                            "google_meet",
                            "microsoft_teams",
                            "webex"
                          ],
                          "type": "string"
                        },
                        {
                          "enum": [
                            null
                          ]
                        }
                      ]
                    },
                    "meeting_url": {
                      "type": "string",
                      "readOnly": true,
                      "nullable": true
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "is_deleted": {
                      "type": "boolean",
                      "readOnly": true
                    }
                  },
                  "required": [
                    "calendar_id",
                    "created_at",
                    "end_time",
                    "ical_uid",
                    "id",
                    "is_deleted",
                    "meeting_platform",
                    "meeting_url",
                    "platform",
                    "platform_id",
                    "raw",
                    "start_time",
                    "updated_at"
                  ]
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v2/calendars/": {
      "get": {
        "operationId": "calendars_list",
        "description": "Get a list of calendars",
        "summary": "List Calendars",
        "parameters": [
          {
            "in": "query",
            "name": "created_at__gte",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "cursor",
            "required": false,
            "in": "query",
            "description": "The pagination cursor value.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "platform",
            "schema": {
              "type": "string",
              "enum": [
                "google_calendar",
                "microsoft_outlook"
              ]
            }
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string",
              "enum": [
                "connected",
                "connecting",
                "disconnected"
              ]
            }
          }
        ],
        "tags": [
          "calendar-v2"
        ],
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next": {
                      "type": "string",
                      "nullable": true
                    },
                    "previous": {
                      "type": "string",
                      "nullable": true
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "readOnly": true
                          },
                          "oauth_client_id": {
                            "type": "string",
                            "maxLength": 2000
                          },
                          "oauth_client_secret": {
                            "type": "string",
                            "maxLength": 2000
                          },
                          "oauth_refresh_token": {
                            "type": "string",
                            "maxLength": 2000
                          },
                          "platform": {
                            "enum": [
                              "google_calendar",
                              "microsoft_outlook"
                            ],
                            "type": "string"
                          },
                          "webhook_url": {
                            "type": "string",
                            "format": "uri",
                            "maxLength": 2000
                          },
                          "oauth_email": {
                            "type": "string",
                            "readOnly": true,
                            "nullable": true
                          },
                          "platform_email": {
                            "type": "string",
                            "readOnly": true,
                            "nullable": true
                          },
                          "status": {
                            "type": "string",
                            "readOnly": true
                          },
                          "status_changes": {
                            "type": "object",
                            "additionalProperties": {},
                            "readOnly": true
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          },
                          "updated_at": {
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          }
                        },
                        "required": [
                          "created_at",
                          "id",
                          "oauth_client_id",
                          "oauth_client_secret",
                          "oauth_email",
                          "oauth_refresh_token",
                          "platform",
                          "platform_email",
                          "status",
                          "status_changes",
                          "updated_at",
                          "webhook_url"
                        ]
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "calendars_create",
        "description": "Create a new calendar.",
        "summary": "Create Calendar",
        "tags": [
          "calendar-v2"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                  },
                  "oauth_client_id": {
                    "type": "string",
                    "maxLength": 2000
                  },
                  "oauth_client_secret": {
                    "type": "string",
                    "maxLength": 2000
                  },
                  "oauth_refresh_token": {
                    "type": "string",
                    "maxLength": 2000
                  },
                  "platform": {
                    "enum": [
                      "google_calendar",
                      "microsoft_outlook"
                    ],
                    "type": "string"
                  },
                  "webhook_url": {
                    "type": "string",
                    "format": "uri",
                    "maxLength": 2000
                  },
                  "oauth_email": {
                    "type": "string",
                    "readOnly": true,
                    "nullable": true
                  },
                  "platform_email": {
                    "type": "string",
                    "readOnly": true,
                    "nullable": true
                  },
                  "status": {
                    "type": "string",
                    "readOnly": true
                  },
                  "status_changes": {
                    "type": "object",
                    "additionalProperties": {},
                    "readOnly": true
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                  }
                },
                "required": [
                  "created_at",
                  "id",
                  "oauth_client_id",
                  "oauth_client_secret",
                  "oauth_email",
                  "oauth_refresh_token",
                  "platform",
                  "platform_email",
                  "status",
                  "status_changes",
                  "updated_at",
                  "webhook_url"
                ]
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                  },
                  "oauth_client_id": {
                    "type": "string",
                    "maxLength": 2000
                  },
                  "oauth_client_secret": {
                    "type": "string",
                    "maxLength": 2000
                  },
                  "oauth_refresh_token": {
                    "type": "string",
                    "maxLength": 2000
                  },
                  "platform": {
                    "enum": [
                      "google_calendar",
                      "microsoft_outlook"
                    ],
                    "type": "string"
                  },
                  "webhook_url": {
                    "type": "string",
                    "format": "uri",
                    "maxLength": 2000
                  },
                  "oauth_email": {
                    "type": "string",
                    "readOnly": true,
                    "nullable": true
                  },
                  "platform_email": {
                    "type": "string",
                    "readOnly": true,
                    "nullable": true
                  },
                  "status": {
                    "type": "string",
                    "readOnly": true
                  },
                  "status_changes": {
                    "type": "object",
                    "additionalProperties": {},
                    "readOnly": true
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                  }
                },
                "required": [
                  "created_at",
                  "id",
                  "oauth_client_id",
                  "oauth_client_secret",
                  "oauth_email",
                  "oauth_refresh_token",
                  "platform",
                  "platform_email",
                  "status",
                  "status_changes",
                  "updated_at",
                  "webhook_url"
                ]
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                  },
                  "oauth_client_id": {
                    "type": "string",
                    "maxLength": 2000
                  },
                  "oauth_client_secret": {
                    "type": "string",
                    "maxLength": 2000
                  },
                  "oauth_refresh_token": {
                    "type": "string",
                    "maxLength": 2000
                  },
                  "platform": {
                    "enum": [
                      "google_calendar",
                      "microsoft_outlook"
                    ],
                    "type": "string"
                  },
                  "webhook_url": {
                    "type": "string",
                    "format": "uri",
                    "maxLength": 2000
                  },
                  "oauth_email": {
                    "type": "string",
                    "readOnly": true,
                    "nullable": true
                  },
                  "platform_email": {
                    "type": "string",
                    "readOnly": true,
                    "nullable": true
                  },
                  "status": {
                    "type": "string",
                    "readOnly": true
                  },
                  "status_changes": {
                    "type": "object",
                    "additionalProperties": {},
                    "readOnly": true
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                  }
                },
                "required": [
                  "created_at",
                  "id",
                  "oauth_client_id",
                  "oauth_client_secret",
                  "oauth_email",
                  "oauth_refresh_token",
                  "platform",
                  "platform_email",
                  "status",
                  "status_changes",
                  "updated_at",
                  "webhook_url"
                ]
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "readOnly": true
                    },
                    "oauth_client_id": {
                      "type": "string",
                      "maxLength": 2000
                    },
                    "oauth_client_secret": {
                      "type": "string",
                      "maxLength": 2000
                    },
                    "oauth_refresh_token": {
                      "type": "string",
                      "maxLength": 2000
                    },
                    "platform": {
                      "enum": [
                        "google_calendar",
                        "microsoft_outlook"
                      ],
                      "type": "string"
                    },
                    "webhook_url": {
                      "type": "string",
                      "format": "uri",
                      "maxLength": 2000
                    },
                    "oauth_email": {
                      "type": "string",
                      "readOnly": true,
                      "nullable": true
                    },
                    "platform_email": {
                      "type": "string",
                      "readOnly": true,
                      "nullable": true
                    },
                    "status": {
                      "type": "string",
                      "readOnly": true
                    },
                    "status_changes": {
                      "type": "object",
                      "additionalProperties": {},
                      "readOnly": true
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true
                    }
                  },
                  "required": [
                    "created_at",
                    "id",
                    "oauth_client_id",
                    "oauth_client_secret",
                    "oauth_email",
                    "oauth_refresh_token",
                    "platform",
                    "platform_email",
                    "status",
                    "status_changes",
                    "updated_at",
                    "webhook_url"
                  ]
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v2/calendars/{id}/": {
      "get": {
        "operationId": "calendars_retrieve",
        "description": "Get a calendar instance.",
        "summary": "Retrieve Calendar",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "A UUID string identifying this calendar.",
            "required": true
          }
        ],
        "tags": [
          "calendar-v2"
        ],
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "readOnly": true
                    },
                    "oauth_client_id": {
                      "type": "string",
                      "maxLength": 2000
                    },
                    "oauth_client_secret": {
                      "type": "string",
                      "maxLength": 2000
                    },
                    "oauth_refresh_token": {
                      "type": "string",
                      "maxLength": 2000
                    },
                    "platform": {
                      "enum": [
                        "google_calendar",
                        "microsoft_outlook"
                      ],
                      "type": "string"
                    },
                    "webhook_url": {
                      "type": "string",
                      "format": "uri",
                      "maxLength": 2000
                    },
                    "oauth_email": {
                      "type": "string",
                      "readOnly": true,
                      "nullable": true
                    },
                    "platform_email": {
                      "type": "string",
                      "readOnly": true,
                      "nullable": true
                    },
                    "status": {
                      "type": "string",
                      "readOnly": true
                    },
                    "status_changes": {
                      "type": "object",
                      "additionalProperties": {},
                      "readOnly": true
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true
                    }
                  },
                  "required": [
                    "created_at",
                    "id",
                    "oauth_client_id",
                    "oauth_client_secret",
                    "oauth_email",
                    "oauth_refresh_token",
                    "platform",
                    "platform_email",
                    "status",
                    "status_changes",
                    "updated_at",
                    "webhook_url"
                  ]
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "calendars_partial_update",
        "description": "Update an existing calendar.",
        "summary": "Update Calendar",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "A UUID string identifying this calendar.",
            "required": true
          }
        ],
        "tags": [
          "calendar-v2"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                  },
                  "oauth_client_id": {
                    "type": "string",
                    "maxLength": 2000
                  },
                  "oauth_client_secret": {
                    "type": "string",
                    "maxLength": 2000
                  },
                  "oauth_refresh_token": {
                    "type": "string",
                    "maxLength": 2000
                  },
                  "platform": {
                    "enum": [
                      "google_calendar",
                      "microsoft_outlook"
                    ],
                    "type": "string"
                  },
                  "webhook_url": {
                    "type": "string",
                    "format": "uri",
                    "maxLength": 2000
                  },
                  "oauth_email": {
                    "type": "string",
                    "readOnly": true,
                    "nullable": true
                  },
                  "platform_email": {
                    "type": "string",
                    "readOnly": true,
                    "nullable": true
                  },
                  "status": {
                    "type": "string",
                    "readOnly": true
                  },
                  "status_changes": {
                    "type": "object",
                    "additionalProperties": {},
                    "readOnly": true
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                  },
                  "oauth_client_id": {
                    "type": "string",
                    "maxLength": 2000
                  },
                  "oauth_client_secret": {
                    "type": "string",
                    "maxLength": 2000
                  },
                  "oauth_refresh_token": {
                    "type": "string",
                    "maxLength": 2000
                  },
                  "platform": {
                    "enum": [
                      "google_calendar",
                      "microsoft_outlook"
                    ],
                    "type": "string"
                  },
                  "webhook_url": {
                    "type": "string",
                    "format": "uri",
                    "maxLength": 2000
                  },
                  "oauth_email": {
                    "type": "string",
                    "readOnly": true,
                    "nullable": true
                  },
                  "platform_email": {
                    "type": "string",
                    "readOnly": true,
                    "nullable": true
                  },
                  "status": {
                    "type": "string",
                    "readOnly": true
                  },
                  "status_changes": {
                    "type": "object",
                    "additionalProperties": {},
                    "readOnly": true
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                  },
                  "oauth_client_id": {
                    "type": "string",
                    "maxLength": 2000
                  },
                  "oauth_client_secret": {
                    "type": "string",
                    "maxLength": 2000
                  },
                  "oauth_refresh_token": {
                    "type": "string",
                    "maxLength": 2000
                  },
                  "platform": {
                    "enum": [
                      "google_calendar",
                      "microsoft_outlook"
                    ],
                    "type": "string"
                  },
                  "webhook_url": {
                    "type": "string",
                    "format": "uri",
                    "maxLength": 2000
                  },
                  "oauth_email": {
                    "type": "string",
                    "readOnly": true,
                    "nullable": true
                  },
                  "platform_email": {
                    "type": "string",
                    "readOnly": true,
                    "nullable": true
                  },
                  "status": {
                    "type": "string",
                    "readOnly": true
                  },
                  "status_changes": {
                    "type": "object",
                    "additionalProperties": {},
                    "readOnly": true
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "readOnly": true
                    },
                    "oauth_client_id": {
                      "type": "string",
                      "maxLength": 2000
                    },
                    "oauth_client_secret": {
                      "type": "string",
                      "maxLength": 2000
                    },
                    "oauth_refresh_token": {
                      "type": "string",
                      "maxLength": 2000
                    },
                    "platform": {
                      "enum": [
                        "google_calendar",
                        "microsoft_outlook"
                      ],
                      "type": "string"
                    },
                    "webhook_url": {
                      "type": "string",
                      "format": "uri",
                      "maxLength": 2000
                    },
                    "oauth_email": {
                      "type": "string",
                      "readOnly": true,
                      "nullable": true
                    },
                    "platform_email": {
                      "type": "string",
                      "readOnly": true,
                      "nullable": true
                    },
                    "status": {
                      "type": "string",
                      "readOnly": true
                    },
                    "status_changes": {
                      "type": "object",
                      "additionalProperties": {},
                      "readOnly": true
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true
                    }
                  },
                  "required": [
                    "created_at",
                    "id",
                    "oauth_client_id",
                    "oauth_client_secret",
                    "oauth_email",
                    "oauth_refresh_token",
                    "platform",
                    "platform_email",
                    "status",
                    "status_changes",
                    "updated_at",
                    "webhook_url"
                  ]
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "calendars_destroy",
        "description": "Deletes a calendar. This will disconnect the calendar.",
        "summary": "Delete Calendar",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "A UUID string identifying this calendar.",
            "required": true
          }
        ],
        "tags": [
          "calendar-v2"
        ],
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          }
        }
      }
    },
    "/api/v2/recordings/{id}/": {
      "get": {
        "operationId": "recordings_retrieve",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "recordings"
        ],
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "readOnly": true
                    },
                    "outputs": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "readOnly": true
                          },
                          "type": {
                            "enum": [
                              "raw_audio_unmixed",
                              "mp4_video_unmixed",
                              "active_speaker_diarized_transcription_assemblyai",
                              "active_speaker_diarized_transcription_awstranscribe",
                              "active_speaker_diarized_transcription_deepgram",
                              "active_speaker_diarized_transcription_rev",
                              "active_speaker_diarized_transcription_symbl"
                            ],
                            "type": "string"
                          },
                          "metadata": {
                            "type": "object",
                            "additionalProperties": {}
                          },
                          "endpoints": {
                            "type": "string",
                            "readOnly": true
                          }
                        },
                        "required": [
                          "endpoints",
                          "id",
                          "type"
                        ]
                      }
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "expires_at": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    }
                  },
                  "required": [
                    "created_at",
                    "id",
                    "outputs"
                  ]
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v2beta/bot/{id}/analyze": {
      "post": {
        "operationId": "bot_analyze_create",
        "description": "Run analysis on bot media.",
        "summary": "Analyze Bot Media",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "bot"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "assemblyai_async_transcription": {
                    "type": "object",
                    "properties": {
                      "language": {
                        "type": "string"
                      },
                      "language_code": {
                        "type": "string",
                        "description": "Docs: https://www.assemblyai.com/docs/walkthroughs#specifying-a-language"
                      },
                      "speaker_labels": {
                        "type": "boolean",
                        "description": "Docs: https://www.assemblyai.com/docs/core-transcription#speaker-labels-speaker-diarization"
                      },
                      "word_boost": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Docs: https://www.assemblyai.com/docs/core-transcription#custom-vocabulary"
                      },
                      "boost_param": {
                        "type": "string",
                        "description": "Docs: https://www.assemblyai.com/docs/core-transcription#custom-vocabulary"
                      },
                      "custom_spelling": {
                        "type": "object",
                        "additionalProperties": {},
                        "description": "Docs: https://www.assemblyai.com/docs/core-transcription#custom-spelling"
                      },
                      "disfluencies": {
                        "type": "boolean",
                        "description": "Docs: https://www.assemblyai.com/docs/core-transcription#filler-words"
                      },
                      "language_detection": {
                        "type": "boolean",
                        "description": "Docs: https://www.assemblyai.com/docs/core-transcription#automatic-language-detection"
                      },
                      "punctuate": {
                        "type": "boolean",
                        "description": "Docs: https://www.assemblyai.com/docs/core-transcription#automatic-punctuation-and-casing"
                      },
                      "format_text": {
                        "type": "boolean",
                        "description": "Docs: https://www.assemblyai.com/docs/core-transcription#automatic-punctuation-and-casing"
                      },
                      "filter_profanity": {
                        "type": "boolean",
                        "description": "Docs: https://www.assemblyai.com/docs/core-transcription#profanity-filtering"
                      },
                      "redact_pii_policies": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Docs: https://www.assemblyai.com/docs/audio-intelligence#pii-redaction"
                      },
                      "auto_highlights": {
                        "type": "boolean",
                        "description": "Docs: https://www.assemblyai.com/docs/audio-intelligence#detect-important-phrases-and-words"
                      },
                      "content_safety": {
                        "type": "boolean",
                        "description": "Docs: https://www.assemblyai.com/docs/audio-intelligence#content-moderation"
                      },
                      "iab_categories": {
                        "type": "boolean",
                        "description": "Docs: https://www.assemblyai.com/docs/audio-intelligence#topic-detection-iab-classification"
                      },
                      "sentiment_analysis": {
                        "type": "boolean",
                        "description": "Docs: https://www.assemblyai.com/docs/audio-intelligence#sentiment-analysis"
                      },
                      "summarization": {
                        "type": "boolean",
                        "description": "Docs: https://www.assemblyai.com/docs/audio-intelligence#summarization"
                      },
                      "summary_model": {
                        "type": "string",
                        "description": "Docs: https://www.assemblyai.com/docs/audio-intelligence#summarization"
                      },
                      "summary_type": {
                        "type": "string",
                        "description": "Docs: https://www.assemblyai.com/docs/audio-intelligence#summarization"
                      },
                      "auto_chapters": {
                        "type": "boolean",
                        "description": "Docs: https://www.assemblyai.com/docs/audio-intelligence#auto-chapters"
                      },
                      "entity_detection": {
                        "type": "boolean",
                        "description": "Docs: https://www.assemblyai.com/docs/audio-intelligence#entity-detection"
                      }
                    }
                  },
                  "rev_async_transcription": {
                    "type": "object",
                    "properties": {
                      "detect_language": {
                        "type": "boolean"
                      },
                      "language": {
                        "type": "string",
                        "description": "Docs: https://docs.rev.ai/api/asynchronous/reference/#operation/SubmitTranscriptionJob!ct=application/json&path=language&t=request"
                      },
                      "skip_diarization": {
                        "type": "boolean",
                        "description": "('Docs: https://docs.rev.ai/api/asynchronous/reference/#operation/SubmitTranscriptionJob!ct=application/json&path=skip_diarization&t=request',)"
                      },
                      "skip_postprocessing": {
                        "type": "boolean",
                        "description": "('Docs: https://docs.rev.ai/api/asynchronous/reference/#operation/SubmitTranscriptionJob!ct=application/json&path=skip_postprocessing&t=request',)"
                      },
                      "skip_punctuation": {
                        "type": "boolean",
                        "description": "('Docs: https://docs.rev.ai/api/asynchronous/reference/#operation/SubmitTranscriptionJob!ct=application/json&path=skip_punctuation&t=request',)"
                      },
                      "remove_disfluencies": {
                        "type": "boolean",
                        "description": "('Docs: https://docs.rev.ai/api/asynchronous/reference/#operation/SubmitTranscriptionJob!ct=application/json&path=remove_disfluencies&t=request',)"
                      },
                      "remove_atmospherics": {
                        "type": "boolean",
                        "description": "('Docs: https://docs.rev.ai/api/asynchronous/reference/#operation/SubmitTranscriptionJob!ct=application/json&path=remove_atmospherics&t=request',)"
                      },
                      "filter_profanity": {
                        "type": "boolean",
                        "description": "('Docs: https://docs.rev.ai/api/asynchronous/reference/#operation/SubmitTranscriptionJob!ct=application/json&path=filter_profanity&t=request',)"
                      },
                      "custom_vocabulary_id": {
                        "type": "string",
                        "description": "('Docs: https://docs.rev.ai/api/asynchronous/reference/#operation/SubmitTranscriptionJob!ct=)application/json&path=custom_vocabulary_id&t=request',)"
                      },
                      "custom_vocabularies": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "('Docs: https://docs.rev.ai/api/asynchronous/reference/#operation/SubmitTranscriptionJob!ct=application/json&path=custom_vocabularies&t=request',)"
                      }
                    }
                  },
                  "deepgram_async_transcription": {
                    "type": "object",
                    "properties": {
                      "tier": {
                        "type": "string",
                        "description": "Docs: https://developers.deepgram.com/documentation/features/tier/"
                      },
                      "model": {
                        "type": "string",
                        "description": "Docs: https://developers.deepgram.com/documentation/features/model/"
                      },
                      "version": {
                        "type": "string",
                        "description": "Docs: https://developers.deepgram.com/documentation/features/version/"
                      },
                      "language": {
                        "type": "string",
                        "description": "Docs: https://developers.deepgram.com/documentation/features/language/"
                      },
                      "detect_language": {
                        "type": "boolean",
                        "description": "Docs: https://developers.deepgram.com/documentation/features/detect-language/"
                      },
                      "punctuate": {
                        "type": "boolean",
                        "description": "Docs: https://developers.deepgram.com/documentation/features/punctuate/"
                      },
                      "profanity_filter": {
                        "type": "boolean",
                        "description": "Docs: https://developers.deepgram.com/documentation/features/profanity-filter/"
                      },
                      "redact": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Docs: https://developers.deepgram.com/documentation/features/redact/"
                      },
                      "diarize": {
                        "type": "boolean",
                        "description": "Docs: https://developers.deepgram.com/documentation/features/diarize/"
                      },
                      "diarize_version": {
                        "type": "string",
                        "description": "Docs: https://developers.deepgram.com/documentation/features/diarize/"
                      },
                      "smart_format": {
                        "type": "boolean",
                        "description": "Docs: https://developers.deepgram.com/documentation/features/smart-format/"
                      },
                      "numerals": {
                        "type": "boolean",
                        "description": "Docs: https://developers.deepgram.com/documentation/features/numerals/"
                      },
                      "search": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Docs: https://developers.deepgram.com/documentation/features/search/"
                      },
                      "replace": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Docs: https://developers.deepgram.com/documentation/features/replace/"
                      },
                      "keywords": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Docs: https://developers.deepgram.com/documentation/features/keywords/"
                      },
                      "summarize": {
                        "type": "boolean",
                        "description": "Docs: https://developers.deepgram.com/documentation/features/summarize/"
                      },
                      "detect_topics": {
                        "type": "boolean",
                        "description": "Docs: https://developers.deepgram.com/documentation/features/detect-topics/"
                      },
                      "tag": {
                        "type": "boolean",
                        "description": "Docs: https://developers.deepgram.com/documentation/features/tag/"
                      }
                    }
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "assemblyai_async_transcription": {
                    "type": "object",
                    "properties": {
                      "language": {
                        "type": "string"
                      },
                      "language_code": {
                        "type": "string",
                        "description": "Docs: https://www.assemblyai.com/docs/walkthroughs#specifying-a-language"
                      },
                      "speaker_labels": {
                        "type": "boolean",
                        "description": "Docs: https://www.assemblyai.com/docs/core-transcription#speaker-labels-speaker-diarization"
                      },
                      "word_boost": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Docs: https://www.assemblyai.com/docs/core-transcription#custom-vocabulary"
                      },
                      "boost_param": {
                        "type": "string",
                        "description": "Docs: https://www.assemblyai.com/docs/core-transcription#custom-vocabulary"
                      },
                      "custom_spelling": {
                        "type": "object",
                        "additionalProperties": {},
                        "description": "Docs: https://www.assemblyai.com/docs/core-transcription#custom-spelling"
                      },
                      "disfluencies": {
                        "type": "boolean",
                        "description": "Docs: https://www.assemblyai.com/docs/core-transcription#filler-words"
                      },
                      "language_detection": {
                        "type": "boolean",
                        "description": "Docs: https://www.assemblyai.com/docs/core-transcription#automatic-language-detection"
                      },
                      "punctuate": {
                        "type": "boolean",
                        "description": "Docs: https://www.assemblyai.com/docs/core-transcription#automatic-punctuation-and-casing"
                      },
                      "format_text": {
                        "type": "boolean",
                        "description": "Docs: https://www.assemblyai.com/docs/core-transcription#automatic-punctuation-and-casing"
                      },
                      "filter_profanity": {
                        "type": "boolean",
                        "description": "Docs: https://www.assemblyai.com/docs/core-transcription#profanity-filtering"
                      },
                      "redact_pii_policies": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Docs: https://www.assemblyai.com/docs/audio-intelligence#pii-redaction"
                      },
                      "auto_highlights": {
                        "type": "boolean",
                        "description": "Docs: https://www.assemblyai.com/docs/audio-intelligence#detect-important-phrases-and-words"
                      },
                      "content_safety": {
                        "type": "boolean",
                        "description": "Docs: https://www.assemblyai.com/docs/audio-intelligence#content-moderation"
                      },
                      "iab_categories": {
                        "type": "boolean",
                        "description": "Docs: https://www.assemblyai.com/docs/audio-intelligence#topic-detection-iab-classification"
                      },
                      "sentiment_analysis": {
                        "type": "boolean",
                        "description": "Docs: https://www.assemblyai.com/docs/audio-intelligence#sentiment-analysis"
                      },
                      "summarization": {
                        "type": "boolean",
                        "description": "Docs: https://www.assemblyai.com/docs/audio-intelligence#summarization"
                      },
                      "summary_model": {
                        "type": "string",
                        "description": "Docs: https://www.assemblyai.com/docs/audio-intelligence#summarization"
                      },
                      "summary_type": {
                        "type": "string",
                        "description": "Docs: https://www.assemblyai.com/docs/audio-intelligence#summarization"
                      },
                      "auto_chapters": {
                        "type": "boolean",
                        "description": "Docs: https://www.assemblyai.com/docs/audio-intelligence#auto-chapters"
                      },
                      "entity_detection": {
                        "type": "boolean",
                        "description": "Docs: https://www.assemblyai.com/docs/audio-intelligence#entity-detection"
                      }
                    }
                  },
                  "rev_async_transcription": {
                    "type": "object",
                    "properties": {
                      "detect_language": {
                        "type": "boolean"
                      },
                      "language": {
                        "type": "string",
                        "description": "Docs: https://docs.rev.ai/api/asynchronous/reference/#operation/SubmitTranscriptionJob!ct=application/json&path=language&t=request"
                      },
                      "skip_diarization": {
                        "type": "boolean",
                        "description": "('Docs: https://docs.rev.ai/api/asynchronous/reference/#operation/SubmitTranscriptionJob!ct=application/json&path=skip_diarization&t=request',)"
                      },
                      "skip_postprocessing": {
                        "type": "boolean",
                        "description": "('Docs: https://docs.rev.ai/api/asynchronous/reference/#operation/SubmitTranscriptionJob!ct=application/json&path=skip_postprocessing&t=request',)"
                      },
                      "skip_punctuation": {
                        "type": "boolean",
                        "description": "('Docs: https://docs.rev.ai/api/asynchronous/reference/#operation/SubmitTranscriptionJob!ct=application/json&path=skip_punctuation&t=request',)"
                      },
                      "remove_disfluencies": {
                        "type": "boolean",
                        "description": "('Docs: https://docs.rev.ai/api/asynchronous/reference/#operation/SubmitTranscriptionJob!ct=application/json&path=remove_disfluencies&t=request',)"
                      },
                      "remove_atmospherics": {
                        "type": "boolean",
                        "description": "('Docs: https://docs.rev.ai/api/asynchronous/reference/#operation/SubmitTranscriptionJob!ct=application/json&path=remove_atmospherics&t=request',)"
                      },
                      "filter_profanity": {
                        "type": "boolean",
                        "description": "('Docs: https://docs.rev.ai/api/asynchronous/reference/#operation/SubmitTranscriptionJob!ct=application/json&path=filter_profanity&t=request',)"
                      },
                      "custom_vocabulary_id": {
                        "type": "string",
                        "description": "('Docs: https://docs.rev.ai/api/asynchronous/reference/#operation/SubmitTranscriptionJob!ct=)application/json&path=custom_vocabulary_id&t=request',)"
                      },
                      "custom_vocabularies": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "('Docs: https://docs.rev.ai/api/asynchronous/reference/#operation/SubmitTranscriptionJob!ct=application/json&path=custom_vocabularies&t=request',)"
                      }
                    }
                  },
                  "deepgram_async_transcription": {
                    "type": "object",
                    "properties": {
                      "tier": {
                        "type": "string",
                        "description": "Docs: https://developers.deepgram.com/documentation/features/tier/"
                      },
                      "model": {
                        "type": "string",
                        "description": "Docs: https://developers.deepgram.com/documentation/features/model/"
                      },
                      "version": {
                        "type": "string",
                        "description": "Docs: https://developers.deepgram.com/documentation/features/version/"
                      },
                      "language": {
                        "type": "string",
                        "description": "Docs: https://developers.deepgram.com/documentation/features/language/"
                      },
                      "detect_language": {
                        "type": "boolean",
                        "description": "Docs: https://developers.deepgram.com/documentation/features/detect-language/"
                      },
                      "punctuate": {
                        "type": "boolean",
                        "description": "Docs: https://developers.deepgram.com/documentation/features/punctuate/"
                      },
                      "profanity_filter": {
                        "type": "boolean",
                        "description": "Docs: https://developers.deepgram.com/documentation/features/profanity-filter/"
                      },
                      "redact": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Docs: https://developers.deepgram.com/documentation/features/redact/"
                      },
                      "diarize": {
                        "type": "boolean",
                        "description": "Docs: https://developers.deepgram.com/documentation/features/diarize/"
                      },
                      "diarize_version": {
                        "type": "string",
                        "description": "Docs: https://developers.deepgram.com/documentation/features/diarize/"
                      },
                      "smart_format": {
                        "type": "boolean",
                        "description": "Docs: https://developers.deepgram.com/documentation/features/smart-format/"
                      },
                      "numerals": {
                        "type": "boolean",
                        "description": "Docs: https://developers.deepgram.com/documentation/features/numerals/"
                      },
                      "search": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Docs: https://developers.deepgram.com/documentation/features/search/"
                      },
                      "replace": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Docs: https://developers.deepgram.com/documentation/features/replace/"
                      },
                      "keywords": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Docs: https://developers.deepgram.com/documentation/features/keywords/"
                      },
                      "summarize": {
                        "type": "boolean",
                        "description": "Docs: https://developers.deepgram.com/documentation/features/summarize/"
                      },
                      "detect_topics": {
                        "type": "boolean",
                        "description": "Docs: https://developers.deepgram.com/documentation/features/detect-topics/"
                      },
                      "tag": {
                        "type": "boolean",
                        "description": "Docs: https://developers.deepgram.com/documentation/features/tag/"
                      }
                    }
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "assemblyai_async_transcription": {
                    "type": "object",
                    "properties": {
                      "language": {
                        "type": "string"
                      },
                      "language_code": {
                        "type": "string",
                        "description": "Docs: https://www.assemblyai.com/docs/walkthroughs#specifying-a-language"
                      },
                      "speaker_labels": {
                        "type": "boolean",
                        "description": "Docs: https://www.assemblyai.com/docs/core-transcription#speaker-labels-speaker-diarization"
                      },
                      "word_boost": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Docs: https://www.assemblyai.com/docs/core-transcription#custom-vocabulary"
                      },
                      "boost_param": {
                        "type": "string",
                        "description": "Docs: https://www.assemblyai.com/docs/core-transcription#custom-vocabulary"
                      },
                      "custom_spelling": {
                        "type": "object",
                        "additionalProperties": {},
                        "description": "Docs: https://www.assemblyai.com/docs/core-transcription#custom-spelling"
                      },
                      "disfluencies": {
                        "type": "boolean",
                        "description": "Docs: https://www.assemblyai.com/docs/core-transcription#filler-words"
                      },
                      "language_detection": {
                        "type": "boolean",
                        "description": "Docs: https://www.assemblyai.com/docs/core-transcription#automatic-language-detection"
                      },
                      "punctuate": {
                        "type": "boolean",
                        "description": "Docs: https://www.assemblyai.com/docs/core-transcription#automatic-punctuation-and-casing"
                      },
                      "format_text": {
                        "type": "boolean",
                        "description": "Docs: https://www.assemblyai.com/docs/core-transcription#automatic-punctuation-and-casing"
                      },
                      "filter_profanity": {
                        "type": "boolean",
                        "description": "Docs: https://www.assemblyai.com/docs/core-transcription#profanity-filtering"
                      },
                      "redact_pii_policies": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Docs: https://www.assemblyai.com/docs/audio-intelligence#pii-redaction"
                      },
                      "auto_highlights": {
                        "type": "boolean",
                        "description": "Docs: https://www.assemblyai.com/docs/audio-intelligence#detect-important-phrases-and-words"
                      },
                      "content_safety": {
                        "type": "boolean",
                        "description": "Docs: https://www.assemblyai.com/docs/audio-intelligence#content-moderation"
                      },
                      "iab_categories": {
                        "type": "boolean",
                        "description": "Docs: https://www.assemblyai.com/docs/audio-intelligence#topic-detection-iab-classification"
                      },
                      "sentiment_analysis": {
                        "type": "boolean",
                        "description": "Docs: https://www.assemblyai.com/docs/audio-intelligence#sentiment-analysis"
                      },
                      "summarization": {
                        "type": "boolean",
                        "description": "Docs: https://www.assemblyai.com/docs/audio-intelligence#summarization"
                      },
                      "summary_model": {
                        "type": "string",
                        "description": "Docs: https://www.assemblyai.com/docs/audio-intelligence#summarization"
                      },
                      "summary_type": {
                        "type": "string",
                        "description": "Docs: https://www.assemblyai.com/docs/audio-intelligence#summarization"
                      },
                      "auto_chapters": {
                        "type": "boolean",
                        "description": "Docs: https://www.assemblyai.com/docs/audio-intelligence#auto-chapters"
                      },
                      "entity_detection": {
                        "type": "boolean",
                        "description": "Docs: https://www.assemblyai.com/docs/audio-intelligence#entity-detection"
                      }
                    }
                  },
                  "rev_async_transcription": {
                    "type": "object",
                    "properties": {
                      "detect_language": {
                        "type": "boolean"
                      },
                      "language": {
                        "type": "string",
                        "description": "Docs: https://docs.rev.ai/api/asynchronous/reference/#operation/SubmitTranscriptionJob!ct=application/json&path=language&t=request"
                      },
                      "skip_diarization": {
                        "type": "boolean",
                        "description": "('Docs: https://docs.rev.ai/api/asynchronous/reference/#operation/SubmitTranscriptionJob!ct=application/json&path=skip_diarization&t=request',)"
                      },
                      "skip_postprocessing": {
                        "type": "boolean",
                        "description": "('Docs: https://docs.rev.ai/api/asynchronous/reference/#operation/SubmitTranscriptionJob!ct=application/json&path=skip_postprocessing&t=request',)"
                      },
                      "skip_punctuation": {
                        "type": "boolean",
                        "description": "('Docs: https://docs.rev.ai/api/asynchronous/reference/#operation/SubmitTranscriptionJob!ct=application/json&path=skip_punctuation&t=request',)"
                      },
                      "remove_disfluencies": {
                        "type": "boolean",
                        "description": "('Docs: https://docs.rev.ai/api/asynchronous/reference/#operation/SubmitTranscriptionJob!ct=application/json&path=remove_disfluencies&t=request',)"
                      },
                      "remove_atmospherics": {
                        "type": "boolean",
                        "description": "('Docs: https://docs.rev.ai/api/asynchronous/reference/#operation/SubmitTranscriptionJob!ct=application/json&path=remove_atmospherics&t=request',)"
                      },
                      "filter_profanity": {
                        "type": "boolean",
                        "description": "('Docs: https://docs.rev.ai/api/asynchronous/reference/#operation/SubmitTranscriptionJob!ct=application/json&path=filter_profanity&t=request',)"
                      },
                      "custom_vocabulary_id": {
                        "type": "string",
                        "description": "('Docs: https://docs.rev.ai/api/asynchronous/reference/#operation/SubmitTranscriptionJob!ct=)application/json&path=custom_vocabulary_id&t=request',)"
                      },
                      "custom_vocabularies": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "('Docs: https://docs.rev.ai/api/asynchronous/reference/#operation/SubmitTranscriptionJob!ct=application/json&path=custom_vocabularies&t=request',)"
                      }
                    }
                  },
                  "deepgram_async_transcription": {
                    "type": "object",
                    "properties": {
                      "tier": {
                        "type": "string",
                        "description": "Docs: https://developers.deepgram.com/documentation/features/tier/"
                      },
                      "model": {
                        "type": "string",
                        "description": "Docs: https://developers.deepgram.com/documentation/features/model/"
                      },
                      "version": {
                        "type": "string",
                        "description": "Docs: https://developers.deepgram.com/documentation/features/version/"
                      },
                      "language": {
                        "type": "string",
                        "description": "Docs: https://developers.deepgram.com/documentation/features/language/"
                      },
                      "detect_language": {
                        "type": "boolean",
                        "description": "Docs: https://developers.deepgram.com/documentation/features/detect-language/"
                      },
                      "punctuate": {
                        "type": "boolean",
                        "description": "Docs: https://developers.deepgram.com/documentation/features/punctuate/"
                      },
                      "profanity_filter": {
                        "type": "boolean",
                        "description": "Docs: https://developers.deepgram.com/documentation/features/profanity-filter/"
                      },
                      "redact": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Docs: https://developers.deepgram.com/documentation/features/redact/"
                      },
                      "diarize": {
                        "type": "boolean",
                        "description": "Docs: https://developers.deepgram.com/documentation/features/diarize/"
                      },
                      "diarize_version": {
                        "type": "string",
                        "description": "Docs: https://developers.deepgram.com/documentation/features/diarize/"
                      },
                      "smart_format": {
                        "type": "boolean",
                        "description": "Docs: https://developers.deepgram.com/documentation/features/smart-format/"
                      },
                      "numerals": {
                        "type": "boolean",
                        "description": "Docs: https://developers.deepgram.com/documentation/features/numerals/"
                      },
                      "search": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Docs: https://developers.deepgram.com/documentation/features/search/"
                      },
                      "replace": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Docs: https://developers.deepgram.com/documentation/features/replace/"
                      },
                      "keywords": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Docs: https://developers.deepgram.com/documentation/features/keywords/"
                      },
                      "summarize": {
                        "type": "boolean",
                        "description": "Docs: https://developers.deepgram.com/documentation/features/summarize/"
                      },
                      "detect_topics": {
                        "type": "boolean",
                        "description": "Docs: https://developers.deepgram.com/documentation/features/detect-topics/"
                      },
                      "tag": {
                        "type": "boolean",
                        "description": "Docs: https://developers.deepgram.com/documentation/features/tag/"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "assemblyai_async_transcription": {
                      "type": "object",
                      "properties": {
                        "language": {
                          "type": "string"
                        },
                        "language_code": {
                          "type": "string",
                          "description": "Docs: https://www.assemblyai.com/docs/walkthroughs#specifying-a-language"
                        },
                        "speaker_labels": {
                          "type": "boolean",
                          "description": "Docs: https://www.assemblyai.com/docs/core-transcription#speaker-labels-speaker-diarization"
                        },
                        "word_boost": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Docs: https://www.assemblyai.com/docs/core-transcription#custom-vocabulary"
                        },
                        "boost_param": {
                          "type": "string",
                          "description": "Docs: https://www.assemblyai.com/docs/core-transcription#custom-vocabulary"
                        },
                        "custom_spelling": {
                          "type": "object",
                          "additionalProperties": {},
                          "description": "Docs: https://www.assemblyai.com/docs/core-transcription#custom-spelling"
                        },
                        "disfluencies": {
                          "type": "boolean",
                          "description": "Docs: https://www.assemblyai.com/docs/core-transcription#filler-words"
                        },
                        "language_detection": {
                          "type": "boolean",
                          "description": "Docs: https://www.assemblyai.com/docs/core-transcription#automatic-language-detection"
                        },
                        "punctuate": {
                          "type": "boolean",
                          "description": "Docs: https://www.assemblyai.com/docs/core-transcription#automatic-punctuation-and-casing"
                        },
                        "format_text": {
                          "type": "boolean",
                          "description": "Docs: https://www.assemblyai.com/docs/core-transcription#automatic-punctuation-and-casing"
                        },
                        "filter_profanity": {
                          "type": "boolean",
                          "description": "Docs: https://www.assemblyai.com/docs/core-transcription#profanity-filtering"
                        },
                        "redact_pii_policies": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Docs: https://www.assemblyai.com/docs/audio-intelligence#pii-redaction"
                        },
                        "auto_highlights": {
                          "type": "boolean",
                          "description": "Docs: https://www.assemblyai.com/docs/audio-intelligence#detect-important-phrases-and-words"
                        },
                        "content_safety": {
                          "type": "boolean",
                          "description": "Docs: https://www.assemblyai.com/docs/audio-intelligence#content-moderation"
                        },
                        "iab_categories": {
                          "type": "boolean",
                          "description": "Docs: https://www.assemblyai.com/docs/audio-intelligence#topic-detection-iab-classification"
                        },
                        "sentiment_analysis": {
                          "type": "boolean",
                          "description": "Docs: https://www.assemblyai.com/docs/audio-intelligence#sentiment-analysis"
                        },
                        "summarization": {
                          "type": "boolean",
                          "description": "Docs: https://www.assemblyai.com/docs/audio-intelligence#summarization"
                        },
                        "summary_model": {
                          "type": "string",
                          "description": "Docs: https://www.assemblyai.com/docs/audio-intelligence#summarization"
                        },
                        "summary_type": {
                          "type": "string",
                          "description": "Docs: https://www.assemblyai.com/docs/audio-intelligence#summarization"
                        },
                        "auto_chapters": {
                          "type": "boolean",
                          "description": "Docs: https://www.assemblyai.com/docs/audio-intelligence#auto-chapters"
                        },
                        "entity_detection": {
                          "type": "boolean",
                          "description": "Docs: https://www.assemblyai.com/docs/audio-intelligence#entity-detection"
                        }
                      }
                    },
                    "rev_async_transcription": {
                      "type": "object",
                      "properties": {
                        "detect_language": {
                          "type": "boolean"
                        },
                        "language": {
                          "type": "string",
                          "description": "Docs: https://docs.rev.ai/api/asynchronous/reference/#operation/SubmitTranscriptionJob!ct=application/json&path=language&t=request"
                        },
                        "skip_diarization": {
                          "type": "boolean",
                          "description": "('Docs: https://docs.rev.ai/api/asynchronous/reference/#operation/SubmitTranscriptionJob!ct=application/json&path=skip_diarization&t=request',)"
                        },
                        "skip_postprocessing": {
                          "type": "boolean",
                          "description": "('Docs: https://docs.rev.ai/api/asynchronous/reference/#operation/SubmitTranscriptionJob!ct=application/json&path=skip_postprocessing&t=request',)"
                        },
                        "skip_punctuation": {
                          "type": "boolean",
                          "description": "('Docs: https://docs.rev.ai/api/asynchronous/reference/#operation/SubmitTranscriptionJob!ct=application/json&path=skip_punctuation&t=request',)"
                        },
                        "remove_disfluencies": {
                          "type": "boolean",
                          "description": "('Docs: https://docs.rev.ai/api/asynchronous/reference/#operation/SubmitTranscriptionJob!ct=application/json&path=remove_disfluencies&t=request',)"
                        },
                        "remove_atmospherics": {
                          "type": "boolean",
                          "description": "('Docs: https://docs.rev.ai/api/asynchronous/reference/#operation/SubmitTranscriptionJob!ct=application/json&path=remove_atmospherics&t=request',)"
                        },
                        "filter_profanity": {
                          "type": "boolean",
                          "description": "('Docs: https://docs.rev.ai/api/asynchronous/reference/#operation/SubmitTranscriptionJob!ct=application/json&path=filter_profanity&t=request',)"
                        },
                        "custom_vocabulary_id": {
                          "type": "string",
                          "description": "('Docs: https://docs.rev.ai/api/asynchronous/reference/#operation/SubmitTranscriptionJob!ct=)application/json&path=custom_vocabulary_id&t=request',)"
                        },
                        "custom_vocabularies": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "('Docs: https://docs.rev.ai/api/asynchronous/reference/#operation/SubmitTranscriptionJob!ct=application/json&path=custom_vocabularies&t=request',)"
                        }
                      }
                    },
                    "deepgram_async_transcription": {
                      "type": "object",
                      "properties": {
                        "tier": {
                          "type": "string",
                          "description": "Docs: https://developers.deepgram.com/documentation/features/tier/"
                        },
                        "model": {
                          "type": "string",
                          "description": "Docs: https://developers.deepgram.com/documentation/features/model/"
                        },
                        "version": {
                          "type": "string",
                          "description": "Docs: https://developers.deepgram.com/documentation/features/version/"
                        },
                        "language": {
                          "type": "string",
                          "description": "Docs: https://developers.deepgram.com/documentation/features/language/"
                        },
                        "detect_language": {
                          "type": "boolean",
                          "description": "Docs: https://developers.deepgram.com/documentation/features/detect-language/"
                        },
                        "punctuate": {
                          "type": "boolean",
                          "description": "Docs: https://developers.deepgram.com/documentation/features/punctuate/"
                        },
                        "profanity_filter": {
                          "type": "boolean",
                          "description": "Docs: https://developers.deepgram.com/documentation/features/profanity-filter/"
                        },
                        "redact": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Docs: https://developers.deepgram.com/documentation/features/redact/"
                        },
                        "diarize": {
                          "type": "boolean",
                          "description": "Docs: https://developers.deepgram.com/documentation/features/diarize/"
                        },
                        "diarize_version": {
                          "type": "string",
                          "description": "Docs: https://developers.deepgram.com/documentation/features/diarize/"
                        },
                        "smart_format": {
                          "type": "boolean",
                          "description": "Docs: https://developers.deepgram.com/documentation/features/smart-format/"
                        },
                        "numerals": {
                          "type": "boolean",
                          "description": "Docs: https://developers.deepgram.com/documentation/features/numerals/"
                        },
                        "search": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Docs: https://developers.deepgram.com/documentation/features/search/"
                        },
                        "replace": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Docs: https://developers.deepgram.com/documentation/features/replace/"
                        },
                        "keywords": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Docs: https://developers.deepgram.com/documentation/features/keywords/"
                        },
                        "summarize": {
                          "type": "boolean",
                          "description": "Docs: https://developers.deepgram.com/documentation/features/summarize/"
                        },
                        "detect_topics": {
                          "type": "boolean",
                          "description": "Docs: https://developers.deepgram.com/documentation/features/detect-topics/"
                        },
                        "tag": {
                          "type": "boolean",
                          "description": "Docs: https://developers.deepgram.com/documentation/features/tag/"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AccessToken": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "access_token"
        ]
      },
      "AssemblyAiStreaming": {
        "type": "object",
        "properties": {
          "word_boost": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "AssemblyaiAsyncTranscription": {
        "type": "object",
        "properties": {
          "language": {
            "type": "string"
          },
          "language_code": {
            "type": "string",
            "description": "Docs: https://www.assemblyai.com/docs/walkthroughs#specifying-a-language"
          },
          "speaker_labels": {
            "type": "boolean",
            "description": "Docs: https://www.assemblyai.com/docs/core-transcription#speaker-labels-speaker-diarization"
          },
          "word_boost": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Docs: https://www.assemblyai.com/docs/core-transcription#custom-vocabulary"
          },
          "boost_param": {
            "type": "string",
            "description": "Docs: https://www.assemblyai.com/docs/core-transcription#custom-vocabulary"
          },
          "custom_spelling": {
            "type": "object",
            "additionalProperties": {},
            "description": "Docs: https://www.assemblyai.com/docs/core-transcription#custom-spelling"
          },
          "disfluencies": {
            "type": "boolean",
            "description": "Docs: https://www.assemblyai.com/docs/core-transcription#filler-words"
          },
          "language_detection": {
            "type": "boolean",
            "description": "Docs: https://www.assemblyai.com/docs/core-transcription#automatic-language-detection"
          },
          "punctuate": {
            "type": "boolean",
            "description": "Docs: https://www.assemblyai.com/docs/core-transcription#automatic-punctuation-and-casing"
          },
          "format_text": {
            "type": "boolean",
            "description": "Docs: https://www.assemblyai.com/docs/core-transcription#automatic-punctuation-and-casing"
          },
          "filter_profanity": {
            "type": "boolean",
            "description": "Docs: https://www.assemblyai.com/docs/core-transcription#profanity-filtering"
          },
          "redact_pii_policies": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Docs: https://www.assemblyai.com/docs/audio-intelligence#pii-redaction"
          },
          "auto_highlights": {
            "type": "boolean",
            "description": "Docs: https://www.assemblyai.com/docs/audio-intelligence#detect-important-phrases-and-words"
          },
          "content_safety": {
            "type": "boolean",
            "description": "Docs: https://www.assemblyai.com/docs/audio-intelligence#content-moderation"
          },
          "iab_categories": {
            "type": "boolean",
            "description": "Docs: https://www.assemblyai.com/docs/audio-intelligence#topic-detection-iab-classification"
          },
          "sentiment_analysis": {
            "type": "boolean",
            "description": "Docs: https://www.assemblyai.com/docs/audio-intelligence#sentiment-analysis"
          },
          "summarization": {
            "type": "boolean",
            "description": "Docs: https://www.assemblyai.com/docs/audio-intelligence#summarization"
          },
          "summary_model": {
            "type": "string",
            "description": "Docs: https://www.assemblyai.com/docs/audio-intelligence#summarization"
          },
          "summary_type": {
            "type": "string",
            "description": "Docs: https://www.assemblyai.com/docs/audio-intelligence#summarization"
          },
          "auto_chapters": {
            "type": "boolean",
            "description": "Docs: https://www.assemblyai.com/docs/audio-intelligence#auto-chapters"
          },
          "entity_detection": {
            "type": "boolean",
            "description": "Docs: https://www.assemblyai.com/docs/audio-intelligence#entity-detection"
          }
        }
      },
      "AudioOutput": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "kind": {
                "allOf": [
                  {
                    "enum": [
                      "mp3"
                    ],
                    "type": "string"
                  }
                ],
                "description": "The kind of data encoded in b64_data"
              },
              "b64_data": {
                "type": "string",
                "description": "Data encoded in Base64 format, using the standard alphabet (specified here: https://datatracker.ietf.org/doc/html/rfc4648#section-4)",
                "maxLength": 1835008
              }
            },
            "required": [
              "b64_data",
              "kind"
            ]
          },
          "replay_on_participant_join": {
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "debounce_interval": {
                    "type": "integer",
                    "description": "The amount of time to wait for additional participants to join before replaying the audio."
                  }
                },
                "required": [
                  "debounce_interval"
                ]
              }
            ],
            "description": "Specify this parameter if you want the audio to be replayed when additional participants join the call."
          }
        },
        "required": [
          "data"
        ]
      },
      "AudioOutputData": {
        "type": "object",
        "properties": {
          "kind": {
            "allOf": [
              {
                "enum": [
                  "mp3"
                ],
                "type": "string"
              }
            ],
            "description": "The kind of data encoded in b64_data"
          },
          "b64_data": {
            "type": "string",
            "description": "Data encoded in Base64 format, using the standard alphabet (specified here: https://datatracker.ietf.org/doc/html/rfc4648#section-4)",
            "maxLength": 1835008
          }
        },
        "required": [
          "b64_data",
          "kind"
        ]
      },
      "AudioOutputDataKindEnum": {
        "enum": [
          "mp3"
        ],
        "type": "string"
      },
      "AudioOutputReplay": {
        "type": "object",
        "properties": {
          "debounce_interval": {
            "type": "integer",
            "description": "The amount of time to wait for additional participants to join before replaying the audio."
          }
        },
        "required": [
          "debounce_interval"
        ]
      },
      "AutomaticAudioOutput": {
        "type": "object",
        "properties": {
          "in_call_recording": {
            "type": "object",
            "properties": {
              "data": {
                "type": "object",
                "properties": {
                  "kind": {
                    "allOf": [
                      {
                        "enum": [
                          "mp3"
                        ],
                        "type": "string"
                      }
                    ],
                    "description": "The kind of data encoded in b64_data"
                  },
                  "b64_data": {
                    "type": "string",
                    "description": "Data encoded in Base64 format, using the standard alphabet (specified here: https://datatracker.ietf.org/doc/html/rfc4648#section-4)",
                    "maxLength": 1835008
                  }
                },
                "required": [
                  "b64_data",
                  "kind"
                ]
              },
              "replay_on_participant_join": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "debounce_interval": {
                        "type": "integer",
                        "description": "The amount of time to wait for additional participants to join before replaying the audio."
                      }
                    },
                    "required": [
                      "debounce_interval"
                    ]
                  }
                ],
                "description": "Specify this parameter if you want the audio to be replayed when additional participants join the call."
              }
            },
            "required": [
              "data"
            ]
          }
        },
        "required": [
          "in_call_recording"
        ]
      },
      "AutomaticLeave": {
        "type": "object",
        "properties": {
          "waiting_room_timeout": {
            "type": "integer",
            "minimum": 30,
            "default": 1200,
            "description": "The number of seconds after which the bot will automatically leave the call, if it has not been let in from the waiting room."
          },
          "noone_joined_timeout": {
            "type": "integer",
            "minimum": 30,
            "default": 1200,
            "description": "(BETA) The number of seconds after which the bot will automatically leave the call, if it has joined the meeting but no other participant has joined."
          },
          "everyone_left_timeout": {
            "type": "integer",
            "minimum": 1,
            "default": 2,
            "description": "(BETA) The number of seconds after which the bot will automatically leave the call, if there were other participants in the call who have all left."
          }
        }
      },
      "AutomaticVideoOutput": {
        "type": "object",
        "properties": {
          "in_call_recording": {
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "kind": {
                    "allOf": [
                      {
                        "enum": [
                          "jpeg"
                        ],
                        "type": "string"
                      }
                    ],
                    "description": "The kind of data encoded in b64_data"
                  },
                  "b64_data": {
                    "type": "string",
                    "description": "Data encoded in Base64 format, using the standard alphabet (specified here: https://datatracker.ietf.org/doc/html/rfc4648#section-4)",
                    "maxLength": 1835008
                  }
                },
                "required": [
                  "b64_data",
                  "kind"
                ]
              }
            ],
            "description": "The video that will be automatically output when the bot is in the in_call_recording state"
          }
        },
        "required": [
          "in_call_recording"
        ]
      },
      "AwsTranscribeStreaming": {
        "type": "object",
        "properties": {
          "language_code": {
            "type": "string"
          },
          "content_redaction_type": {
            "type": "string"
          },
          "language_model_name": {
            "type": "string"
          },
          "language_options": {
            "type": "string"
          },
          "language_identification": {
            "type": "boolean"
          },
          "partial_results_stability": {
            "type": "string"
          },
          "pii_entity_types": {
            "type": "string"
          },
          "preferred_language": {
            "type": "string"
          },
          "show_speaker_label": {
            "type": "boolean"
          },
          "vocabulary_filter_method": {
            "type": "string"
          },
          "vocabulary_filter_names": {
            "type": "string"
          },
          "vocabulary_names": {
            "type": "string"
          }
        }
      },
      "Bot": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "video_url": {
            "type": "string",
            "format": "uri",
            "readOnly": true,
            "description": "A URL where the video recorded by the bot can be downloaded. This is null while the recording is in progress, and will be populated when the recording is completed. The returned URL is valid for 6 hours from the API call. A fresh URL can be obtained at any point by calling the API again."
          },
          "recording": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "media_retention_end": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "After this date the video and transcript will be deleted. This date is 7 days from when the recording ended."
          },
          "status_changes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "readOnly": true
                },
                "message": {
                  "type": "string",
                  "readOnly": true
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                },
                "sub_code": {
                  "type": "string",
                  "readOnly": true
                }
              },
              "required": [
                "code",
                "created_at",
                "message",
                "sub_code"
              ]
            },
            "readOnly": true
          },
          "meeting_metadata": {
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The title of the meeting the bot has joined."
                  }
                },
                "required": [
                  "title"
                ]
              }
            ],
            "readOnly": true,
            "nullable": true
          },
          "meeting_participants": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "readOnly": true
                },
                "events": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "readOnly": true
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                      }
                    },
                    "required": [
                      "code",
                      "created_at"
                    ]
                  },
                  "readOnly": true
                }
              },
              "required": [
                "events",
                "id",
                "name"
              ]
            },
            "readOnly": true
          },
          "meeting_url": {
            "type": "string",
            "nullable": true,
            "description": "The url of the meeting. For example, https://zoom.us/j/123?pwd=456. This field can only be read from scheduled bots that have not yet joined a call. Once a bot has joined a call, it's meeting_url will be cleared."
          },
          "bot_name": {
            "type": "string",
            "writeOnly": true,
            "default": "Meeting Notetaker",
            "description": "The name of the bot that will be displayed in the call.",
            "maxLength": 100
          },
          "join_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The time at which the bot will join the call, formatted in ISO 8601. This field can only be read from scheduled bots that have not yet joined a call. Once a bot has joined a call, it's join_at will be cleared."
          },
          "real_time_transcription": {
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "destination_url": {
                    "type": "string",
                    "format": "uri"
                  },
                  "partial_results": {
                    "type": "boolean",
                    "default": false
                  }
                },
                "required": [
                  "destination_url"
                ]
              }
            ],
            "writeOnly": true,
            "description": "The settings for real-time transcription."
          },
          "real_time_media": {
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "rtmp_destination_url": {
                    "type": "string"
                  },
                  "websocket_video_destination_url": {
                    "type": "string"
                  },
                  "websocket_audio_destination_url": {
                    "type": "string"
                  },
                  "websocket_speaker_timeline_destination_url": {
                    "type": "string"
                  },
                  "websocket_speaker_timeline_exclude_null_speaker": {
                    "type": "boolean",
                    "default": true,
                    "description": "Set to false to include null active speaker events in the speaker timeline websocket. Defaults to true."
                  },
                  "webhook_call_events_destination_url": {
                    "type": "string",
                    "description": "(BETA) Receive webhooks for in call events('bot.participant_join'/'bot.participant_leave'/'bot.active_speaker_notify')"
                  }
                }
              }
            ],
            "writeOnly": true,
            "description": "The settings for real-time media output."
          },
          "transcription_options": {
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "provider": {
                    "enum": [
                      "deepgram",
                      "assembly_ai",
                      "rev",
                      "aws_transcribe",
                      "symbl",
                      "none"
                    ],
                    "type": "string"
                  },
                  "assembly_ai": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "word_boost": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    ],
                    "title": "AssemblyAi Real-time Transcription Settings",
                    "description": "Docs: https://www.assemblyai.com/docs/walkthroughs#realtime-streaming-transcription"
                  },
                  "deepgram": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "tier": {
                            "type": "string"
                          },
                          "model": {
                            "type": "string"
                          },
                          "version": {
                            "type": "string"
                          },
                          "language": {
                            "type": "string"
                          },
                          "profanity_filter": {
                            "type": "boolean"
                          },
                          "redact": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "diarize": {
                            "type": "boolean"
                          },
                          "diarize_version": {
                            "type": "string"
                          },
                          "ner": {
                            "type": "boolean"
                          },
                          "alternatives": {
                            "type": "integer"
                          },
                          "numerals": {
                            "type": "boolean"
                          },
                          "search": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "replace": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "keywords": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "interim_results": {
                            "type": "boolean"
                          },
                          "endpointing": {
                            "type": "boolean"
                          }
                        }
                      }
                    ],
                    "title": "Deepgram Real-time Transcription Settings",
                    "description": "Docs: https://developers.deepgram.com/api-reference/transcription/#transcribe-live-streaming-audio"
                  },
                  "rev": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "language": {
                            "type": "string"
                          },
                          "metadata": {
                            "type": "string"
                          },
                          "custom_vocabulary_id": {
                            "type": "string",
                            "maxLength": 200
                          },
                          "filter_profanity": {
                            "type": "boolean"
                          },
                          "remove_disfluencies": {
                            "type": "boolean"
                          },
                          "delete_after_seconds": {
                            "type": "integer"
                          },
                          "detailed_partials": {
                            "type": "boolean"
                          },
                          "start_ts": {
                            "type": "number",
                            "format": "double"
                          },
                          "max_segment_duration_seconds": {
                            "type": "integer"
                          },
                          "transcriber": {
                            "type": "string"
                          },
                          "enable_speaker_switch": {
                            "type": "boolean"
                          },
                          "skip_postprocessing": {
                            "type": "boolean"
                          },
                          "priority": {
                            "type": "string"
                          }
                        }
                      }
                    ],
                    "title": "Rev Real-time Transcription Settings",
                    "description": "Docs: https://docs.rev.ai/api/streaming/requests/"
                  },
                  "aws_transcribe": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "language_code": {
                            "type": "string"
                          },
                          "content_redaction_type": {
                            "type": "string"
                          },
                          "language_model_name": {
                            "type": "string"
                          },
                          "language_options": {
                            "type": "string"
                          },
                          "language_identification": {
                            "type": "boolean"
                          },
                          "partial_results_stability": {
                            "type": "string"
                          },
                          "pii_entity_types": {
                            "type": "string"
                          },
                          "preferred_language": {
                            "type": "string"
                          },
                          "show_speaker_label": {
                            "type": "boolean"
                          },
                          "vocabulary_filter_method": {
                            "type": "string"
                          },
                          "vocabulary_filter_names": {
                            "type": "string"
                          },
                          "vocabulary_names": {
                            "type": "string"
                          }
                        }
                      }
                    ],
                    "title": "AWS Transcribe Real-time Transcription Settings",
                    "description": "Docs: https://docs.aws.amazon.com/transcribe/latest/APIReference/API_streaming_StartStreamTranscription.html"
                  }
                },
                "required": [
                  "provider"
                ]
              }
            ],
            "writeOnly": true
          },
          "chat": {
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "on_bot_join": {
                    "type": "object",
                    "properties": {
                      "send_to": {
                        "enum": [
                          "host",
                          "everyone",
                          "everyone_except_host"
                        ],
                        "type": "string"
                      },
                      "message": {
                        "type": "string",
                        "maxLength": 4096
                      }
                    },
                    "required": [
                      "message",
                      "send_to"
                    ]
                  },
                  "on_participant_join": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "maxLength": 4096
                      },
                      "exclude_host": {
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "exclude_host",
                      "message"
                    ]
                  }
                }
              }
            ],
            "writeOnly": true,
            "description": "(BETA) Settings for the bot to send chat messages."
          },
          "zoom": {
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "join_token_url": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URL which Recall will make a GET request to, in order to retrieve the Zoom Join Token for Local Recording, which the V2 Zoom bot uses to automatically record. This token can be generated through the Zoom API. Docs: https://marketplace.zoom.us/docs/api-reference/zoom-api/methods/#operation/meetingLocalRecordingJoinToken"
                  },
                  "zak_url": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URL which Recall will make  GET request to, in order to retrieve the ZAK. The V1 Zoom bot uses this to join meetings that require authentication to join.This token can be generated through the Zoom API. Docs: https://marketplace.zoom.us/docs/api-reference/zoom-api/methods/#operation/userZak"
                  }
                }
              }
            ],
            "writeOnly": true,
            "description": "Zoom specific parameters"
          },
          "google_meet": {
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "login_required": {
                    "type": "boolean",
                    "nullable": true,
                    "description": "Specify if the bot should always login to Google before joining the meeting. This value will override the default value set on bot's Google Meet login credentials on the account. When set to 'false', the bot will only login if required by the meeting."
                  }
                }
              }
            ],
            "writeOnly": true,
            "description": "Google Meet specific parameters"
          },
          "automatic_leave": {
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "waiting_room_timeout": {
                    "type": "integer",
                    "minimum": 30,
                    "default": 1200,
                    "description": "The number of seconds after which the bot will automatically leave the call, if it has not been let in from the waiting room."
                  },
                  "noone_joined_timeout": {
                    "type": "integer",
                    "minimum": 30,
                    "default": 1200,
                    "description": "(BETA) The number of seconds after which the bot will automatically leave the call, if it has joined the meeting but no other participant has joined."
                  },
                  "everyone_left_timeout": {
                    "type": "integer",
                    "minimum": 1,
                    "default": 2,
                    "description": "(BETA) The number of seconds after which the bot will automatically leave the call, if there were other participants in the call who have all left."
                  }
                }
              }
            ],
            "writeOnly": true
          },
          "automatic_video_output": {
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "in_call_recording": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "kind": {
                            "allOf": [
                              {
                                "enum": [
                                  "jpeg"
                                ],
                                "type": "string"
                              }
                            ],
                            "description": "The kind of data encoded in b64_data"
                          },
                          "b64_data": {
                            "type": "string",
                            "description": "Data encoded in Base64 format, using the standard alphabet (specified here: https://datatracker.ietf.org/doc/html/rfc4648#section-4)",
                            "maxLength": 1835008
                          }
                        },
                        "required": [
                          "b64_data",
                          "kind"
                        ]
                      }
                    ],
                    "description": "The video that will be automatically output when the bot is in the in_call_recording state"
                  }
                },
                "required": [
                  "in_call_recording"
                ]
              }
            ],
            "writeOnly": true,
            "description": "(BETA) Settings for the bot to output video."
          },
          "automatic_audio_output": {
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "in_call_recording": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "kind": {
                            "allOf": [
                              {
                                "enum": [
                                  "mp3"
                                ],
                                "type": "string"
                              }
                            ],
                            "description": "The kind of data encoded in b64_data"
                          },
                          "b64_data": {
                            "type": "string",
                            "description": "Data encoded in Base64 format, using the standard alphabet (specified here: https://datatracker.ietf.org/doc/html/rfc4648#section-4)",
                            "maxLength": 1835008
                          }
                        },
                        "required": [
                          "b64_data",
                          "kind"
                        ]
                      },
                      "replay_on_participant_join": {
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "debounce_interval": {
                                "type": "integer",
                                "description": "The amount of time to wait for additional participants to join before replaying the audio."
                              }
                            },
                            "required": [
                              "debounce_interval"
                            ]
                          }
                        ],
                        "description": "Specify this parameter if you want the audio to be replayed when additional participants join the call."
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                },
                "required": [
                  "in_call_recording"
                ]
              }
            ],
            "writeOnly": true,
            "description": "(BETA) Settings for the bot to output audio."
          },
          "calendar_meetings": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "readOnly": true
                },
                "start_time": {
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                },
                "end_time": {
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                },
                "calendar_user": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "readOnly": true
                        },
                        "external_id": {
                          "type": "string",
                          "readOnly": true
                        }
                      },
                      "required": [
                        "external_id",
                        "id"
                      ]
                    }
                  ],
                  "readOnly": true
                }
              },
              "required": [
                "calendar_user",
                "end_time",
                "id",
                "start_time"
              ]
            },
            "readOnly": true
          },
          "recording_mode": {
            "allOf": [
              {
                "enum": [
                  "speaker_view",
                  "gallery_view",
                  "gallery_view_v2"
                ],
                "type": "string"
              }
            ],
            "writeOnly": true,
            "default": "speaker_view",
            "description": "The layout of the output video."
          },
          "recording_mode_options": {
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "participant_video_when_screenshare": {
                    "allOf": [
                      {
                        "enum": [
                          "hide",
                          "beside",
                          "overlap"
                        ],
                        "type": "string"
                      }
                    ],
                    "description": "The layout of participant video streams when a screen is being shared. More docs: https://recallai.readme.io/reference/bot-faqs#5-what-do-the-recording-modes-look-like-when-specified-in-create-bot"
                  }
                },
                "required": [
                  "participant_video_when_screenshare"
                ]
              }
            ],
            "writeOnly": true,
            "description": "Additional options for the output video layout."
          }
        },
        "required": [
          "calendar_meetings",
          "id",
          "media_retention_end",
          "meeting_metadata",
          "meeting_participants",
          "meeting_url",
          "status_changes",
          "video_url"
        ]
      },
      "BotAnalysis": {
        "type": "object",
        "properties": {
          "assemblyai_async_transcription": {
            "type": "object",
            "properties": {
              "language": {
                "type": "string"
              },
              "language_code": {
                "type": "string",
                "description": "Docs: https://www.assemblyai.com/docs/walkthroughs#specifying-a-language"
              },
              "speaker_labels": {
                "type": "boolean",
                "description": "Docs: https://www.assemblyai.com/docs/core-transcription#speaker-labels-speaker-diarization"
              },
              "word_boost": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Docs: https://www.assemblyai.com/docs/core-transcription#custom-vocabulary"
              },
              "boost_param": {
                "type": "string",
                "description": "Docs: https://www.assemblyai.com/docs/core-transcription#custom-vocabulary"
              },
              "custom_spelling": {
                "type": "object",
                "additionalProperties": {},
                "description": "Docs: https://www.assemblyai.com/docs/core-transcription#custom-spelling"
              },
              "disfluencies": {
                "type": "boolean",
                "description": "Docs: https://www.assemblyai.com/docs/core-transcription#filler-words"
              },
              "language_detection": {
                "type": "boolean",
                "description": "Docs: https://www.assemblyai.com/docs/core-transcription#automatic-language-detection"
              },
              "punctuate": {
                "type": "boolean",
                "description": "Docs: https://www.assemblyai.com/docs/core-transcription#automatic-punctuation-and-casing"
              },
              "format_text": {
                "type": "boolean",
                "description": "Docs: https://www.assemblyai.com/docs/core-transcription#automatic-punctuation-and-casing"
              },
              "filter_profanity": {
                "type": "boolean",
                "description": "Docs: https://www.assemblyai.com/docs/core-transcription#profanity-filtering"
              },
              "redact_pii_policies": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Docs: https://www.assemblyai.com/docs/audio-intelligence#pii-redaction"
              },
              "auto_highlights": {
                "type": "boolean",
                "description": "Docs: https://www.assemblyai.com/docs/audio-intelligence#detect-important-phrases-and-words"
              },
              "content_safety": {
                "type": "boolean",
                "description": "Docs: https://www.assemblyai.com/docs/audio-intelligence#content-moderation"
              },
              "iab_categories": {
                "type": "boolean",
                "description": "Docs: https://www.assemblyai.com/docs/audio-intelligence#topic-detection-iab-classification"
              },
              "sentiment_analysis": {
                "type": "boolean",
                "description": "Docs: https://www.assemblyai.com/docs/audio-intelligence#sentiment-analysis"
              },
              "summarization": {
                "type": "boolean",
                "description": "Docs: https://www.assemblyai.com/docs/audio-intelligence#summarization"
              },
              "summary_model": {
                "type": "string",
                "description": "Docs: https://www.assemblyai.com/docs/audio-intelligence#summarization"
              },
              "summary_type": {
                "type": "string",
                "description": "Docs: https://www.assemblyai.com/docs/audio-intelligence#summarization"
              },
              "auto_chapters": {
                "type": "boolean",
                "description": "Docs: https://www.assemblyai.com/docs/audio-intelligence#auto-chapters"
              },
              "entity_detection": {
                "type": "boolean",
                "description": "Docs: https://www.assemblyai.com/docs/audio-intelligence#entity-detection"
              }
            }
          },
          "rev_async_transcription": {
            "type": "object",
            "properties": {
              "detect_language": {
                "type": "boolean"
              },
              "language": {
                "type": "string",
                "description": "Docs: https://docs.rev.ai/api/asynchronous/reference/#operation/SubmitTranscriptionJob!ct=application/json&path=language&t=request"
              },
              "skip_diarization": {
                "type": "boolean",
                "description": "('Docs: https://docs.rev.ai/api/asynchronous/reference/#operation/SubmitTranscriptionJob!ct=application/json&path=skip_diarization&t=request',)"
              },
              "skip_postprocessing": {
                "type": "boolean",
                "description": "('Docs: https://docs.rev.ai/api/asynchronous/reference/#operation/SubmitTranscriptionJob!ct=application/json&path=skip_postprocessing&t=request',)"
              },
              "skip_punctuation": {
                "type": "boolean",
                "description": "('Docs: https://docs.rev.ai/api/asynchronous/reference/#operation/SubmitTranscriptionJob!ct=application/json&path=skip_punctuation&t=request',)"
              },
              "remove_disfluencies": {
                "type": "boolean",
                "description": "('Docs: https://docs.rev.ai/api/asynchronous/reference/#operation/SubmitTranscriptionJob!ct=application/json&path=remove_disfluencies&t=request',)"
              },
              "remove_atmospherics": {
                "type": "boolean",
                "description": "('Docs: https://docs.rev.ai/api/asynchronous/reference/#operation/SubmitTranscriptionJob!ct=application/json&path=remove_atmospherics&t=request',)"
              },
              "filter_profanity": {
                "type": "boolean",
                "description": "('Docs: https://docs.rev.ai/api/asynchronous/reference/#operation/SubmitTranscriptionJob!ct=application/json&path=filter_profanity&t=request',)"
              },
              "custom_vocabulary_id": {
                "type": "string",
                "description": "('Docs: https://docs.rev.ai/api/asynchronous/reference/#operation/SubmitTranscriptionJob!ct=)application/json&path=custom_vocabulary_id&t=request',)"
              },
              "custom_vocabularies": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "('Docs: https://docs.rev.ai/api/asynchronous/reference/#operation/SubmitTranscriptionJob!ct=application/json&path=custom_vocabularies&t=request',)"
              }
            }
          },
          "deepgram_async_transcription": {
            "type": "object",
            "properties": {
              "tier": {
                "type": "string",
                "description": "Docs: https://developers.deepgram.com/documentation/features/tier/"
              },
              "model": {
                "type": "string",
                "description": "Docs: https://developers.deepgram.com/documentation/features/model/"
              },
              "version": {
                "type": "string",
                "description": "Docs: https://developers.deepgram.com/documentation/features/version/"
              },
              "language": {
                "type": "string",
                "description": "Docs: https://developers.deepgram.com/documentation/features/language/"
              },
              "detect_language": {
                "type": "boolean",
                "description": "Docs: https://developers.deepgram.com/documentation/features/detect-language/"
              },
              "punctuate": {
                "type": "boolean",
                "description": "Docs: https://developers.deepgram.com/documentation/features/punctuate/"
              },
              "profanity_filter": {
                "type": "boolean",
                "description": "Docs: https://developers.deepgram.com/documentation/features/profanity-filter/"
              },
              "redact": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Docs: https://developers.deepgram.com/documentation/features/redact/"
              },
              "diarize": {
                "type": "boolean",
                "description": "Docs: https://developers.deepgram.com/documentation/features/diarize/"
              },
              "diarize_version": {
                "type": "string",
                "description": "Docs: https://developers.deepgram.com/documentation/features/diarize/"
              },
              "smart_format": {
                "type": "boolean",
                "description": "Docs: https://developers.deepgram.com/documentation/features/smart-format/"
              },
              "numerals": {
                "type": "boolean",
                "description": "Docs: https://developers.deepgram.com/documentation/features/numerals/"
              },
              "search": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Docs: https://developers.deepgram.com/documentation/features/search/"
              },
              "replace": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Docs: https://developers.deepgram.com/documentation/features/replace/"
              },
              "keywords": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Docs: https://developers.deepgram.com/documentation/features/keywords/"
              },
              "summarize": {
                "type": "boolean",
                "description": "Docs: https://developers.deepgram.com/documentation/features/summarize/"
              },
              "detect_topics": {
                "type": "boolean",
                "description": "Docs: https://developers.deepgram.com/documentation/features/detect-topics/"
              },
              "tag": {
                "type": "boolean",
                "description": "Docs: https://developers.deepgram.com/documentation/features/tag/"
              }
            }
          }
        }
      },
      "BotCalendarMeeting": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "start_time": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "end_time": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "calendar_user": {
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                  },
                  "external_id": {
                    "type": "string",
                    "readOnly": true
                  }
                },
                "required": [
                  "external_id",
                  "id"
                ]
              }
            ],
            "readOnly": true
          }
        },
        "required": [
          "calendar_user",
          "end_time",
          "id",
          "start_time"
        ]
      },
      "BotCalendarUser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "external_id": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "external_id",
          "id"
        ]
      },
      "BotEvent": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "readOnly": true
          },
          "message": {
            "type": "string",
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "sub_code": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "code",
          "created_at",
          "message",
          "sub_code"
        ]
      },
      "BotScreenshot": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "recorded_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "format": "uri",
            "readOnly": true,
            "description": "A URL where the bot screenshot can be acccessed from."
          }
        },
        "required": [
          "id",
          "recorded_at",
          "url"
        ]
      },
      "Calendar": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "oauth_client_id": {
            "type": "string",
            "maxLength": 2000
          },
          "oauth_client_secret": {
            "type": "string",
            "maxLength": 2000
          },
          "oauth_refresh_token": {
            "type": "string",
            "maxLength": 2000
          },
          "platform": {
            "enum": [
              "google_calendar",
              "microsoft_outlook"
            ],
            "type": "string"
          },
          "webhook_url": {
            "type": "string",
            "format": "uri",
            "maxLength": 2000
          },
          "oauth_email": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "platform_email": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "status": {
            "type": "string",
            "readOnly": true
          },
          "status_changes": {
            "type": "object",
            "additionalProperties": {},
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "required": [
          "created_at",
          "id",
          "oauth_client_id",
          "oauth_client_secret",
          "oauth_email",
          "oauth_refresh_token",
          "platform",
          "platform_email",
          "status",
          "status_changes",
          "updated_at",
          "webhook_url"
        ]
      },
      "CalendarAccount": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "platform": {
            "type": "string",
            "readOnly": true
          },
          "email": {
            "type": "string",
            "format": "email",
            "readOnly": true
          }
        },
        "required": [
          "email",
          "id",
          "platform"
        ]
      },
      "CalendarAccountAccessTokenError": {
        "type": "object",
        "properties": {
          "code": {
            "enum": [
              "no_oauth_credentials",
              "bad_refresh_token",
              "error"
            ],
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "required": [
          "code",
          "message"
        ]
      },
      "CalendarAuthenticateRequest": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "string",
            "description": "The unique id of the user in your system."
          }
        },
        "required": [
          "user_id"
        ]
      },
      "CalendarAuthenticateResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "The authentication token for the user."
          }
        },
        "required": [
          "token"
        ]
      },
      "CalendarEvent": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "start_time": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "end_time": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "calendar_id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "raw": {
            "type": "object",
            "additionalProperties": {},
            "readOnly": true
          },
          "platform": {
            "type": "string",
            "readOnly": true
          },
          "platform_id": {
            "type": "string",
            "readOnly": true
          },
          "ical_uid": {
            "type": "string",
            "readOnly": true
          },
          "meeting_platform": {
            "readOnly": true,
            "nullable": true,
            "oneOf": [
              {
                "enum": [
                  "zoom",
                  "google_meet",
                  "microsoft_teams",
                  "webex"
                ],
                "type": "string"
              },
              {
                "enum": [
                  null
                ]
              }
            ]
          },
          "meeting_url": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "is_deleted": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "required": [
          "calendar_id",
          "created_at",
          "end_time",
          "ical_uid",
          "id",
          "is_deleted",
          "meeting_platform",
          "meeting_url",
          "platform",
          "platform_id",
          "raw",
          "start_time",
          "updated_at"
        ]
      },
      "CalendarMeeting": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "override_should_record": {
            "type": "boolean",
            "nullable": true
          },
          "title": {
            "type": "string",
            "readOnly": true
          },
          "will_record": {
            "type": "boolean",
            "readOnly": true
          },
          "will_record_reason": {
            "type": "string",
            "readOnly": true
          },
          "start_time": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "end_time": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "platform": {
            "type": "string",
            "readOnly": true
          },
          "meeting_platform": {
            "type": "string",
            "readOnly": true
          },
          "calendar_platform": {
            "type": "string",
            "readOnly": true
          },
          "zoom_invite": {
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "meeting_id": {
                    "type": "string"
                  },
                  "meeting_password": {
                    "type": "string"
                  }
                },
                "required": [
                  "meeting_id",
                  "meeting_password"
                ]
              }
            ],
            "readOnly": true
          },
          "teams_invite": {
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "organizer_id": {
                    "type": "string"
                  },
                  "tenant_id": {
                    "type": "string"
                  },
                  "message_id": {
                    "type": "string"
                  },
                  "thread_id": {
                    "type": "string"
                  }
                },
                "required": [
                  "message_id",
                  "organizer_id",
                  "tenant_id",
                  "thread_id"
                ]
              }
            ],
            "readOnly": true
          },
          "meet_invite": {
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "meeting_id": {
                    "type": "string"
                  }
                },
                "required": [
                  "meeting_id"
                ]
              }
            ],
            "readOnly": true
          },
          "webex_invite": {
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "meeting_subdomain": {
                    "type": "string"
                  },
                  "meeting_path": {
                    "type": "string",
                    "description": "This value is available only for Scheduled Webex meetings."
                  },
                  "meeting_mtid": {
                    "type": "string",
                    "description": "This value is available only for Scheduled Webex meetings."
                  },
                  "meeting_personal_room_id": {
                    "type": "string",
                    "description": "This value is available only for Personal room Webex meetings."
                  }
                },
                "required": [
                  "meeting_subdomain"
                ]
              }
            ],
            "readOnly": true
          },
          "bot_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "readOnly": true
          },
          "is_external": {
            "type": "boolean",
            "readOnly": true
          },
          "is_hosted_by_me": {
            "type": "boolean",
            "readOnly": true
          },
          "is_recurring": {
            "type": "boolean",
            "readOnly": true
          },
          "organizer_email": {
            "type": "string",
            "readOnly": true
          },
          "attendee_emails": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "readOnly": true
          },
          "attendees": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {}
            },
            "readOnly": true
          },
          "ical_uid": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "attendee_emails",
          "attendees",
          "bot_id",
          "calendar_platform",
          "end_time",
          "ical_uid",
          "id",
          "is_external",
          "is_hosted_by_me",
          "is_recurring",
          "meet_invite",
          "meeting_platform",
          "organizer_email",
          "platform",
          "start_time",
          "teams_invite",
          "title",
          "webex_invite",
          "will_record",
          "will_record_reason",
          "zoom_invite"
        ]
      },
      "CalendarUser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "external_id": {
            "type": "string"
          },
          "connections": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "connected": {
                  "type": "boolean"
                },
                "platform": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                }
              },
              "required": [
                "connected",
                "platform"
              ]
            },
            "readOnly": true
          },
          "preferences": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "readOnly": true
              },
              "record_non_host": {
                "type": "boolean"
              },
              "record_recurring": {
                "type": "boolean"
              },
              "record_external": {
                "type": "boolean"
              },
              "record_internal": {
                "type": "boolean"
              },
              "record_confirmed": {
                "type": "boolean"
              },
              "record_only_host": {
                "type": "boolean"
              },
              "bot_name": {
                "type": "string"
              }
            }
          }
        },
        "required": [
          "connections",
          "id"
        ]
      },
      "CalendarUserConnection": {
        "type": "object",
        "properties": {
          "connected": {
            "type": "boolean"
          },
          "platform": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        },
        "required": [
          "connected",
          "platform"
        ]
      },
      "Chat": {
        "type": "object",
        "properties": {
          "on_bot_join": {
            "type": "object",
            "properties": {
              "send_to": {
                "enum": [
                  "host",
                  "everyone",
                  "everyone_except_host"
                ],
                "type": "string"
              },
              "message": {
                "type": "string",
                "maxLength": 4096
              }
            },
            "required": [
              "message",
              "send_to"
            ]
          },
          "on_participant_join": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string",
                "maxLength": 4096
              },
              "exclude_host": {
                "type": "boolean"
              }
            },
            "required": [
              "exclude_host",
              "message"
            ]
          }
        }
      },
      "ChatOnBotJoin": {
        "type": "object",
        "properties": {
          "send_to": {
            "enum": [
              "host",
              "everyone",
              "everyone_except_host"
            ],
            "type": "string"
          },
          "message": {
            "type": "string",
            "maxLength": 4096
          }
        },
        "required": [
          "message",
          "send_to"
        ]
      },
      "ChatOnParticipantJoin": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "maxLength": 4096
          },
          "exclude_host": {
            "type": "boolean"
          }
        },
        "required": [
          "exclude_host",
          "message"
        ]
      },
      "Clip": {
        "type": "object",
        "properties": {
          "bot_id": {
            "type": "string",
            "format": "uuid",
            "writeOnly": true
          },
          "start_timestamp": {
            "type": "number",
            "format": "double",
            "minimum": 0,
            "writeOnly": true
          },
          "end_timestamp": {
            "type": "number",
            "format": "double",
            "minimum": 0,
            "writeOnly": true
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "video_url": {
            "type": "string",
            "readOnly": true
          },
          "image_url": {
            "type": "string",
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "bot_id",
          "end_timestamp",
          "id",
          "image_url",
          "start_timestamp",
          "video_url"
        ]
      },
      "ClipStatus": {
        "type": "object",
        "properties": {
          "status": {
            "enum": [
              "submitted",
              "progressing",
              "complete",
              "canceled",
              "error"
            ],
            "type": "string"
          }
        },
        "required": [
          "status"
        ]
      },
      "ClipStatusStatusEnum": {
        "enum": [
          "submitted",
          "progressing",
          "complete",
          "canceled",
          "error"
        ],
        "type": "string"
      },
      "CodeEnum": {
        "enum": [
          "no_oauth_credentials",
          "bad_refresh_token",
          "error"
        ],
        "type": "string"
      },
      "DeepgramAsyncTranscription": {
        "type": "object",
        "properties": {
          "tier": {
            "type": "string",
            "description": "Docs: https://developers.deepgram.com/documentation/features/tier/"
          },
          "model": {
            "type": "string",
            "description": "Docs: https://developers.deepgram.com/documentation/features/model/"
          },
          "version": {
            "type": "string",
            "description": "Docs: https://developers.deepgram.com/documentation/features/version/"
          },
          "language": {
            "type": "string",
            "description": "Docs: https://developers.deepgram.com/documentation/features/language/"
          },
          "detect_language": {
            "type": "boolean",
            "description": "Docs: https://developers.deepgram.com/documentation/features/detect-language/"
          },
          "punctuate": {
            "type": "boolean",
            "description": "Docs: https://developers.deepgram.com/documentation/features/punctuate/"
          },
          "profanity_filter": {
            "type": "boolean",
            "description": "Docs: https://developers.deepgram.com/documentation/features/profanity-filter/"
          },
          "redact": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Docs: https://developers.deepgram.com/documentation/features/redact/"
          },
          "diarize": {
            "type": "boolean",
            "description": "Docs: https://developers.deepgram.com/documentation/features/diarize/"
          },
          "diarize_version": {
            "type": "string",
            "description": "Docs: https://developers.deepgram.com/documentation/features/diarize/"
          },
          "smart_format": {
            "type": "boolean",
            "description": "Docs: https://developers.deepgram.com/documentation/features/smart-format/"
          },
          "numerals": {
            "type": "boolean",
            "description": "Docs: https://developers.deepgram.com/documentation/features/numerals/"
          },
          "search": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Docs: https://developers.deepgram.com/documentation/features/search/"
          },
          "replace": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Docs: https://developers.deepgram.com/documentation/features/replace/"
          },
          "keywords": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Docs: https://developers.deepgram.com/documentation/features/keywords/"
          },
          "summarize": {
            "type": "boolean",
            "description": "Docs: https://developers.deepgram.com/documentation/features/summarize/"
          },
          "detect_topics": {
            "type": "boolean",
            "description": "Docs: https://developers.deepgram.com/documentation/features/detect-topics/"
          },
          "tag": {
            "type": "boolean",
            "description": "Docs: https://developers.deepgram.com/documentation/features/tag/"
          }
        }
      },
      "DeepgramStreaming": {
        "type": "object",
        "properties": {
          "tier": {
            "type": "string"
          },
          "model": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "language": {
            "type": "string"
          },
          "profanity_filter": {
            "type": "boolean"
          },
          "redact": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "diarize": {
            "type": "boolean"
          },
          "diarize_version": {
            "type": "string"
          },
          "ner": {
            "type": "boolean"
          },
          "alternatives": {
            "type": "integer"
          },
          "numerals": {
            "type": "boolean"
          },
          "search": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "replace": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "keywords": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "interim_results": {
            "type": "boolean"
          },
          "endpointing": {
            "type": "boolean"
          }
        }
      },
      "GoogleMeet": {
        "type": "object",
        "properties": {
          "login_required": {
            "type": "boolean",
            "nullable": true,
            "description": "Specify if the bot should always login to Google before joining the meeting. This value will override the default value set on bot's Google Meet login credentials on the account. When set to 'false', the bot will only login if required by the meeting."
          }
        }
      },
      "Job": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "status": {
            "enum": [
              "in_progress",
              "completed",
              "errored"
            ],
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {}
            },
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "required": [
          "created_at",
          "errors",
          "id",
          "name",
          "status"
        ]
      },
      "JobStatusEnum": {
        "enum": [
          "in_progress",
          "completed",
          "errored"
        ],
        "type": "string"
      },
      "MeetInvite": {
        "type": "object",
        "properties": {
          "meeting_id": {
            "type": "string"
          }
        },
        "required": [
          "meeting_id"
        ]
      },
      "MeetingMetadata": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "readOnly": true,
            "description": "The title of the meeting the bot has joined."
          }
        },
        "required": [
          "title"
        ]
      },
      "MeetingParticipant": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "readOnly": true
          },
          "events": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "readOnly": true
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                }
              },
              "required": [
                "code",
                "created_at"
              ]
            },
            "readOnly": true
          }
        },
        "required": [
          "events",
          "id",
          "name"
        ]
      },
      "MeetingParticipantEvent": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "required": [
          "code",
          "created_at"
        ]
      },
      "MeetingPlatformEnum": {
        "enum": [
          "zoom",
          "google_meet",
          "microsoft_teams",
          "webex"
        ],
        "type": "string"
      },
      "NullEnum": {
        "enum": [
          null
        ]
      },
      "Output": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "type": {
            "enum": [
              "raw_audio_unmixed",
              "mp4_video_unmixed",
              "active_speaker_diarized_transcription_assemblyai",
              "active_speaker_diarized_transcription_awstranscribe",
              "active_speaker_diarized_transcription_deepgram",
              "active_speaker_diarized_transcription_rev",
              "active_speaker_diarized_transcription_symbl"
            ],
            "type": "string"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {}
          },
          "endpoints": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "endpoints",
          "id",
          "type"
        ]
      },
      "PaginatedBotList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "example": 123
          },
          "next": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=4"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=2"
          },
          "results": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "readOnly": true
                },
                "video_url": {
                  "type": "string",
                  "format": "uri",
                  "readOnly": true,
                  "description": "A URL where the video recorded by the bot can be downloaded. This is null while the recording is in progress, and will be populated when the recording is completed. The returned URL is valid for 6 hours from the API call. A fresh URL can be obtained at any point by calling the API again."
                },
                "recording": {
                  "type": "string",
                  "format": "uuid",
                  "nullable": true
                },
                "media_retention_end": {
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true,
                  "description": "After this date the video and transcript will be deleted. This date is 7 days from when the recording ended."
                },
                "status_changes": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "readOnly": true
                      },
                      "message": {
                        "type": "string",
                        "readOnly": true
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                      },
                      "sub_code": {
                        "type": "string",
                        "readOnly": true
                      }
                    },
                    "required": [
                      "code",
                      "created_at",
                      "message",
                      "sub_code"
                    ]
                  },
                  "readOnly": true
                },
                "meeting_metadata": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "title": {
                          "type": "string",
                          "readOnly": true,
                          "description": "The title of the meeting the bot has joined."
                        }
                      },
                      "required": [
                        "title"
                      ]
                    }
                  ],
                  "readOnly": true,
                  "nullable": true
                },
                "meeting_participants": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "readOnly": true
                      },
                      "events": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "readOnly": true
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "readOnly": true
                            }
                          },
                          "required": [
                            "code",
                            "created_at"
                          ]
                        },
                        "readOnly": true
                      }
                    },
                    "required": [
                      "events",
                      "id",
                      "name"
                    ]
                  },
                  "readOnly": true
                },
                "meeting_url": {
                  "type": "string",
                  "nullable": true,
                  "description": "The url of the meeting. For example, https://zoom.us/j/123?pwd=456. This field can only be read from scheduled bots that have not yet joined a call. Once a bot has joined a call, it's meeting_url will be cleared."
                },
                "bot_name": {
                  "type": "string",
                  "writeOnly": true,
                  "default": "Meeting Notetaker",
                  "description": "The name of the bot that will be displayed in the call.",
                  "maxLength": 100
                },
                "join_at": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": true,
                  "description": "The time at which the bot will join the call, formatted in ISO 8601. This field can only be read from scheduled bots that have not yet joined a call. Once a bot has joined a call, it's join_at will be cleared."
                },
                "real_time_transcription": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "destination_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "partial_results": {
                          "type": "boolean",
                          "default": false
                        }
                      },
                      "required": [
                        "destination_url"
                      ]
                    }
                  ],
                  "writeOnly": true,
                  "description": "The settings for real-time transcription."
                },
                "real_time_media": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "rtmp_destination_url": {
                          "type": "string"
                        },
                        "websocket_video_destination_url": {
                          "type": "string"
                        },
                        "websocket_audio_destination_url": {
                          "type": "string"
                        },
                        "websocket_speaker_timeline_destination_url": {
                          "type": "string"
                        },
                        "websocket_speaker_timeline_exclude_null_speaker": {
                          "type": "boolean",
                          "default": true,
                          "description": "Set to false to include null active speaker events in the speaker timeline websocket. Defaults to true."
                        },
                        "webhook_call_events_destination_url": {
                          "type": "string",
                          "description": "(BETA) Receive webhooks for in call events('bot.participant_join'/'bot.participant_leave'/'bot.active_speaker_notify')"
                        }
                      }
                    }
                  ],
                  "writeOnly": true,
                  "description": "The settings for real-time media output."
                },
                "transcription_options": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "provider": {
                          "enum": [
                            "deepgram",
                            "assembly_ai",
                            "rev",
                            "aws_transcribe",
                            "symbl",
                            "none"
                          ],
                          "type": "string"
                        },
                        "assembly_ai": {
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "word_boost": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          ],
                          "title": "AssemblyAi Real-time Transcription Settings",
                          "description": "Docs: https://www.assemblyai.com/docs/walkthroughs#realtime-streaming-transcription"
                        },
                        "deepgram": {
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "tier": {
                                  "type": "string"
                                },
                                "model": {
                                  "type": "string"
                                },
                                "version": {
                                  "type": "string"
                                },
                                "language": {
                                  "type": "string"
                                },
                                "profanity_filter": {
                                  "type": "boolean"
                                },
                                "redact": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "diarize": {
                                  "type": "boolean"
                                },
                                "diarize_version": {
                                  "type": "string"
                                },
                                "ner": {
                                  "type": "boolean"
                                },
                                "alternatives": {
                                  "type": "integer"
                                },
                                "numerals": {
                                  "type": "boolean"
                                },
                                "search": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "replace": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "keywords": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "interim_results": {
                                  "type": "boolean"
                                },
                                "endpointing": {
                                  "type": "boolean"
                                }
                              }
                            }
                          ],
                          "title": "Deepgram Real-time Transcription Settings",
                          "description": "Docs: https://developers.deepgram.com/api-reference/transcription/#transcribe-live-streaming-audio"
                        },
                        "rev": {
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "language": {
                                  "type": "string"
                                },
                                "metadata": {
                                  "type": "string"
                                },
                                "custom_vocabulary_id": {
                                  "type": "string",
                                  "maxLength": 200
                                },
                                "filter_profanity": {
                                  "type": "boolean"
                                },
                                "remove_disfluencies": {
                                  "type": "boolean"
                                },
                                "delete_after_seconds": {
                                  "type": "integer"
                                },
                                "detailed_partials": {
                                  "type": "boolean"
                                },
                                "start_ts": {
                                  "type": "number",
                                  "format": "double"
                                },
                                "max_segment_duration_seconds": {
                                  "type": "integer"
                                },
                                "transcriber": {
                                  "type": "string"
                                },
                                "enable_speaker_switch": {
                                  "type": "boolean"
                                },
                                "skip_postprocessing": {
                                  "type": "boolean"
                                },
                                "priority": {
                                  "type": "string"
                                }
                              }
                            }
                          ],
                          "title": "Rev Real-time Transcription Settings",
                          "description": "Docs: https://docs.rev.ai/api/streaming/requests/"
                        },
                        "aws_transcribe": {
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "language_code": {
                                  "type": "string"
                                },
                                "content_redaction_type": {
                                  "type": "string"
                                },
                                "language_model_name": {
                                  "type": "string"
                                },
                                "language_options": {
                                  "type": "string"
                                },
                                "language_identification": {
                                  "type": "boolean"
                                },
                                "partial_results_stability": {
                                  "type": "string"
                                },
                                "pii_entity_types": {
                                  "type": "string"
                                },
                                "preferred_language": {
                                  "type": "string"
                                },
                                "show_speaker_label": {
                                  "type": "boolean"
                                },
                                "vocabulary_filter_method": {
                                  "type": "string"
                                },
                                "vocabulary_filter_names": {
                                  "type": "string"
                                },
                                "vocabulary_names": {
                                  "type": "string"
                                }
                              }
                            }
                          ],
                          "title": "AWS Transcribe Real-time Transcription Settings",
                          "description": "Docs: https://docs.aws.amazon.com/transcribe/latest/APIReference/API_streaming_StartStreamTranscription.html"
                        }
                      },
                      "required": [
                        "provider"
                      ]
                    }
                  ],
                  "writeOnly": true
                },
                "chat": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "on_bot_join": {
                          "type": "object",
                          "properties": {
                            "send_to": {
                              "enum": [
                                "host",
                                "everyone",
                                "everyone_except_host"
                              ],
                              "type": "string"
                            },
                            "message": {
                              "type": "string",
                              "maxLength": 4096
                            }
                          },
                          "required": [
                            "message",
                            "send_to"
                          ]
                        },
                        "on_participant_join": {
                          "type": "object",
                          "properties": {
                            "message": {
                              "type": "string",
                              "maxLength": 4096
                            },
                            "exclude_host": {
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "exclude_host",
                            "message"
                          ]
                        }
                      }
                    }
                  ],
                  "writeOnly": true,
                  "description": "(BETA) Settings for the bot to send chat messages."
                },
                "zoom": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "join_token_url": {
                          "type": "string",
                          "format": "uri",
                          "description": "A URL which Recall will make a GET request to, in order to retrieve the Zoom Join Token for Local Recording, which the V2 Zoom bot uses to automatically record. This token can be generated through the Zoom API. Docs: https://marketplace.zoom.us/docs/api-reference/zoom-api/methods/#operation/meetingLocalRecordingJoinToken"
                        },
                        "zak_url": {
                          "type": "string",
                          "format": "uri",
                          "description": "A URL which Recall will make  GET request to, in order to retrieve the ZAK. The V1 Zoom bot uses this to join meetings that require authentication to join.This token can be generated through the Zoom API. Docs: https://marketplace.zoom.us/docs/api-reference/zoom-api/methods/#operation/userZak"
                        }
                      }
                    }
                  ],
                  "writeOnly": true,
                  "description": "Zoom specific parameters"
                },
                "google_meet": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "login_required": {
                          "type": "boolean",
                          "nullable": true,
                          "description": "Specify if the bot should always login to Google before joining the meeting. This value will override the default value set on bot's Google Meet login credentials on the account. When set to 'false', the bot will only login if required by the meeting."
                        }
                      }
                    }
                  ],
                  "writeOnly": true,
                  "description": "Google Meet specific parameters"
                },
                "automatic_leave": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "waiting_room_timeout": {
                          "type": "integer",
                          "minimum": 30,
                          "default": 1200,
                          "description": "The number of seconds after which the bot will automatically leave the call, if it has not been let in from the waiting room."
                        },
                        "noone_joined_timeout": {
                          "type": "integer",
                          "minimum": 30,
                          "default": 1200,
                          "description": "(BETA) The number of seconds after which the bot will automatically leave the call, if it has joined the meeting but no other participant has joined."
                        },
                        "everyone_left_timeout": {
                          "type": "integer",
                          "minimum": 1,
                          "default": 2,
                          "description": "(BETA) The number of seconds after which the bot will automatically leave the call, if there were other participants in the call who have all left."
                        }
                      }
                    }
                  ],
                  "writeOnly": true
                },
                "automatic_video_output": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "in_call_recording": {
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "allOf": [
                                    {
                                      "enum": [
                                        "jpeg"
                                      ],
                                      "type": "string"
                                    }
                                  ],
                                  "description": "The kind of data encoded in b64_data"
                                },
                                "b64_data": {
                                  "type": "string",
                                  "description": "Data encoded in Base64 format, using the standard alphabet (specified here: https://datatracker.ietf.org/doc/html/rfc4648#section-4)",
                                  "maxLength": 1835008
                                }
                              },
                              "required": [
                                "b64_data",
                                "kind"
                              ]
                            }
                          ],
                          "description": "The video that will be automatically output when the bot is in the in_call_recording state"
                        }
                      },
                      "required": [
                        "in_call_recording"
                      ]
                    }
                  ],
                  "writeOnly": true,
                  "description": "(BETA) Settings for the bot to output video."
                },
                "automatic_audio_output": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "in_call_recording": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "allOf": [
                                    {
                                      "enum": [
                                        "mp3"
                                      ],
                                      "type": "string"
                                    }
                                  ],
                                  "description": "The kind of data encoded in b64_data"
                                },
                                "b64_data": {
                                  "type": "string",
                                  "description": "Data encoded in Base64 format, using the standard alphabet (specified here: https://datatracker.ietf.org/doc/html/rfc4648#section-4)",
                                  "maxLength": 1835008
                                }
                              },
                              "required": [
                                "b64_data",
                                "kind"
                              ]
                            },
                            "replay_on_participant_join": {
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "debounce_interval": {
                                      "type": "integer",
                                      "description": "The amount of time to wait for additional participants to join before replaying the audio."
                                    }
                                  },
                                  "required": [
                                    "debounce_interval"
                                  ]
                                }
                              ],
                              "description": "Specify this parameter if you want the audio to be replayed when additional participants join the call."
                            }
                          },
                          "required": [
                            "data"
                          ]
                        }
                      },
                      "required": [
                        "in_call_recording"
                      ]
                    }
                  ],
                  "writeOnly": true,
                  "description": "(BETA) Settings for the bot to output audio."
                },
                "calendar_meetings": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                      },
                      "start_time": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                      },
                      "end_time": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                      },
                      "calendar_user": {
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid",
                                "readOnly": true
                              },
                              "external_id": {
                                "type": "string",
                                "readOnly": true
                              }
                            },
                            "required": [
                              "external_id",
                              "id"
                            ]
                          }
                        ],
                        "readOnly": true
                      }
                    },
                    "required": [
                      "calendar_user",
                      "end_time",
                      "id",
                      "start_time"
                    ]
                  },
                  "readOnly": true
                },
                "recording_mode": {
                  "allOf": [
                    {
                      "enum": [
                        "speaker_view",
                        "gallery_view",
                        "gallery_view_v2"
                      ],
                      "type": "string"
                    }
                  ],
                  "writeOnly": true,
                  "default": "speaker_view",
                  "description": "The layout of the output video."
                },
                "recording_mode_options": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "participant_video_when_screenshare": {
                          "allOf": [
                            {
                              "enum": [
                                "hide",
                                "beside",
                                "overlap"
                              ],
                              "type": "string"
                            }
                          ],
                          "description": "The layout of participant video streams when a screen is being shared. More docs: https://recallai.readme.io/reference/bot-faqs#5-what-do-the-recording-modes-look-like-when-specified-in-create-bot"
                        }
                      },
                      "required": [
                        "participant_video_when_screenshare"
                      ]
                    }
                  ],
                  "writeOnly": true,
                  "description": "Additional options for the output video layout."
                }
              },
              "required": [
                "calendar_meetings",
                "id",
                "media_retention_end",
                "meeting_metadata",
                "meeting_participants",
                "meeting_url",
                "status_changes",
                "video_url"
              ]
            }
          }
        }
      },
      "PaginatedBotScreenshotList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "example": 123
          },
          "next": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=4"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=2"
          },
          "results": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "readOnly": true
                },
                "recorded_at": {
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                },
                "url": {
                  "type": "string",
                  "format": "uri",
                  "readOnly": true,
                  "description": "A URL where the bot screenshot can be acccessed from."
                }
              },
              "required": [
                "id",
                "recorded_at",
                "url"
              ]
            }
          }
        }
      },
      "PaginatedCalendarEventList": {
        "type": "object",
        "properties": {
          "next": {
            "type": "string",
            "nullable": true
          },
          "previous": {
            "type": "string",
            "nullable": true
          },
          "results": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "readOnly": true
                },
                "start_time": {
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                },
                "end_time": {
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                },
                "calendar_id": {
                  "type": "string",
                  "format": "uuid",
                  "readOnly": true
                },
                "raw": {
                  "type": "object",
                  "additionalProperties": {},
                  "readOnly": true
                },
                "platform": {
                  "type": "string",
                  "readOnly": true
                },
                "platform_id": {
                  "type": "string",
                  "readOnly": true
                },
                "ical_uid": {
                  "type": "string",
                  "readOnly": true
                },
                "meeting_platform": {
                  "readOnly": true,
                  "nullable": true,
                  "oneOf": [
                    {
                      "enum": [
                        "zoom",
                        "google_meet",
                        "microsoft_teams",
                        "webex"
                      ],
                      "type": "string"
                    },
                    {
                      "enum": [
                        null
                      ]
                    }
                  ]
                },
                "meeting_url": {
                  "type": "string",
                  "readOnly": true,
                  "nullable": true
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                },
                "is_deleted": {
                  "type": "boolean",
                  "readOnly": true
                }
              },
              "required": [
                "calendar_id",
                "created_at",
                "end_time",
                "ical_uid",
                "id",
                "is_deleted",
                "meeting_platform",
                "meeting_url",
                "platform",
                "platform_id",
                "raw",
                "start_time",
                "updated_at"
              ]
            }
          }
        }
      },
      "PaginatedCalendarList": {
        "type": "object",
        "properties": {
          "next": {
            "type": "string",
            "nullable": true
          },
          "previous": {
            "type": "string",
            "nullable": true
          },
          "results": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "readOnly": true
                },
                "oauth_client_id": {
                  "type": "string",
                  "maxLength": 2000
                },
                "oauth_client_secret": {
                  "type": "string",
                  "maxLength": 2000
                },
                "oauth_refresh_token": {
                  "type": "string",
                  "maxLength": 2000
                },
                "platform": {
                  "enum": [
                    "google_calendar",
                    "microsoft_outlook"
                  ],
                  "type": "string"
                },
                "webhook_url": {
                  "type": "string",
                  "format": "uri",
                  "maxLength": 2000
                },
                "oauth_email": {
                  "type": "string",
                  "readOnly": true,
                  "nullable": true
                },
                "platform_email": {
                  "type": "string",
                  "readOnly": true,
                  "nullable": true
                },
                "status": {
                  "type": "string",
                  "readOnly": true
                },
                "status_changes": {
                  "type": "object",
                  "additionalProperties": {},
                  "readOnly": true
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                }
              },
              "required": [
                "created_at",
                "id",
                "oauth_client_id",
                "oauth_client_secret",
                "oauth_email",
                "oauth_refresh_token",
                "platform",
                "platform_email",
                "status",
                "status_changes",
                "updated_at",
                "webhook_url"
              ]
            }
          }
        }
      },
      "PaginatedClipList": {
        "type": "object",
        "properties": {
          "next": {
            "type": "string",
            "nullable": true
          },
          "previous": {
            "type": "string",
            "nullable": true
          },
          "results": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "bot_id": {
                  "type": "string",
                  "format": "uuid",
                  "writeOnly": true
                },
                "start_timestamp": {
                  "type": "number",
                  "format": "double",
                  "minimum": 0,
                  "writeOnly": true
                },
                "end_timestamp": {
                  "type": "number",
                  "format": "double",
                  "minimum": 0,
                  "writeOnly": true
                },
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "readOnly": true
                },
                "video_url": {
                  "type": "string",
                  "readOnly": true
                },
                "image_url": {
                  "type": "string",
                  "readOnly": true
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "required": [
                "bot_id",
                "end_timestamp",
                "id",
                "image_url",
                "start_timestamp",
                "video_url"
              ]
            }
          }
        }
      },
      "PaginatedClipStatusList": {
        "type": "object",
        "properties": {
          "next": {
            "type": "string",
            "nullable": true
          },
          "previous": {
            "type": "string",
            "nullable": true
          },
          "results": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "status": {
                  "enum": [
                    "submitted",
                    "progressing",
                    "complete",
                    "canceled",
                    "error"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "status"
              ]
            }
          }
        }
      },
      "PaginatedJobList": {
        "type": "object",
        "properties": {
          "next": {
            "type": "string",
            "nullable": true
          },
          "previous": {
            "type": "string",
            "nullable": true
          },
          "results": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "readOnly": true,
                  "nullable": true
                },
                "status": {
                  "enum": [
                    "in_progress",
                    "completed",
                    "errored"
                  ],
                  "type": "string"
                },
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {}
                  },
                  "readOnly": true
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                }
              },
              "required": [
                "created_at",
                "errors",
                "id",
                "name",
                "status"
              ]
            }
          }
        }
      },
      "ParticipantVideoWhenScreenshareEnum": {
        "enum": [
          "hide",
          "beside",
          "overlap"
        ],
        "type": "string"
      },
      "PatchedBot": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "video_url": {
            "type": "string",
            "format": "uri",
            "readOnly": true,
            "description": "A URL where the video recorded by the bot can be downloaded. This is null while the recording is in progress, and will be populated when the recording is completed. The returned URL is valid for 6 hours from the API call. A fresh URL can be obtained at any point by calling the API again."
          },
          "recording": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "media_retention_end": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "After this date the video and transcript will be deleted. This date is 7 days from when the recording ended."
          },
          "status_changes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "readOnly": true
                },
                "message": {
                  "type": "string",
                  "readOnly": true
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                },
                "sub_code": {
                  "type": "string",
                  "readOnly": true
                }
              },
              "required": [
                "code",
                "created_at",
                "message",
                "sub_code"
              ]
            },
            "readOnly": true
          },
          "meeting_metadata": {
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The title of the meeting the bot has joined."
                  }
                },
                "required": [
                  "title"
                ]
              }
            ],
            "readOnly": true,
            "nullable": true
          },
          "meeting_participants": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "readOnly": true
                },
                "events": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "readOnly": true
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                      }
                    },
                    "required": [
                      "code",
                      "created_at"
                    ]
                  },
                  "readOnly": true
                }
              },
              "required": [
                "events",
                "id",
                "name"
              ]
            },
            "readOnly": true
          },
          "meeting_url": {
            "type": "string",
            "nullable": true,
            "description": "The url of the meeting. For example, https://zoom.us/j/123?pwd=456. This field can only be read from scheduled bots that have not yet joined a call. Once a bot has joined a call, it's meeting_url will be cleared."
          },
          "bot_name": {
            "type": "string",
            "writeOnly": true,
            "default": "Meeting Notetaker",
            "description": "The name of the bot that will be displayed in the call.",
            "maxLength": 100
          },
          "join_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The time at which the bot will join the call, formatted in ISO 8601. This field can only be read from scheduled bots that have not yet joined a call. Once a bot has joined a call, it's join_at will be cleared."
          },
          "real_time_transcription": {
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "destination_url": {
                    "type": "string",
                    "format": "uri"
                  },
                  "partial_results": {
                    "type": "boolean",
                    "default": false
                  }
                },
                "required": [
                  "destination_url"
                ]
              }
            ],
            "writeOnly": true,
            "description": "The settings for real-time transcription."
          },
          "real_time_media": {
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "rtmp_destination_url": {
                    "type": "string"
                  },
                  "websocket_video_destination_url": {
                    "type": "string"
                  },
                  "websocket_audio_destination_url": {
                    "type": "string"
                  },
                  "websocket_speaker_timeline_destination_url": {
                    "type": "string"
                  },
                  "websocket_speaker_timeline_exclude_null_speaker": {
                    "type": "boolean",
                    "default": true,
                    "description": "Set to false to include null active speaker events in the speaker timeline websocket. Defaults to true."
                  },
                  "webhook_call_events_destination_url": {
                    "type": "string",
                    "description": "(BETA) Receive webhooks for in call events('bot.participant_join'/'bot.participant_leave'/'bot.active_speaker_notify')"
                  }
                }
              }
            ],
            "writeOnly": true,
            "description": "The settings for real-time media output."
          },
          "transcription_options": {
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "provider": {
                    "enum": [
                      "deepgram",
                      "assembly_ai",
                      "rev",
                      "aws_transcribe",
                      "symbl",
                      "none"
                    ],
                    "type": "string"
                  },
                  "assembly_ai": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "word_boost": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    ],
                    "title": "AssemblyAi Real-time Transcription Settings",
                    "description": "Docs: https://www.assemblyai.com/docs/walkthroughs#realtime-streaming-transcription"
                  },
                  "deepgram": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "tier": {
                            "type": "string"
                          },
                          "model": {
                            "type": "string"
                          },
                          "version": {
                            "type": "string"
                          },
                          "language": {
                            "type": "string"
                          },
                          "profanity_filter": {
                            "type": "boolean"
                          },
                          "redact": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "diarize": {
                            "type": "boolean"
                          },
                          "diarize_version": {
                            "type": "string"
                          },
                          "ner": {
                            "type": "boolean"
                          },
                          "alternatives": {
                            "type": "integer"
                          },
                          "numerals": {
                            "type": "boolean"
                          },
                          "search": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "replace": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "keywords": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "interim_results": {
                            "type": "boolean"
                          },
                          "endpointing": {
                            "type": "boolean"
                          }
                        }
                      }
                    ],
                    "title": "Deepgram Real-time Transcription Settings",
                    "description": "Docs: https://developers.deepgram.com/api-reference/transcription/#transcribe-live-streaming-audio"
                  },
                  "rev": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "language": {
                            "type": "string"
                          },
                          "metadata": {
                            "type": "string"
                          },
                          "custom_vocabulary_id": {
                            "type": "string",
                            "maxLength": 200
                          },
                          "filter_profanity": {
                            "type": "boolean"
                          },
                          "remove_disfluencies": {
                            "type": "boolean"
                          },
                          "delete_after_seconds": {
                            "type": "integer"
                          },
                          "detailed_partials": {
                            "type": "boolean"
                          },
                          "start_ts": {
                            "type": "number",
                            "format": "double"
                          },
                          "max_segment_duration_seconds": {
                            "type": "integer"
                          },
                          "transcriber": {
                            "type": "string"
                          },
                          "enable_speaker_switch": {
                            "type": "boolean"
                          },
                          "skip_postprocessing": {
                            "type": "boolean"
                          },
                          "priority": {
                            "type": "string"
                          }
                        }
                      }
                    ],
                    "title": "Rev Real-time Transcription Settings",
                    "description": "Docs: https://docs.rev.ai/api/streaming/requests/"
                  },
                  "aws_transcribe": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "language_code": {
                            "type": "string"
                          },
                          "content_redaction_type": {
                            "type": "string"
                          },
                          "language_model_name": {
                            "type": "string"
                          },
                          "language_options": {
                            "type": "string"
                          },
                          "language_identification": {
                            "type": "boolean"
                          },
                          "partial_results_stability": {
                            "type": "string"
                          },
                          "pii_entity_types": {
                            "type": "string"
                          },
                          "preferred_language": {
                            "type": "string"
                          },
                          "show_speaker_label": {
                            "type": "boolean"
                          },
                          "vocabulary_filter_method": {
                            "type": "string"
                          },
                          "vocabulary_filter_names": {
                            "type": "string"
                          },
                          "vocabulary_names": {
                            "type": "string"
                          }
                        }
                      }
                    ],
                    "title": "AWS Transcribe Real-time Transcription Settings",
                    "description": "Docs: https://docs.aws.amazon.com/transcribe/latest/APIReference/API_streaming_StartStreamTranscription.html"
                  }
                },
                "required": [
                  "provider"
                ]
              }
            ],
            "writeOnly": true
          },
          "chat": {
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "on_bot_join": {
                    "type": "object",
                    "properties": {
                      "send_to": {
                        "enum": [
                          "host",
                          "everyone",
                          "everyone_except_host"
                        ],
                        "type": "string"
                      },
                      "message": {
                        "type": "string",
                        "maxLength": 4096
                      }
                    },
                    "required": [
                      "message",
                      "send_to"
                    ]
                  },
                  "on_participant_join": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "maxLength": 4096
                      },
                      "exclude_host": {
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "exclude_host",
                      "message"
                    ]
                  }
                }
              }
            ],
            "writeOnly": true,
            "description": "(BETA) Settings for the bot to send chat messages."
          },
          "zoom": {
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "join_token_url": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URL which Recall will make a GET request to, in order to retrieve the Zoom Join Token for Local Recording, which the V2 Zoom bot uses to automatically record. This token can be generated through the Zoom API. Docs: https://marketplace.zoom.us/docs/api-reference/zoom-api/methods/#operation/meetingLocalRecordingJoinToken"
                  },
                  "zak_url": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URL which Recall will make  GET request to, in order to retrieve the ZAK. The V1 Zoom bot uses this to join meetings that require authentication to join.This token can be generated through the Zoom API. Docs: https://marketplace.zoom.us/docs/api-reference/zoom-api/methods/#operation/userZak"
                  }
                }
              }
            ],
            "writeOnly": true,
            "description": "Zoom specific parameters"
          },
          "google_meet": {
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "login_required": {
                    "type": "boolean",
                    "nullable": true,
                    "description": "Specify if the bot should always login to Google before joining the meeting. This value will override the default value set on bot's Google Meet login credentials on the account. When set to 'false', the bot will only login if required by the meeting."
                  }
                }
              }
            ],
            "writeOnly": true,
            "description": "Google Meet specific parameters"
          },
          "automatic_leave": {
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "waiting_room_timeout": {
                    "type": "integer",
                    "minimum": 30,
                    "default": 1200,
                    "description": "The number of seconds after which the bot will automatically leave the call, if it has not been let in from the waiting room."
                  },
                  "noone_joined_timeout": {
                    "type": "integer",
                    "minimum": 30,
                    "default": 1200,
                    "description": "(BETA) The number of seconds after which the bot will automatically leave the call, if it has joined the meeting but no other participant has joined."
                  },
                  "everyone_left_timeout": {
                    "type": "integer",
                    "minimum": 1,
                    "default": 2,
                    "description": "(BETA) The number of seconds after which the bot will automatically leave the call, if there were other participants in the call who have all left."
                  }
                }
              }
            ],
            "writeOnly": true
          },
          "automatic_video_output": {
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "in_call_recording": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "kind": {
                            "allOf": [
                              {
                                "enum": [
                                  "jpeg"
                                ],
                                "type": "string"
                              }
                            ],
                            "description": "The kind of data encoded in b64_data"
                          },
                          "b64_data": {
                            "type": "string",
                            "description": "Data encoded in Base64 format, using the standard alphabet (specified here: https://datatracker.ietf.org/doc/html/rfc4648#section-4)",
                            "maxLength": 1835008
                          }
                        },
                        "required": [
                          "b64_data",
                          "kind"
                        ]
                      }
                    ],
                    "description": "The video that will be automatically output when the bot is in the in_call_recording state"
                  }
                },
                "required": [
                  "in_call_recording"
                ]
              }
            ],
            "writeOnly": true,
            "description": "(BETA) Settings for the bot to output video."
          },
          "automatic_audio_output": {
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "in_call_recording": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "kind": {
                            "allOf": [
                              {
                                "enum": [
                                  "mp3"
                                ],
                                "type": "string"
                              }
                            ],
                            "description": "The kind of data encoded in b64_data"
                          },
                          "b64_data": {
                            "type": "string",
                            "description": "Data encoded in Base64 format, using the standard alphabet (specified here: https://datatracker.ietf.org/doc/html/rfc4648#section-4)",
                            "maxLength": 1835008
                          }
                        },
                        "required": [
                          "b64_data",
                          "kind"
                        ]
                      },
                      "replay_on_participant_join": {
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "debounce_interval": {
                                "type": "integer",
                                "description": "The amount of time to wait for additional participants to join before replaying the audio."
                              }
                            },
                            "required": [
                              "debounce_interval"
                            ]
                          }
                        ],
                        "description": "Specify this parameter if you want the audio to be replayed when additional participants join the call."
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                },
                "required": [
                  "in_call_recording"
                ]
              }
            ],
            "writeOnly": true,
            "description": "(BETA) Settings for the bot to output audio."
          },
          "calendar_meetings": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "readOnly": true
                },
                "start_time": {
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                },
                "end_time": {
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                },
                "calendar_user": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "readOnly": true
                        },
                        "external_id": {
                          "type": "string",
                          "readOnly": true
                        }
                      },
                      "required": [
                        "external_id",
                        "id"
                      ]
                    }
                  ],
                  "readOnly": true
                }
              },
              "required": [
                "calendar_user",
                "end_time",
                "id",
                "start_time"
              ]
            },
            "readOnly": true
          },
          "recording_mode": {
            "allOf": [
              {
                "enum": [
                  "speaker_view",
                  "gallery_view",
                  "gallery_view_v2"
                ],
                "type": "string"
              }
            ],
            "writeOnly": true,
            "default": "speaker_view",
            "description": "The layout of the output video."
          },
          "recording_mode_options": {
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "participant_video_when_screenshare": {
                    "allOf": [
                      {
                        "enum": [
                          "hide",
                          "beside",
                          "overlap"
                        ],
                        "type": "string"
                      }
                    ],
                    "description": "The layout of participant video streams when a screen is being shared. More docs: https://recallai.readme.io/reference/bot-faqs#5-what-do-the-recording-modes-look-like-when-specified-in-create-bot"
                  }
                },
                "required": [
                  "participant_video_when_screenshare"
                ]
              }
            ],
            "writeOnly": true,
            "description": "Additional options for the output video layout."
          }
        }
      },
      "PatchedCalendar": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "oauth_client_id": {
            "type": "string",
            "maxLength": 2000
          },
          "oauth_client_secret": {
            "type": "string",
            "maxLength": 2000
          },
          "oauth_refresh_token": {
            "type": "string",
            "maxLength": 2000
          },
          "platform": {
            "enum": [
              "google_calendar",
              "microsoft_outlook"
            ],
            "type": "string"
          },
          "webhook_url": {
            "type": "string",
            "format": "uri",
            "maxLength": 2000
          },
          "oauth_email": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "platform_email": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "status": {
            "type": "string",
            "readOnly": true
          },
          "status_changes": {
            "type": "object",
            "additionalProperties": {},
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "PatchedCalendarRecordingPreferences": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "record_non_host": {
            "type": "boolean"
          },
          "record_recurring": {
            "type": "boolean"
          },
          "record_external": {
            "type": "boolean"
          },
          "record_internal": {
            "type": "boolean"
          },
          "record_confirmed": {
            "type": "boolean"
          },
          "record_only_host": {
            "type": "boolean"
          },
          "bot_name": {
            "type": "string"
          }
        }
      },
      "PlatformEnum": {
        "enum": [
          "google_calendar",
          "microsoft_outlook"
        ],
        "type": "string"
      },
      "ProviderEnum": {
        "enum": [
          "deepgram",
          "assembly_ai",
          "rev",
          "aws_transcribe",
          "symbl",
          "none"
        ],
        "type": "string"
      },
      "RealTimeMedia": {
        "type": "object",
        "properties": {
          "rtmp_destination_url": {
            "type": "string"
          },
          "websocket_video_destination_url": {
            "type": "string"
          },
          "websocket_audio_destination_url": {
            "type": "string"
          },
          "websocket_speaker_timeline_destination_url": {
            "type": "string"
          },
          "websocket_speaker_timeline_exclude_null_speaker": {
            "type": "boolean",
            "default": true,
            "description": "Set to false to include null active speaker events in the speaker timeline websocket. Defaults to true."
          },
          "webhook_call_events_destination_url": {
            "type": "string",
            "description": "(BETA) Receive webhooks for in call events('bot.participant_join'/'bot.participant_leave'/'bot.active_speaker_notify')"
          }
        }
      },
      "RealTimeTranscription": {
        "type": "object",
        "properties": {
          "destination_url": {
            "type": "string",
            "format": "uri"
          },
          "partial_results": {
            "type": "boolean",
            "default": false
          }
        },
        "required": [
          "destination_url"
        ]
      },
      "Recording": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "outputs": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "readOnly": true
                },
                "type": {
                  "enum": [
                    "raw_audio_unmixed",
                    "mp4_video_unmixed",
                    "active_speaker_diarized_transcription_assemblyai",
                    "active_speaker_diarized_transcription_awstranscribe",
                    "active_speaker_diarized_transcription_deepgram",
                    "active_speaker_diarized_transcription_rev",
                    "active_speaker_diarized_transcription_symbl"
                  ],
                  "type": "string"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {}
                },
                "endpoints": {
                  "type": "string",
                  "readOnly": true
                }
              },
              "required": [
                "endpoints",
                "id",
                "type"
              ]
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "expires_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "required": [
          "created_at",
          "id",
          "outputs"
        ]
      },
      "RecordingModeEnum": {
        "enum": [
          "speaker_view",
          "gallery_view",
          "gallery_view_v2"
        ],
        "type": "string"
      },
      "RecordingModeOptionsSeriaizer": {
        "type": "object",
        "properties": {
          "participant_video_when_screenshare": {
            "allOf": [
              {
                "enum": [
                  "hide",
                  "beside",
                  "overlap"
                ],
                "type": "string"
              }
            ],
            "description": "The layout of participant video streams when a screen is being shared. More docs: https://recallai.readme.io/reference/bot-faqs#5-what-do-the-recording-modes-look-like-when-specified-in-create-bot"
          }
        },
        "required": [
          "participant_video_when_screenshare"
        ]
      },
      "RevAsyncTranscription": {
        "type": "object",
        "properties": {
          "detect_language": {
            "type": "boolean"
          },
          "language": {
            "type": "string",
            "description": "Docs: https://docs.rev.ai/api/asynchronous/reference/#operation/SubmitTranscriptionJob!ct=application/json&path=language&t=request"
          },
          "skip_diarization": {
            "type": "boolean",
            "description": "('Docs: https://docs.rev.ai/api/asynchronous/reference/#operation/SubmitTranscriptionJob!ct=application/json&path=skip_diarization&t=request',)"
          },
          "skip_postprocessing": {
            "type": "boolean",
            "description": "('Docs: https://docs.rev.ai/api/asynchronous/reference/#operation/SubmitTranscriptionJob!ct=application/json&path=skip_postprocessing&t=request',)"
          },
          "skip_punctuation": {
            "type": "boolean",
            "description": "('Docs: https://docs.rev.ai/api/asynchronous/reference/#operation/SubmitTranscriptionJob!ct=application/json&path=skip_punctuation&t=request',)"
          },
          "remove_disfluencies": {
            "type": "boolean",
            "description": "('Docs: https://docs.rev.ai/api/asynchronous/reference/#operation/SubmitTranscriptionJob!ct=application/json&path=remove_disfluencies&t=request',)"
          },
          "remove_atmospherics": {
            "type": "boolean",
            "description": "('Docs: https://docs.rev.ai/api/asynchronous/reference/#operation/SubmitTranscriptionJob!ct=application/json&path=remove_atmospherics&t=request',)"
          },
          "filter_profanity": {
            "type": "boolean",
            "description": "('Docs: https://docs.rev.ai/api/asynchronous/reference/#operation/SubmitTranscriptionJob!ct=application/json&path=filter_profanity&t=request',)"
          },
          "custom_vocabulary_id": {
            "type": "string",
            "description": "('Docs: https://docs.rev.ai/api/asynchronous/reference/#operation/SubmitTranscriptionJob!ct=)application/json&path=custom_vocabulary_id&t=request',)"
          },
          "custom_vocabularies": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "('Docs: https://docs.rev.ai/api/asynchronous/reference/#operation/SubmitTranscriptionJob!ct=application/json&path=custom_vocabularies&t=request',)"
          }
        }
      },
      "RevStreaming": {
        "type": "object",
        "properties": {
          "language": {
            "type": "string"
          },
          "metadata": {
            "type": "string"
          },
          "custom_vocabulary_id": {
            "type": "string",
            "maxLength": 200
          },
          "filter_profanity": {
            "type": "boolean"
          },
          "remove_disfluencies": {
            "type": "boolean"
          },
          "delete_after_seconds": {
            "type": "integer"
          },
          "detailed_partials": {
            "type": "boolean"
          },
          "start_ts": {
            "type": "number",
            "format": "double"
          },
          "max_segment_duration_seconds": {
            "type": "integer"
          },
          "transcriber": {
            "type": "string"
          },
          "enable_speaker_switch": {
            "type": "boolean"
          },
          "skip_postprocessing": {
            "type": "boolean"
          },
          "priority": {
            "type": "string"
          }
        }
      },
      "SendChatMessageInput": {
        "type": "object",
        "properties": {
          "to": {
            "allOf": [
              {
                "enum": [
                  "everyone"
                ],
                "type": "string"
              }
            ],
            "description": "The person or group that the message will be sent to. \"everyone\" is currently the only supported option, meaning the message will be sent to everyone in the meeting."
          },
          "message": {
            "type": "string",
            "description": "The message that will be sent.",
            "maxLength": 4096
          }
        },
        "required": [
          "message",
          "to"
        ]
      },
      "SendToEnum": {
        "enum": [
          "host",
          "everyone",
          "everyone_except_host"
        ],
        "type": "string"
      },
      "SpeakerTimelineEvent": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the speaker."
          },
          "user_id": {
            "type": "integer",
            "description": "The ID of the speaker, which can be used to match speaker names to real-time audio and video streams."
          },
          "timestamp": {
            "type": "number",
            "format": "double",
            "description": "The time relative to the start of the recording when this participant started speaking, in seconds."
          }
        },
        "required": [
          "name",
          "timestamp",
          "user_id"
        ]
      },
      "TeamsInvite": {
        "type": "object",
        "properties": {
          "organizer_id": {
            "type": "string"
          },
          "tenant_id": {
            "type": "string"
          },
          "message_id": {
            "type": "string"
          },
          "thread_id": {
            "type": "string"
          }
        },
        "required": [
          "message_id",
          "organizer_id",
          "tenant_id",
          "thread_id"
        ]
      },
      "ToEnum": {
        "enum": [
          "everyone"
        ],
        "type": "string"
      },
      "TranscriptParagraph": {
        "type": "object",
        "properties": {
          "speaker": {
            "type": "string",
            "description": "The name of the meeting participant who said these words."
          },
          "words": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "text": {
                  "type": "string"
                },
                "start_timestamp": {
                  "type": "number",
                  "format": "double"
                },
                "end_timestamp": {
                  "type": "number",
                  "format": "double"
                }
              },
              "required": [
                "end_timestamp",
                "start_timestamp",
                "text"
              ]
            }
          }
        },
        "required": [
          "speaker",
          "words"
        ]
      },
      "TranscriptWord": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string"
          },
          "start_timestamp": {
            "type": "number",
            "format": "double"
          },
          "end_timestamp": {
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "end_timestamp",
          "start_timestamp",
          "text"
        ]
      },
      "TranscriptionOptions": {
        "type": "object",
        "properties": {
          "provider": {
            "enum": [
              "deepgram",
              "assembly_ai",
              "rev",
              "aws_transcribe",
              "symbl",
              "none"
            ],
            "type": "string"
          },
          "assembly_ai": {
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "word_boost": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            ],
            "title": "AssemblyAi Real-time Transcription Settings",
            "description": "Docs: https://www.assemblyai.com/docs/walkthroughs#realtime-streaming-transcription"
          },
          "deepgram": {
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "tier": {
                    "type": "string"
                  },
                  "model": {
                    "type": "string"
                  },
                  "version": {
                    "type": "string"
                  },
                  "language": {
                    "type": "string"
                  },
                  "profanity_filter": {
                    "type": "boolean"
                  },
                  "redact": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "diarize": {
                    "type": "boolean"
                  },
                  "diarize_version": {
                    "type": "string"
                  },
                  "ner": {
                    "type": "boolean"
                  },
                  "alternatives": {
                    "type": "integer"
                  },
                  "numerals": {
                    "type": "boolean"
                  },
                  "search": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "replace": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "keywords": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "interim_results": {
                    "type": "boolean"
                  },
                  "endpointing": {
                    "type": "boolean"
                  }
                }
              }
            ],
            "title": "Deepgram Real-time Transcription Settings",
            "description": "Docs: https://developers.deepgram.com/api-reference/transcription/#transcribe-live-streaming-audio"
          },
          "rev": {
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "language": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": "string"
                  },
                  "custom_vocabulary_id": {
                    "type": "string",
                    "maxLength": 200
                  },
                  "filter_profanity": {
                    "type": "boolean"
                  },
                  "remove_disfluencies": {
                    "type": "boolean"
                  },
                  "delete_after_seconds": {
                    "type": "integer"
                  },
                  "detailed_partials": {
                    "type": "boolean"
                  },
                  "start_ts": {
                    "type": "number",
                    "format": "double"
                  },
                  "max_segment_duration_seconds": {
                    "type": "integer"
                  },
                  "transcriber": {
                    "type": "string"
                  },
                  "enable_speaker_switch": {
                    "type": "boolean"
                  },
                  "skip_postprocessing": {
                    "type": "boolean"
                  },
                  "priority": {
                    "type": "string"
                  }
                }
              }
            ],
            "title": "Rev Real-time Transcription Settings",
            "description": "Docs: https://docs.rev.ai/api/streaming/requests/"
          },
          "aws_transcribe": {
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "language_code": {
                    "type": "string"
                  },
                  "content_redaction_type": {
                    "type": "string"
                  },
                  "language_model_name": {
                    "type": "string"
                  },
                  "language_options": {
                    "type": "string"
                  },
                  "language_identification": {
                    "type": "boolean"
                  },
                  "partial_results_stability": {
                    "type": "string"
                  },
                  "pii_entity_types": {
                    "type": "string"
                  },
                  "preferred_language": {
                    "type": "string"
                  },
                  "show_speaker_label": {
                    "type": "boolean"
                  },
                  "vocabulary_filter_method": {
                    "type": "string"
                  },
                  "vocabulary_filter_names": {
                    "type": "string"
                  },
                  "vocabulary_names": {
                    "type": "string"
                  }
                }
              }
            ],
            "title": "AWS Transcribe Real-time Transcription Settings",
            "description": "Docs: https://docs.aws.amazon.com/transcribe/latest/APIReference/API_streaming_StartStreamTranscription.html"
          }
        },
        "required": [
          "provider"
        ]
      },
      "TypeEnum": {
        "enum": [
          "raw_audio_unmixed",
          "mp4_video_unmixed",
          "active_speaker_diarized_transcription_assemblyai",
          "active_speaker_diarized_transcription_awstranscribe",
          "active_speaker_diarized_transcription_deepgram",
          "active_speaker_diarized_transcription_rev",
          "active_speaker_diarized_transcription_symbl"
        ],
        "type": "string"
      },
      "UsageResponse": {
        "type": "object",
        "properties": {
          "bot_total": {
            "type": "number",
            "format": "double",
            "description": "The total amount of time, in seconds, of bots used."
          }
        },
        "required": [
          "bot_total"
        ]
      },
      "VideoOutput": {
        "type": "object",
        "properties": {
          "kind": {
            "allOf": [
              {
                "enum": [
                  "jpeg"
                ],
                "type": "string"
              }
            ],
            "description": "The kind of data encoded in b64_data"
          },
          "b64_data": {
            "type": "string",
            "description": "Data encoded in Base64 format, using the standard alphabet (specified here: https://datatracker.ietf.org/doc/html/rfc4648#section-4)",
            "maxLength": 1835008
          }
        },
        "required": [
          "b64_data",
          "kind"
        ]
      },
      "VideoOutputKindEnum": {
        "enum": [
          "jpeg"
        ],
        "type": "string"
      },
      "WebexInvite": {
        "type": "object",
        "properties": {
          "meeting_subdomain": {
            "type": "string"
          },
          "meeting_path": {
            "type": "string",
            "description": "This value is available only for Scheduled Webex meetings."
          },
          "meeting_mtid": {
            "type": "string",
            "description": "This value is available only for Scheduled Webex meetings."
          },
          "meeting_personal_room_id": {
            "type": "string",
            "description": "This value is available only for Personal room Webex meetings."
          }
        },
        "required": [
          "meeting_subdomain"
        ]
      },
      "Zoom": {
        "type": "object",
        "properties": {
          "join_token_url": {
            "type": "string",
            "format": "uri",
            "description": "A URL which Recall will make a GET request to, in order to retrieve the Zoom Join Token for Local Recording, which the V2 Zoom bot uses to automatically record. This token can be generated through the Zoom API. Docs: https://marketplace.zoom.us/docs/api-reference/zoom-api/methods/#operation/meetingLocalRecordingJoinToken"
          },
          "zak_url": {
            "type": "string",
            "format": "uri",
            "description": "A URL which Recall will make  GET request to, in order to retrieve the ZAK. The V1 Zoom bot uses this to join meetings that require authentication to join.This token can be generated through the Zoom API. Docs: https://marketplace.zoom.us/docs/api-reference/zoom-api/methods/#operation/userZak"
          }
        }
      },
      "ZoomInvite": {
        "type": "object",
        "properties": {
          "meeting_id": {
            "type": "string"
          },
          "meeting_password": {
            "type": "string"
          }
        },
        "required": [
          "meeting_id",
          "meeting_password"
        ]
      }
    },
    "securitySchemes": {
      "CalendarJwtAuthentication": {
        "type": "apiKey",
        "in": "header",
        "name": "x-recallcalendarauthtoken"
      },
      "tokenAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization",
        "description": "Token-based authentication with required prefix \"Token\""
      }
    }
  },
  "servers": [
    {
      "url": "https://api.recall.ai"
    }
  ]
}